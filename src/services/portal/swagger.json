{
  "swagger": "2.0",
  "info": {
    "title": "Harness Manager",
    "version": "1.0"
  },
  "host": "{{host}}",
  "basePath": "/api",
  "tags": [
    {
      "name": "agentdelegatesv2"
    },
    {
      "name": "v2delegate-token-internal"
    },
    {
      "name": "v2delegate-token"
    },
    {
      "name": "setupdelegatesv2"
    },
    {
      "name": "setupdelegatesngv2"
    },
    {
      "name": "agenttasks"
    },
    {
      "name": "delegate-token"
    },
    {
      "name": "upgraderdelegate"
    },
    {
      "name": "accessRequest"
    },
    {
      "name": "account"
    },
    {
      "name": "activities"
    },
    {
      "name": "alert-notification-rules"
    },
    {
      "name": "api-keys"
    },
    {
      "name": "app-containers"
    },
    {
      "name": "apps"
    },
    {
      "name": "appdynamics"
    },
    {
      "name": "app-manifests"
    },
    {
      "name": "artifacts"
    },
    {
      "name": "artifactstreams"
    },
    {
      "name": "audits"
    },
    {
      "name": "awshelper"
    },
    {
      "name": "azure"
    },
    {
      "name": "bins"
    },
    {
      "name": "budgets"
    },
    {
      "name": "bugsnag"
    },
    {
      "name": "build-sources"
    },
    {
      "name": "ceCommunications"
    },
    {
      "name": "ceMailUnsubscribe"
    },
    {
      "name": "ceReportSchedule"
    },
    {
      "name": "ceSlackWebhook"
    },
    {
      "name": "cv-activity-logs"
    },
    {
      "name": "cv-configuration"
    },
    {
      "name": "catalogs"
    },
    {
      "name": "events-config"
    },
    {
      "name": "cloudwatch"
    },
    {
      "name": "clusters"
    },
    {
      "name": "configs"
    },
    {
      "name": "cvdash"
    },
    {
      "name": "apm"
    },
    {
      "name": "dash-stats"
    },
    {
      "name": "datadog"
    },
    {
      "name": "agentdelegates"
    },
    {
      "name": "agentdelegateFiles"
    },
    {
      "name": "delegate-profiles"
    },
    {
      "name": "delegate-scopes"
    },
    {
      "name": "selection-logs"
    },
    {
      "name": "setupdelegates"
    },
    {
      "name": "setupdelegatesv3"
    },
    {
      "name": "delegate-task-selector-map"
    },
    {
      "name": "delegates-verification"
    },
    {
      "name": "dynatrace"
    },
    {
      "name": "elk"
    },
    {
      "name": "environments"
    },
    {
      "name": "executions"
    },
    {
      "name": "learning-exp"
    },
    {
      "name": "learning-exp-metric"
    },
    {
      "name": "export-executions"
    },
    {
      "name": "expression-builder"
    },
    {
      "name": "external"
    },
    {
      "name": "feature-flag"
    },
    {
      "name": "features"
    },
    {
      "name": "billing-accounts"
    },
    {
      "name": "gcp-organizations"
    },
    {
      "name": "git-sync"
    },
    {
      "name": "harness-api-keys"
    },
    {
      "name": "agentinfra-download"
    },
    {
      "name": "sampleapps"
    },
    {
      "name": "tags"
    },
    {
      "name": "harnessUserGroup"
    },
    {
      "name": "health"
    },
    {
      "name": "hosts"
    },
    {
      "name": "identity"
    },
    {
      "name": "infrastructure-definitions"
    },
    {
      "name": "infrastructure-mappings"
    },
    {
      "name": "infrastructure-provisioners"
    },
    {
      "name": "instana"
    },
    {
      "name": "log-classify"
    },
    {
      "name": "logml"
    },
    {
      "name": "logs"
    },
    {
      "name": "loginSettings"
    },
    {
      "name": "logz"
    },
    {
      "name": "mktplace"
    },
    {
      "name": "metrics"
    },
    {
      "name": "newrelic"
    },
    {
      "name": "notifications"
    },
    {
      "name": "notification-setup"
    },
    {
      "name": "pcfresource"
    },
    {
      "name": "perpetualTaskSchedule"
    },
    {
      "name": "pipelines"
    },
    {
      "name": "plugins"
    },
    {
      "name": "preference"
    },
    {
      "name": "prometheus"
    },
    {
      "name": "resource-constraints"
    },
    {
      "name": "resourcelookup"
    },
    {
      "name": "roles"
    },
    {
      "name": "sso"
    },
    {
      "name": "cf-feature"
    },
    {
      "name": "perpetual-task"
    },
    {
      "name": "scim"
    },
    {
      "name": "search"
    },
    {
      "name": "server"
    },
    {
      "name": "serverless-dashboard"
    },
    {
      "name": "service-instances"
    },
    {
      "name": "servicenow"
    },
    {
      "name": "services"
    },
    {
      "name": "service-templates"
    },
    {
      "name": "service-variables"
    },
    {
      "name": "settings"
    },
    {
      "name": "signup"
    },
    {
      "name": "slack"
    },
    {
      "name": "ngsmtp-config"
    },
    {
      "name": "splunkv2"
    },
    {
      "name": "stackdriver"
    },
    {
      "name": "statistics"
    },
    {
      "name": "sumo"
    },
    {
      "name": "timeseries"
    },
    {
      "name": "triggers"
    },
    {
      "name": "usageRestrictions"
    },
    {
      "name": "userGroups"
    },
    {
      "name": "users"
    },
    {
      "name": "version"
    },
    {
      "name": "versions"
    },
    {
      "name": "webhooks"
    },
    {
      "name": "whitelist"
    },
    {
      "name": "workflows"
    },
    {
      "name": "alerts"
    },
    {
      "name": "ccmperpetual-task"
    },
    {
      "name": "command-library"
    },
    {
      "name": "command-library-service"
    },
    {
      "name": "customDeploymentType"
    },
    {
      "name": "cv-nextgenservicechange-events"
    },
    {
      "name": "cv-nextgenservicecv-data-collection-task"
    },
    {
      "name": "kubernetes"
    },
    {
      "name": "cv-nextgensplunk"
    },
    {
      "name": "custom-dashboard"
    },
    {
      "name": "compliance-config"
    },
    {
      "name": "pipeline-compliance"
    },
    {
      "name": "graphql"
    },
    {
      "name": "limits"
    },
    {
      "name": "personalization"
    },
    {
      "name": "aws-secrets-manager"
    },
    {
      "name": "azure-secrets-manager"
    },
    {
      "name": "custom-secrets-managers"
    },
    {
      "name": "cyberark"
    },
    {
      "name": "gcp-secrets-manager"
    },
    {
      "name": "gcp-secrets-manager-v2"
    },
    {
      "name": "kms"
    },
    {
      "name": "ssh-vault"
    },
    {
      "name": "secrets"
    },
    {
      "name": "vault"
    },
    {
      "name": "template-galleries"
    },
    {
      "name": "templates"
    },
    {
      "name": "view"
    },
    {
      "name": "view-custom-field"
    },
    {
      "name": "yaml-history"
    },
    {
      "name": "setup-as-codeyaml"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/agent/delegates/v2/dummy": {
      "get": {
        "tags": ["agentdelegatesv2"],
        "operationId": "getDummy",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/v2/delegate-token-internal/default-for-orgs": {
      "get": {
        "tags": ["v2delegate-token-internal"],
        "operationId": "getOrgsWithActiveDefaultDelegateToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        },
        "deprecated": true
      }
    },
    "/v2/delegate-token-internal/default-for-projects": {
      "get": {
        "tags": ["v2delegate-token-internal"],
        "operationId": "getProjectsWithActiveDefaultDelegateToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        },
        "deprecated": true
      }
    },
    "/v2/delegate-token-internal/default": {
      "put": {
        "tags": ["v2delegate-token-internal"],
        "operationId": "upsertDefaultToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skipIfExists",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        },
        "deprecated": true
      }
    },
    "/v2/delegate-token": {
      "get": {
        "tags": ["v2delegate-token"],
        "operationId": "getDelegateTokens",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ACTIVE", "REVOKED"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListDelegateTokenDetails"
            }
          }
        }
      },
      "post": {
        "tags": ["v2delegate-token"],
        "operationId": "createToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateTokenDetails"
            }
          }
        }
      },
      "put": {
        "tags": ["v2delegate-token"],
        "operationId": "revokeToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/v2/delegate-token/default": {
      "put": {
        "tags": ["v2delegate-token"],
        "operationId": "upsertDefaultToken_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "skipIfExists",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/setup/delegates/v2/{delegateGroupId}": {
      "get": {
        "tags": ["setupdelegatesv2"],
        "operationId": "get",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupDetails"
            }
          }
        }
      },
      "put": {
        "tags": ["setupdelegatesv2"],
        "operationId": "update",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateGroupDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupDetails"
            }
          }
        }
      }
    },
    "/setup/delegates/v2": {
      "get": {
        "tags": ["setupdelegatesv2"],
        "operationId": "list",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupListing"
            }
          }
        }
      }
    },
    "/setup/delegates/v2/up-the-hierarchy": {
      "get": {
        "tags": ["setupdelegatesv2"],
        "operationId": "listUpTheHierarchy",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupListing"
            }
          }
        }
      }
    },
    "/setup/delegates/ng/v2/{identifier}": {
      "get": {
        "tags": ["setupdelegatesngv2"],
        "operationId": "get_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupDetails"
            }
          }
        }
      },
      "put": {
        "tags": ["setupdelegatesngv2"],
        "operationId": "update_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateGroupDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupDetails"
            }
          }
        }
      }
    },
    "/setup/delegates/ng/v2": {
      "get": {
        "tags": ["setupdelegatesngv2"],
        "operationId": "list_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupListing"
            }
          }
        }
      },
      "post": {
        "tags": ["setupdelegatesngv2"],
        "operationId": "listV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateFilterProperties"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupListing"
            }
          }
        }
      }
    },
    "/setup/delegates/ng/v2/up-the-hierarchy": {
      "get": {
        "tags": ["setupdelegatesngv2"],
        "operationId": "listUpTheHierarchy_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupListing"
            }
          }
        }
      }
    },
    "/agent/tasks/{taskId}/delegates/{delegateId}": {
      "post": {
        "tags": ["agenttasks"],
        "operationId": "updateTaskResponse",
        "consumes": ["application/x-kryo"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateTaskResponse"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/delegate-token": {
      "get": {
        "tags": ["delegate-token"],
        "operationId": "getDelegateTokens_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["ACTIVE", "REVOKED"]
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListDelegateTokenDetails"
            }
          }
        }
      },
      "post": {
        "tags": ["delegate-token"],
        "operationId": "createToken_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateTokenDetails"
            }
          }
        }
      },
      "put": {
        "tags": ["delegate-token"],
        "operationId": "revokeToken_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      },
      "delete": {
        "tags": ["delegate-token"],
        "operationId": "deleteToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/delegate-token/{tokenName}": {
      "get": {
        "tags": ["delegate-token"],
        "operationId": "getTokenValue",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/upgrader/delegate/upgrade-check/delegate": {
      "get": {
        "tags": ["upgraderdelegate"],
        "operationId": "getDelegateImageTag",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "currentDelegateImageTag",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePairBooleanString"
            }
          }
        }
      }
    },
    "/upgrader/delegate/upgrade-check/upgrader": {
      "get": {
        "tags": ["upgraderdelegate"],
        "operationId": "getUpgraderImageTag",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "currentUpgraderImageTag",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePairBooleanString"
            }
          }
        }
      }
    },
    "/accessRequest/{accountId}/{accessRequestId}": {
      "delete": {
        "tags": ["accessRequest"],
        "operationId": "delete",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessRequestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/accessRequest/{accountId}": {
      "post": {
        "tags": ["accessRequest"],
        "operationId": "create",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccessRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccessRequestDTO"
            }
          }
        }
      }
    },
    "/accessRequest/{accountId}/createAccessRequest": {
      "post": {
        "tags": ["accessRequest"],
        "operationId": "createAccessRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccessRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccessRequestDTO"
            }
          }
        }
      }
    },
    "/accessRequest/{accountId}/{accessRequestId}/deleteAccessRequest": {
      "delete": {
        "tags": ["accessRequest"],
        "operationId": "deleteAccessRequest",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessRequestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/accessRequest/{accountId}/listAccessRequest": {
      "get": {
        "tags": ["accessRequest"],
        "operationId": "listAccessRequest",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessRequestId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccessRequestDTO"
            }
          }
        }
      }
    },
    "/accessRequest/{accountId}/listAccessRequest/harnessUserGroup": {
      "get": {
        "tags": ["accessRequest"],
        "operationId": "listActiveAccessRequest",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "harnessUserGroupId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAccessRequestDTO"
            }
          }
        }
      }
    },
    "/accessRequest/{accountId}/listAccessRequest/account": {
      "get": {
        "tags": ["accessRequest"],
        "operationId": "listActiveAccessRequestForAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAccessRequestDTO"
            }
          }
        }
      }
    },
    "/accessRequest/{accountId}/listAllAccessRequest/account": {
      "get": {
        "tags": ["accessRequest"],
        "operationId": "listAllAccessRequestForAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAccessRequestDTO"
            }
          }
        }
      }
    },
    "/account/exportableCollections": {
      "get": {
        "tags": ["account"],
        "operationId": "exportAccountCollectionData",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/account/exportCollection": {
      "get": {
        "tags": ["account"],
        "operationId": "exportAccountCollectionData_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "ALL",
            "enum": ["ALL", "SPECIFIC"]
          },
          {
            "name": "entityTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collectionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportConfigs",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "batchSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mongoBatchSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "exportRecordsUpdatedAfter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "exportRecordsCreatedAfter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "identifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/account/exportBatchCollection": {
      "get": {
        "tags": ["account"],
        "operationId": "exportAccountCollectionBatchData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "ALL",
            "enum": ["ALL", "SPECIFIC"]
          },
          {
            "name": "entityTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "collectionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "exportConfigs",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "batchNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "batchSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mongoBatchSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "exportRecordsUpdatedAfter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "exportRecordsCreatedAfter",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "identifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/account/export": {
      "get": {
        "tags": ["account"],
        "operationId": "exportAccountData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "ALL",
            "enum": ["ALL", "SPECIFIC"]
          },
          {
            "name": "entityTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/account/import": {
      "post": {
        "tags": ["account"],
        "operationId": "importAccountData",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "UPSERT",
            "enum": ["DRY_RUN", "UPSERT", "INSERT"]
          },
          {
            "name": "singleCollectionImport",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "disableSchemaCheck",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "adminUser",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "adminPassword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "updateAccountAttributes",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseImportStatusReport"
            }
          }
        }
      }
    },
    "/account/{accountId}/details": {
      "get": {
        "tags": ["account"],
        "operationId": "getAccountDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccountDetails"
            }
          }
        }
      }
    },
    "/account": {
      "get": {
        "tags": ["account"],
        "operationId": "getAccounts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseAccount"
            }
          }
        }
      }
    },
    "/account/export-delete": {
      "delete": {
        "tags": ["account"],
        "operationId": "deleteExportableAccountData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/tech-stacks": {
      "put": {
        "tags": ["account"],
        "operationId": "updateTechStacks",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TechStack"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/delegate/generate": {
      "post": {
        "tags": ["account"],
        "operationId": "generateSampleDelegate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/account/enable": {
      "post": {
        "tags": ["account"],
        "operationId": "enableAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/disable": {
      "post": {
        "tags": ["account"],
        "operationId": "disableAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "migratedTo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/whitelisted-domains": {
      "get": {
        "tags": ["account"],
        "operationId": "getWhitelistedDomains",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      },
      "put": {
        "tags": ["account"],
        "operationId": "updateWhitelistedDomains",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccount"
            }
          }
        }
      }
    },
    "/account/custom-event": {
      "post": {
        "tags": ["account"],
        "operationId": "postCustomEvent",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountEvent"
            }
          },
          {
            "name": "oneTimeOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "trialOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/addSubdomainUrl": {
      "patch": {
        "tags": ["account"],
        "operationId": "addSubdomainUrl",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SubdomainUrl"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/updateAccountPreference": {
      "post": {
        "tags": ["account"],
        "operationId": "updateAccountPreference",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "preferenceKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/disableRestrictedAccess": {
      "put": {
        "tags": ["account"],
        "operationId": "enableHarnessUserGroupAccess",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/enableRestrictedAccess": {
      "put": {
        "tags": ["account"],
        "operationId": "disableHarnessUserGroupAccess",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/isRestrictedAccessEnabled": {
      "get": {
        "tags": ["account"],
        "operationId": "isRestrictedAccessEnabled",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/defaultExperience": {
      "put": {
        "tags": ["account"],
        "operationId": "updateDefaultExperience",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/account/feature-flag-enabled": {
      "get": {
        "tags": ["account"],
        "operationId": "isFeatureEnabled",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "featureName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/services-cv-24x7": {
      "get": {
        "tags": ["account"],
        "operationId": "getAllServicesFor24x7",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseCVEnabledService"
            }
          }
        }
      }
    },
    "/account/services-cv-24x7-breadcrumb": {
      "get": {
        "tags": ["account"],
        "operationId": "getAllServicesFor24x7_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListService"
            }
          }
        }
      }
    },
    "/account/continuous-efficiency/{accountId}/startTrial": {
      "post": {
        "tags": ["account"],
        "operationId": "startCeTrial",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/license/generate/{accountId}": {
      "put": {
        "tags": ["account"],
        "operationId": "generateLicense",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LicenseInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/account/delegate/active": {
      "get": {
        "tags": ["account"],
        "operationId": "checkSampleDelegate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/delegate/progress": {
      "get": {
        "tags": ["account"],
        "operationId": "checkProgressSampleDelegate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListProvisionStep"
            }
          }
        }
      }
    },
    "/account/createSampleApplication": {
      "post": {
        "tags": ["account"],
        "operationId": "createSampleApplication",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/latest": {
      "get": {
        "tags": ["account"],
        "operationId": "getLatestAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccount"
            }
          }
        }
      }
    },
    "/account/gcp": {
      "post": {
        "tags": ["account"],
        "operationId": "gcpSignUp",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["text/html"],
        "parameters": [
          {
            "name": "x-gcp-marketplace-token",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/account/{accountId}/set-service-guard-count": {
      "put": {
        "tags": ["account"],
        "operationId": "setServiceGuardAccountLimit",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceGuardLimitDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/account/{accountId}/enableHarnessUserGroupAccessWorkflow/{enableAccountId}": {
      "put": {
        "tags": ["account"],
        "operationId": "enableHarnessUserGroupAccessWorkflow",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "enableAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/disableHarnessUserGroupAccessWorkflow/{disableAccountId}": {
      "put": {
        "tags": ["account"],
        "operationId": "disableHarnessUserGroupAccessWorkflow",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "disableAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/ng/license": {
      "get": {
        "tags": ["account"],
        "operationId": "getNgAccountLicense",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccountLicenseDTO"
            }
          }
        }
      },
      "post": {
        "tags": ["account"],
        "operationId": "createNgLicense",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModuleLicenseDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseModuleLicenseDTO"
            }
          }
        }
      },
      "put": {
        "tags": ["account"],
        "operationId": "updateNgLicense",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ModuleLicenseDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseModuleLicenseDTO"
            }
          }
        }
      }
    },
    "/account/delete/{accountId}": {
      "delete": {
        "tags": ["account"],
        "operationId": "deleteAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}": {
      "get": {
        "tags": ["account"],
        "operationId": "getAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccount"
            }
          }
        }
      }
    },
    "/account/{accountId}/status": {
      "get": {
        "tags": ["account"],
        "operationId": "getStatus",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/account/new": {
      "post": {
        "tags": ["account"],
        "operationId": "createAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccount"
            }
          }
        }
      }
    },
    "/account/license/{accountId}": {
      "put": {
        "tags": ["account"],
        "operationId": "updateAccountLicense",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LicenseInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/license": {
      "put": {
        "tags": ["account"],
        "operationId": "updateAccountLicense_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LicenseUpdateInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountId}/sales-contacts": {
      "put": {
        "tags": ["account"],
        "operationId": "updateAccountSalesContacts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountSalesContactsInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccount"
            }
          }
        }
      }
    },
    "/account/validate-delegate-token": {
      "post": {
        "tags": ["account"],
        "operationId": "validateDelegateToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateToken",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/activities/{activityId}": {
      "get": {
        "tags": ["activities"],
        "operationId": "get_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseActivity"
            }
          }
        }
      }
    },
    "/activities": {
      "get": {
        "tags": ["activities"],
        "operationId": "list_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseActivity"
            }
          }
        }
      }
    },
    "/activities/{activityId}/logs": {
      "get": {
        "tags": ["activities"],
        "operationId": "listLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "unitName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseLog"
            }
          }
        }
      }
    },
    "/activities/{stateExecutionId}/api-call-logs": {
      "get": {
        "tags": ["activities"],
        "operationId": "listLogs_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseThirdPartyApiCallLog"
            }
          }
        }
      }
    },
    "/activities/{activityId}/units": {
      "get": {
        "tags": ["activities"],
        "operationId": "getActivityCommandUnits",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCommandUnitDetails"
            }
          }
        }
      }
    },
    "/activities/{activityId}/all-logs": {
      "get": {
        "tags": ["activities"],
        "operationId": "exportLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/alert-notification-rules": {
      "get": {
        "tags": ["alert-notification-rules"],
        "operationId": "list_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAlertNotificationRule"
            }
          }
        }
      },
      "post": {
        "tags": ["alert-notification-rules"],
        "operationId": "createAlertNotificationRule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlertNotificationRule"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAlertNotificationRule"
            }
          }
        }
      }
    },
    "/alert-notification-rules/status": {
      "get": {
        "tags": ["alert-notification-rules"],
        "operationId": "getStatus_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseNotificationRulesStatus"
            }
          }
        }
      },
      "put": {
        "tags": ["alert-notification-rules"],
        "operationId": "updateStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationRulesStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseNotificationRulesStatus"
            }
          }
        }
      }
    },
    "/alert-notification-rules/{alertNotificationRuleId}": {
      "put": {
        "tags": ["alert-notification-rules"],
        "operationId": "updateAlertNotificationRule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "alertNotificationRuleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlertNotificationRule"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAlertNotificationRule"
            }
          }
        }
      },
      "delete": {
        "tags": ["alert-notification-rules"],
        "operationId": "deleteAlertNotificationRule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "alertNotificationRuleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/api-keys/{apiKeyId}": {
      "get": {
        "tags": ["api-keys"],
        "operationId": "get_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "apiKeyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApiKeyEntry"
            }
          }
        }
      },
      "put": {
        "tags": ["api-keys"],
        "operationId": "update_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "apiKeyId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApiKeyEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApiKeyEntry"
            }
          }
        }
      },
      "delete": {
        "tags": ["api-keys"],
        "operationId": "delete_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "apiKeyId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/api-keys": {
      "get": {
        "tags": ["api-keys"],
        "operationId": "list_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseApiKeyEntry"
            }
          }
        }
      },
      "post": {
        "tags": ["api-keys"],
        "operationId": "generate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApiKeyEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApiKeyEntry"
            }
          }
        }
      },
      "delete": {
        "tags": ["api-keys"],
        "operationId": "deleteAll",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringObject"
            }
          }
        }
      }
    },
    "/api-keys/validate": {
      "post": {
        "tags": ["api-keys"],
        "operationId": "validate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/app-containers": {
      "get": {
        "tags": ["app-containers"],
        "operationId": "list_5",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseAppContainer"
            }
          }
        }
      },
      "post": {
        "tags": ["app-containers"],
        "operationId": "uploadPlatform",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "url",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "md5",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "standard",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "family",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": ["TOMCAT", "JBOSS"]
          },
          {
            "name": "version",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAppContainer"
            }
          }
        }
      }
    },
    "/app-containers/{appContainerId}": {
      "get": {
        "tags": ["app-containers"],
        "operationId": "get_4",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appContainerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAppContainer"
            }
          }
        }
      },
      "put": {
        "tags": ["app-containers"],
        "operationId": "updatePlatform",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appContainerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "url",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "md5",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "standard",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "family",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": ["TOMCAT", "JBOSS"]
          },
          {
            "name": "version",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAppContainer"
            }
          }
        }
      },
      "delete": {
        "tags": ["app-containers"],
        "operationId": "deletePlatform",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appContainerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/app-containers/{appContainerId}/download": {
      "get": {
        "tags": ["app-containers"],
        "operationId": "download",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appContainerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/apps/{appId}": {
      "get": {
        "tags": ["apps"],
        "operationId": "get_5",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplication"
            }
          }
        }
      },
      "put": {
        "tags": ["apps"],
        "operationId": "update_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplication"
            }
          }
        }
      },
      "delete": {
        "tags": ["apps"],
        "operationId": "delete_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/apps": {
      "get": {
        "tags": ["apps"],
        "operationId": "list_6",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withTags",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseApplication"
            }
          }
        }
      },
      "post": {
        "tags": ["apps"],
        "operationId": "save",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplication"
            }
          }
        }
      }
    },
    "/appdynamics/applications": {
      "get": {
        "tags": ["appdynamics"],
        "operationId": "getAllApplications",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNewRelicApplication"
            }
          }
        }
      }
    },
    "/appdynamics/node-data": {
      "post": {
        "tags": ["appdynamics"],
        "operationId": "getMetricsWithDataForNode",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AppdynamicsSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/appdynamics/tiers": {
      "get": {
        "tags": ["appdynamics"],
        "operationId": "getAllTiers",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appdynamicsAppId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetAppdynamicsTier"
            }
          }
        }
      }
    },
    "/app-manifests/{appManifestId}/manifest-file": {
      "post": {
        "tags": ["app-manifests"],
        "operationId": "createManifestFile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManifestFile"
            }
          },
          {
            "name": "removeNamespace",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      }
    },
    "/app-manifests/{appManifestId}/manifest-file/{manifestFileId}": {
      "get": {
        "tags": ["app-manifests"],
        "operationId": "getManifestFile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      },
      "put": {
        "tags": ["app-manifests"],
        "operationId": "updateManifestFile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManifestFile"
            }
          },
          {
            "name": "removeNamespace",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      },
      "delete": {
        "tags": ["app-manifests"],
        "operationId": "deleteManifestFile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/app-manifests": {
      "get": {
        "tags": ["app-manifests"],
        "operationId": "list_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseApplicationManifest"
            }
          }
        }
      },
      "post": {
        "tags": ["app-manifests"],
        "operationId": "createApplicationManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationManifest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      }
    },
    "/app-manifests/{appManifestId}": {
      "get": {
        "tags": ["app-manifests"],
        "operationId": "getApplicationManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      },
      "put": {
        "tags": ["app-manifests"],
        "operationId": "updateApplicationManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationManifest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      },
      "delete": {
        "tags": ["app-manifests"],
        "operationId": "deleteApplicationManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/app-manifests/{appManifestId}/manifest-files-from-git": {
      "get": {
        "tags": ["app-manifests"],
        "operationId": "getManifestFilesFromGit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDirectoryNode"
            }
          }
        }
      }
    },
    "/app-manifests/{appManifestId}/manifest-files": {
      "get": {
        "tags": ["app-manifests"],
        "operationId": "listManifestFiles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListManifestFile"
            }
          }
        }
      }
    },
    "/app-manifests/{appManifestId}/manifest-files/delete-all": {
      "post": {
        "tags": ["app-manifests"],
        "operationId": "deleteAllManifestFilesByAppManifestId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/app-manifests/list-with-polling-enabled": {
      "get": {
        "tags": ["app-manifests"],
        "operationId": "listPollingEnabled",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseApplicationManifest"
            }
          }
        }
      }
    },
    "/artifacts/{artifactId}": {
      "get": {
        "tags": ["artifacts"],
        "operationId": "get_6",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifact"
            }
          }
        }
      },
      "put": {
        "tags": ["artifacts"],
        "operationId": "update_4",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifact"
            }
          }
        }
      },
      "delete": {
        "tags": ["artifacts"],
        "operationId": "delete_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/artifacts": {
      "get": {
        "tags": ["artifacts"],
        "operationId": "list_8",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "routingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseArtifact"
            }
          }
        }
      },
      "post": {
        "tags": ["artifacts"],
        "operationId": "save_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifact"
            }
          }
        }
      },
      "put": {
        "tags": ["artifacts"],
        "operationId": "collectArtifactContent",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifact"
            }
          }
        }
      }
    },
    "/artifacts/v2": {
      "get": {
        "tags": ["artifacts"],
        "operationId": "listArtifactsByServiceId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseArtifact"
            }
          }
        }
      }
    },
    "/artifacts/{artifactId}/artifactFile": {
      "get": {
        "tags": ["artifacts"],
        "operationId": "download_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/artifactstreams/{streamId}": {
      "get": {
        "tags": ["artifactstreams"],
        "operationId": "get_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "streamId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStream"
            }
          }
        }
      },
      "put": {
        "tags": ["artifactstreams"],
        "operationId": "update_5",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "streamId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ArtifactStream"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStream"
            }
          }
        }
      }
    },
    "/artifactstreams/{id}": {
      "delete": {
        "tags": ["artifactstreams"],
        "operationId": "delete_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/artifactstreams": {
      "get": {
        "tags": ["artifactstreams"],
        "operationId": "list_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withArtifactCount",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "artifactSearchString",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseArtifactStream"
            }
          }
        }
      },
      "post": {
        "tags": ["artifactstreams"],
        "operationId": "save_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ArtifactStream"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStream"
            }
          }
        }
      }
    },
    "/artifactstreams/buildsource-types": {
      "get": {
        "tags": ["artifactstreams"],
        "operationId": "getBuildSourceTypes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/artifactstreams/summary": {
      "get": {
        "tags": ["artifactstreams"],
        "operationId": "listArtifactStreamSummary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListArtifactStreamSummary"
            }
          }
        }
      }
    },
    "/artifactstreams/{id}/parameters": {
      "get": {
        "tags": ["artifactstreams"],
        "operationId": "listArtifactStreamParameters",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/artifactstreams/resetCollection/{id}": {
      "patch": {
        "tags": ["artifactstreams"],
        "operationId": "resetArtifactCollection",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStream"
            }
          }
        }
      }
    },
    "/audits/filter": {
      "get": {
        "tags": ["audits"],
        "operationId": "listUsingFilter",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseAuditHeader"
            }
          }
        }
      }
    },
    "/audits/{auditHeaderId}/yamldetails": {
      "get": {
        "tags": ["audits"],
        "operationId": "getAuditHeaderDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "auditHeaderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAuditHeaderYamlResponse"
            }
          }
        }
      }
    },
    "/audits": {
      "get": {
        "tags": ["audits"],
        "operationId": "list_10",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseAuditHeader"
            }
          }
        }
      }
    },
    "/awshelper/tags": {
      "get": {
        "tags": ["awshelper"],
        "operationId": "listTags",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/awshelper/regions": {
      "get": {
        "tags": ["awshelper"],
        "operationId": "list_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        },
        "deprecated": true
      }
    },
    "/awshelper/buckets/{settingId}": {
      "get": {
        "tags": ["awshelper"],
        "operationId": "listBuckets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/awshelper/cloudformation/capabilities": {
      "get": {
        "tags": ["awshelper"],
        "operationId": "listCloudformationCapabilities",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/awshelper/cf-states": {
      "get": {
        "tags": ["awshelper"],
        "operationId": "listCloudFormationStatues",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        },
        "deprecated": true
      }
    },
    "/awshelper/aws-regions": {
      "get": {
        "tags": ["awshelper"],
        "operationId": "listAwsRegions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNameValuePair"
            }
          }
        }
      }
    },
    "/azure/subscriptions": {
      "get": {
        "tags": ["azure"],
        "operationId": "listSubscriptions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/azure/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/imageGalleries": {
      "get": {
        "tags": ["azure"],
        "operationId": "listImageGalleries",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAzureImageGallery"
            }
          }
        }
      }
    },
    "/azure/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/imageGalleries/{galleryName}/imageDefinitions": {
      "get": {
        "tags": ["azure"],
        "operationId": "listImageDefinitions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "galleryName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAzureImageDefinition"
            }
          }
        }
      }
    },
    "/azure/subscriptions/{subscriptionId}/resourceGroups": {
      "get": {
        "tags": ["azure"],
        "operationId": "listResourceGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAzureResourceGroup"
            }
          }
        }
      }
    },
    "/azure/subscriptions/{subscriptionId}/containerRegistriesWithDetails": {
      "get": {
        "tags": ["azure"],
        "operationId": "listContainerRegistriesWithDetails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAzureContainerRegistry"
            }
          }
        }
      }
    },
    "/azure/subscriptions/{subscriptionId}/containerRegistries": {
      "get": {
        "tags": ["azure"],
        "operationId": "listContainerRegistries",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/azure/subscriptions/{subscriptionId}/containerRegistries/{registryName}/repositories": {
      "get": {
        "tags": ["azure"],
        "operationId": "listRepositories",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/azure/subscriptions/{subscriptionId}/containerRegistries/{registryName}/repositories/{repositoryName}/tags": {
      "get": {
        "tags": ["azure"],
        "operationId": "listRepositoryTags",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repositoryName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/azure/subscriptions/{subscriptionId}/kubernetesClusters": {
      "get": {
        "tags": ["azure"],
        "operationId": "listKubernetesClusters",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAzureKubernetesCluster"
            }
          }
        }
      }
    },
    "/azure/regions": {
      "get": {
        "tags": ["azure"],
        "operationId": "listAzureRegions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNameValuePair"
            }
          }
        }
      }
    },
    "/bins/framework": {
      "get": {
        "tags": ["bins"],
        "operationId": "framework",
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/budgets/{id}": {
      "get": {
        "tags": ["budgets"],
        "operationId": "get_8",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBudget"
            }
          }
        }
      },
      "post": {
        "tags": ["budgets"],
        "operationId": "clone",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloneName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "put": {
        "tags": ["budgets"],
        "operationId": "update_6",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["budgets"],
        "operationId": "delete_5",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/budgets/perspectiveBudgets": {
      "get": {
        "tags": ["budgets"],
        "operationId": "list_12",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListBudget"
            }
          }
        }
      }
    },
    "/budgets": {
      "get": {
        "tags": ["budgets"],
        "operationId": "list_13",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListBudget"
            }
          }
        }
      },
      "post": {
        "tags": ["budgets"],
        "operationId": "save_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/bugsnag/node-data": {
      "post": {
        "tags": ["bugsnag"],
        "operationId": "getLogRecords",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BugsnagSetupTestData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/bugsnag/applications": {
      "get": {
        "tags": ["bugsnag"],
        "operationId": "getBugsnagApplications",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetBugsnagApplication"
            }
          }
        }
      }
    },
    "/bugsnag/orgs": {
      "get": {
        "tags": ["bugsnag"],
        "operationId": "getBugsnagOrganizations",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetBugsnagApplication"
            }
          }
        }
      }
    },
    "/build-sources/builds": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getBuilds",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "artifactStreamId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListBuildDetails"
            }
          }
        }
      }
    },
    "/build-sources/projects": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "listProjects",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAzureDevopsProject"
            }
          }
        }
      }
    },
    "/build-sources/feeds": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "listFeeds",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAzureArtifactsFeed"
            }
          }
        }
      }
    },
    "/build-sources/feeds/{feed}/packages": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "listPackages",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "feed",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "protocolType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAzureArtifactsPackage"
            }
          }
        }
      }
    },
    "/build-sources/jobs": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getJobs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "parentJobName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetJobDetails"
            }
          }
        }
      }
    },
    "/build-sources/jobs/{jobName}/details": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getJob",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseJobDetails"
            }
          }
        }
      }
    },
    "/build-sources/jobs/{jobName}/paths": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getArtifactPaths",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "streamType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repositoryFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/build-sources/smb-paths": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getSmbPaths",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/build-sources/jobs/{jobName}/groupIds": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getGroupIds",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repositoryFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/build-sources": {
      "post": {
        "tags": ["build-sources"],
        "operationId": "collectArtifact",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "artifactStreamId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BuildDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifact"
            }
          }
        }
      }
    },
    "/build-sources/project": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getProject",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/build-sources/buckets": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getBuckets",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/build-sources/plans": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getBuildPlans",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "streamType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repositoryType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repositoryFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/build-sources/artifact-paths": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getSftpPaths",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "streamType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/build-sources/nexus/repositories/{repositoryName}/packageNames": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "fetchPackageNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repositoryName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repositoryFormat",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/build-sources/gcb-triggers": {
      "get": {
        "tags": ["build-sources"],
        "operationId": "getTriggers",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/ceCommunications": {
      "get": {
        "tags": ["ceCommunications"],
        "operationId": "get_9",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCECommunications"
            }
          }
        }
      },
      "post": {
        "tags": ["ceCommunications"],
        "operationId": "update_7",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["WEEKLY_REPORT"]
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/ceCommunications/{accountId}": {
      "get": {
        "tags": ["ceCommunications"],
        "operationId": "getEntriesEnabledViaEmails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      },
      "post": {
        "tags": ["ceCommunications"],
        "operationId": "enableViaEmail",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["WEEKLY_REPORT"]
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["ceCommunications"],
        "operationId": "removeEmail",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["WEEKLY_REPORT"]
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/ceCommunications/{accountId}/addEmails": {
      "post": {
        "tags": ["ceCommunications"],
        "operationId": "addMultipleEmail",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["WEEKLY_REPORT"]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/ceCommunications/{accountId}/internal": {
      "post": {
        "tags": ["ceCommunications"],
        "operationId": "enableViaEmailInternal",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetAccount",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["WEEKLY_REPORT"]
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["ceCommunications"],
        "operationId": "removeEmailInternal",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetAccount",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["WEEKLY_REPORT"]
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/ceMailUnsubscribe/{id}": {
      "post": {
        "tags": ["ceMailUnsubscribe"],
        "operationId": "unsubscribe",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/ceReportSchedule/{accountId}": {
      "get": {
        "tags": ["ceReportSchedule"],
        "operationId": "getReportSetting",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "viewId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reportId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": ["ceReportSchedule"],
        "operationId": "createReportSetting",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEReportSchedule"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": ["ceReportSchedule"],
        "operationId": "updateReportSetting",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEReportSchedule"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["ceReportSchedule"],
        "operationId": "deleteReportSetting",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "reportId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/ceReportSchedule/{accountId}/sendReport": {
      "post": {
        "tags": ["ceReportSchedule"],
        "operationId": "sendReport",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "viewId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/ceSlackWebhooks": {
      "get": {
        "tags": ["ceSlackWebhook"],
        "operationId": "get_10",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCESlackWebhook"
            }
          }
        }
      },
      "post": {
        "tags": ["ceSlackWebhook"],
        "operationId": "save_4",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CESlackWebhook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCESlackWebhook"
            }
          }
        }
      }
    },
    "/cv-activity-logs": {
      "get": {
        "tags": ["cv-activity-logs"],
        "operationId": "getActivityLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVActivityLog"
            }
          }
        }
      }
    },
    "/cv-configuration": {
      "get": {
        "tags": ["cv-configuration"],
        "operationId": "listConfigurations",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVConfiguration"
            }
          }
        }
      },
      "post": {
        "tags": ["cv-configuration"],
        "operationId": "saveCVConfiguration",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/cv-configuration/list-cv-configurations": {
      "get": {
        "tags": ["cv-configuration"],
        "operationId": "listConfigurations_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "envIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVConfiguration"
            }
          }
        }
      }
    },
    "/cv-configuration/{serviceConfigurationId}": {
      "get": {
        "tags": ["cv-configuration"],
        "operationId": "getConfiguration",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceConfigurationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCVConfiguration"
            }
          }
        }
      },
      "put": {
        "tags": ["cv-configuration"],
        "operationId": "updateCVConfiguration",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "serviceConfigurationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["cv-configuration"],
        "operationId": "deleteCVConfiguration",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "serviceConfigurationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/cv-configuration/reset-baseline": {
      "post": {
        "tags": ["cv-configuration"],
        "operationId": "resetBaseline",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LogsCVConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/cv-configuration/update-alert-setting": {
      "post": {
        "tags": ["cv-configuration"],
        "operationId": "updateAlertSettings",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CVConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/cv-configuration/update-snooze": {
      "post": {
        "tags": ["cv-configuration"],
        "operationId": "updateSnooze",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CVConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/catalogs": {
      "get": {
        "tags": ["catalogs"],
        "operationId": "list_14",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "catalogType",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringObject"
            }
          }
        }
      }
    },
    "/catalogs/app-catalogs": {
      "get": {
        "tags": ["catalogs"],
        "operationId": "listForApp",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "catalogType",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringObject"
            }
          }
        }
      }
    },
    "/events-config": {
      "get": {
        "tags": ["events-config"],
        "operationId": "list_15",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCgEventConfig"
            }
          }
        }
      },
      "post": {
        "tags": ["events-config"],
        "operationId": "createEventConfig",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CgEventConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCgEventConfig"
            }
          }
        }
      }
    },
    "/events-config/{eventConfigId}": {
      "get": {
        "tags": ["events-config"],
        "operationId": "getEventConfig",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCgEventConfig"
            }
          }
        }
      },
      "put": {
        "tags": ["events-config"],
        "operationId": "updateEventConfig",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CgEventConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCgEventConfig"
            }
          }
        }
      },
      "delete": {
        "tags": ["events-config"],
        "operationId": "deleteEventConfig",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCgEventConfig"
            }
          }
        }
      }
    },
    "/events-config/{eventConfigId}/enable": {
      "put": {
        "tags": ["events-config"],
        "operationId": "updateToggle",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CgEventConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCgEventConfig"
            }
          }
        }
      }
    },
    "/events-config/{eventConfigId}/test": {
      "post": {
        "tags": ["events-config"],
        "operationId": "sendTestEvent",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "eventConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/cloudwatch/get-load-balancers": {
      "get": {
        "tags": ["cloudwatch"],
        "operationId": "getLoadBalancerNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/cloudwatch/get-lambda-functions": {
      "get": {
        "tags": ["cloudwatch"],
        "operationId": "getLambdaFunctionsNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/cloudwatch/get-ec2-instances": {
      "get": {
        "tags": ["cloudwatch"],
        "operationId": "getEC2Instances",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/cloudwatch/get-ecs-cluster-names": {
      "get": {
        "tags": ["cloudwatch"],
        "operationId": "getECSClusterNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/cloudwatch/node-data": {
      "post": {
        "tags": ["cloudwatch"],
        "operationId": "getMetricsWithDataForNode_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CloudWatchSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/cloudwatch/get-metric-names": {
      "get": {
        "tags": ["cloudwatch"],
        "operationId": "getMetricNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "awsNameSpace",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "APIGATEWAY",
              "APPSTREAM",
              "AUTOSCALING",
              "BILLING",
              "CLOUDFRONT",
              "CLOUDSEARCH",
              "EVENTS",
              "LOGS",
              "CONNECT",
              "DMS",
              "DX",
              "DYNAMODB",
              "EC2",
              "EC2SPOT",
              "ECS",
              "ELASTICBEANSTALK",
              "EBS",
              "EFS",
              "ELB",
              "APPLICATIONELB",
              "NETWORKELB",
              "ELASTICTRANSCODER",
              "ELASTICACHE",
              "ES",
              "ELASTICMAPREDUCE",
              "GAMELIFT",
              "INSPECTOR",
              "IOT",
              "KMS",
              "KINESISANALYTICS",
              "FIREHOSE",
              "KINESIS",
              "KINESISVIDEO",
              "LAMBDA",
              "LEX",
              "ML",
              "OPSWORKS",
              "POLLY",
              "REDSHIFT",
              "RDS",
              "ROUTE53",
              "SAGEMAKER",
              "DDOSPROTECTION",
              "SES",
              "SNS",
              "SQS",
              "S3",
              "SWF",
              "STATES",
              "STORAGEGATEWAY",
              "NATGATEWAY",
              "VPN",
              "WAF",
              "WORKSPACES"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCloudWatchMetric"
            }
          }
        }
      }
    },
    "/clusters/{id}": {
      "get": {
        "tags": ["clusters"],
        "operationId": "get_11",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseClusterRecord"
            }
          }
        }
      }
    },
    "/clusters": {
      "get": {
        "tags": ["clusters"],
        "operationId": "list_16",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloudProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListClusterRecord"
            }
          }
        }
      }
    },
    "/configs/{configId}": {
      "get": {
        "tags": ["configs"],
        "operationId": "get_12",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseConfigFile"
            }
          }
        }
      },
      "put": {
        "tags": ["configs"],
        "operationId": "update_8",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "templateId",
            "in": "formData",
            "required": false,
            "type": "string",
            "default": "__TEMPLATE_ID"
          },
          {
            "name": "envId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "formData",
            "required": true,
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          },
          {
            "name": "entityId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "parentConfigFileId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "relativeFilePath",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetToAllEnv",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "defaultVersion",
            "in": "formData",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "setAsDefault",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "notes",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "configOverrideType",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": ["ALL", "INSTANCES", "CUSTOM"]
          },
          {
            "name": "configOverrideExpression",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "instances",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "encrypted",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "encryptedFileId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "md5",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["configs"],
        "operationId": "delete_6",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/configs": {
      "get": {
        "tags": ["configs"],
        "operationId": "list_17",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseConfigFile"
            }
          }
        }
      },
      "post": {
        "tags": ["configs"],
        "operationId": "save_5",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "fileName",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "formData",
            "required": false,
            "type": "string",
            "default": "__TEMPLATE_ID"
          },
          {
            "name": "envId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "formData",
            "required": true,
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          },
          {
            "name": "entityId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "parentConfigFileId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "relativeFilePath",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetToAllEnv",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "defaultVersion",
            "in": "formData",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "setAsDefault",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "notes",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "configOverrideType",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": ["ALL", "INSTANCES", "CUSTOM"]
          },
          {
            "name": "configOverrideExpression",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "instances",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "encrypted",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "encryptedFileId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "md5",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/configs/entity/{entityId}": {
      "delete": {
        "tags": ["configs"],
        "operationId": "deleteByEntity",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__TEMPLATE_ID"
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/configs/{configId}/download": {
      "get": {
        "tags": ["configs"],
        "operationId": "downloadConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/cvdash/get-records": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getCVExecutionRecords",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "beginEpochTs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endEpochTs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLinkedHashMapLongLinkedHashMapStringLinkedHashMapStringLinkedHashMapStringLinkedHashMapStringListContinuousVerificationExecutionMetaData"
            }
          }
        }
      }
    },
    "/cvdash/get-all-cv-executions": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getAllCVExecutions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "beginEpochTs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endEpochTs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "isTimeSeries",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseContinuousVerificationExecutionMetaData"
            }
          }
        }
      }
    },
    "/cvdash/heatmap": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getDetailedHeatMap",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListHeatMap"
            }
          }
        }
      }
    },
    "/cvdash/cv24-7-deployment-list": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getCVExecutionDeploymentRecords",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVDeploymentData"
            }
          }
        }
      }
    },
    "/cvdash/service-deployment-list": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getAllDeploymentsForService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListWorkflowExecution"
            }
          }
        }
      }
    },
    "/cvdash/heatmap-summary": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getHeatMapSummary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListHeatMap"
            }
          }
        }
      }
    },
    "/cvdash/timeseries": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getFilteredTimeSeriesOfHeatMapUnit",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "historyStartTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "txnNames",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "metricNames",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSortedSetTransactionTimeSeries"
            }
          }
        }
      },
      "post": {
        "tags": ["cvdash"],
        "operationId": "getFilteredTimeSeriesOfHeatMapUnitPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TimeSeriesFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSortedSetTransactionTimeSeries"
            }
          }
        },
        "deprecated": true
      }
    },
    "/cvdash/timeseries-serviceguard": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getFilteredTimeSeriesOfHeatMapUnitV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "historyStartTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "txnNames",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "metricNames",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceGuardTimeSeries"
            }
          }
        }
      }
    },
    "/cvdash/log-24x7-summary": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getLogAnalysisSummaryOfHeatmap",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLogMLAnalysisSummary"
            }
          }
        }
      }
    },
    "/cvdash/metric-tags": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getListOfMetricTags",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringDouble"
            }
          }
        }
      }
    },
    "/cvdash/current-analysis-window": {
      "get": {
        "tags": ["cvdash"],
        "operationId": "getCurrenAnalysistWindow",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLong"
            }
          }
        }
      }
    },
    "/apm/node-data": {
      "post": {
        "tags": ["apm"],
        "operationId": "getMetricsWithDataForNode_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/APMSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/apm/collect-24-7-data": {
      "get": {
        "tags": ["apm"],
        "operationId": "collect247CVData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/apm/collect-data": {
      "get": {
        "tags": ["apm"],
        "operationId": "collectWorkflowData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "analysisContextId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDataCollectionMinute",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/apm/cv-certified-details-workflow": {
      "get": {
        "tags": ["apm"],
        "operationId": "getCVCertifiedLabelsForWorkflow",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVCertifiedDetailsForWorkflowState"
            }
          }
        }
      }
    },
    "/apm/cv-certified-details-pipeline": {
      "get": {
        "tags": ["apm"],
        "operationId": "getCVCertifiedLabelsForPipeline",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVCertifiedDetailsForWorkflowState"
            }
          }
        }
      }
    },
    "/apm/notify-verification-state": {
      "post": {
        "tags": ["apm"],
        "operationId": "notifyVerificationState",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "correlationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VerificationDataAnalysisResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/apm/notify-workflow-verification-state": {
      "post": {
        "tags": ["apm"],
        "operationId": "notifyWorkflowVerificationState",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ABORTED",
              "DISCONTINUING",
              "ERROR",
              "FAILED",
              "NEW",
              "PAUSED",
              "PAUSING",
              "QUEUED",
              "RESUMED",
              "RUNNING",
              "SCHEDULED",
              "STARTING",
              "SUCCESS",
              "WAITING",
              "SKIPPED",
              "ABORTING",
              "REJECTED",
              "EXPIRED",
              "PREPARING"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/apm/collect-cv-data": {
      "post": {
        "tags": ["apm"],
        "operationId": "collectCVData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cvTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataCollectionInfoV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/apm/verification-state-details": {
      "get": {
        "tags": ["apm"],
        "operationId": "getVerificationStateExecutionData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseStateExecutionData"
            }
          }
        }
      }
    },
    "/dash-stats/percentile": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "percentile",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromTsMillis",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toTsMillis",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "percentile",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringObject"
            }
          }
        }
      }
    },
    "/dash-stats/service-instance-summary-stats": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getServiceInstanceSummaryStats",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInstanceSummaryStats"
            }
          }
        }
      }
    },
    "/dash-stats/service-instance-dash": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getServiceInstanceDashboard",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceInstanceDashboard"
            }
          }
        }
      }
    },
    "/dash-stats/service-compare-environment": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getCompareServicesByEnvironment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId1",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseCompareEnvironmentAggregationResponseInfo"
            }
          }
        }
      }
    },
    "/dash-stats/app-instance-summary-stats": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getAppInstanceSummaryStats",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInstanceSummaryStats"
            }
          }
        }
      }
    },
    "/dash-stats/instance-details": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getInstanceDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInstance"
            }
          }
        }
      }
    },
    "/dash-stats/app-instance-stats": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getAppInstanceStats",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListInstanceStatsByService"
            }
          }
        }
      }
    },
    "/dash-stats/service-instance-stats": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getServiceInstanceStats",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListInstanceStatsByEnvironment"
            }
          }
        }
      }
    },
    "/dash-stats/app-instance-count-stats": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getAppInstanceCountStats",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseInstanceSummaryStatsByService"
            }
          }
        }
      }
    },
    "/dash-stats/manual-sync": {
      "put": {
        "tags": ["dash-stats"],
        "operationId": "manualSync",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inframappingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/dash-stats/manual-sync-job": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getManualSyncJobStatus",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobs",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListBoolean"
            }
          }
        }
      }
    },
    "/dash-stats/timeline": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getInstanceStatsForGivenTime",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromTsMillis",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toTsMillis",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInstanceTimeline"
            }
          }
        }
      }
    },
    "/dash-stats/instance-history-ranges": {
      "get": {
        "tags": ["dash-stats"],
        "operationId": "getTimeRanges",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeRange"
            }
          }
        }
      }
    },
    "/datadog/node-data": {
      "post": {
        "tags": ["datadog"],
        "operationId": "getMetricsWithDataForNode_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataDogSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/datadog/metric-names": {
      "get": {
        "tags": ["datadog"],
        "operationId": "getAllMetricNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListMetric"
            }
          }
        }
      }
    },
    "/agent/delegates/configuration": {
      "get": {
        "tags": ["agentdelegates"],
        "operationId": "getDelegateConfiguration",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateConfiguration"
            }
          }
        }
      }
    },
    "/agent/delegates": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "add",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Delegate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      }
    },
    "/agent/delegates/register": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "register",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateRegisterResponse"
            }
          }
        }
      }
    },
    "/agent/delegates/{delegateId}/profile": {
      "get": {
        "tags": ["agentdelegates"],
        "operationId": "checkForProfile",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastUpdatedAt",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfileParams"
            }
          }
        }
      }
    },
    "/agent/delegates/connectionHeartbeat/{delegateId}": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "connectionHeartbeat",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateConnectionHeartbeat"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/agent/delegates/{delegateId}/tasks/{taskId}/acquire": {
      "put": {
        "tags": ["agentdelegates"],
        "operationId": "acquireDelegateTask",
        "produces": ["application/x-kryo"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateInstanceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/DelegateTaskPackage"
            }
          }
        }
      }
    },
    "/agent/delegates/{delegateId}/tasks/{taskId}/report": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "reportConnectionResults",
        "produces": ["application/x-kryo"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateInstanceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DelegateConnectionResultDetail"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/DelegateTaskPackage"
            }
          }
        }
      }
    },
    "/agent/delegates/{delegateId}/tasks/{taskId}/fail": {
      "get": {
        "tags": ["agentdelegates"],
        "operationId": "failIfAllDelegatesFailed",
        "produces": ["application/x-kryo"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "areClientToolsInstalled",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/agent/delegates/{delegateId}/upgrade": {
      "get": {
        "tags": ["agentdelegates"],
        "operationId": "checkForUpgrade",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Version",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateScripts"
            }
          }
        }
      }
    },
    "/agent/delegates/delegateScriptsNg": {
      "get": {
        "tags": ["agentdelegates"],
        "operationId": "getDelegateScriptsNg",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateVersion",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "patchVersion",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateScripts"
            }
          }
        }
      }
    },
    "/agent/delegates/delegateScripts": {
      "get": {
        "tags": ["agentdelegates"],
        "operationId": "getDelegateScripts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateVersion",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "patchVersion",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateScripts"
            }
          }
        }
      }
    },
    "/agent/delegates/{delegateId}/task-events": {
      "get": {
        "tags": ["agentdelegates"],
        "operationId": "getDelegateTaskEvents",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "syncOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/DelegateTaskEventsResponse"
            }
          }
        }
      }
    },
    "/agent/delegates/heartbeat-with-polling": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "updateDelegateHB",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateHeartbeatResponse"
            }
          }
        }
      }
    },
    "/agent/delegates/{delegateId}/state-executions": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "saveApiCallLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/agent/delegates/artifact-collection/{perpetualTaskId}": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "processArtifactCollectionResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "perpetualTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/agent/delegates/instance-sync/{perpetualTaskId}": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "processInstanceSyncResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "perpetualTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateResponseData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/agent/delegates/instance-sync-ng/{perpetualTaskId}": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "processInstanceSyncNGResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "perpetualTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateResponseData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/agent/delegates/manifest-collection/{perpetualTaskId}": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "processManifestCollectionResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "perpetualTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/agent/delegates/connectors/{perpetualTaskId}": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "publishNGConnectorHeartbeatResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "perpetualTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ConnectorHeartbeatDelegateResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/agent/delegates/polling/{perpetualTaskId}": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "processPollingResultNg",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "perpetualTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/agent/delegates/properties": {
      "post": {
        "tags": ["agentdelegates"],
        "operationId": "getDelegateProperties",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/agent/delegateFiles/{delegateId}/tasks/{taskId}": {
      "post": {
        "tags": ["agentdelegateFiles"],
        "operationId": "upload",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileBucket",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "LOB",
              "ARTIFACTS",
              "AUDITS",
              "CONFIGS",
              "CUSTOM_MANIFEST",
              "LOGS",
              "PLATFORMS",
              "TERRAFORM_STATE",
              "PROFILE_RESULTS",
              "TERRAFORM_PLAN",
              "EXPORT_EXECUTIONS"
            ]
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/agent/delegateFiles/fileId": {
      "get": {
        "tags": ["agentdelegateFiles"],
        "operationId": "getFileId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileBucket",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "LOB",
              "ARTIFACTS",
              "AUDITS",
              "CONFIGS",
              "CUSTOM_MANIFEST",
              "LOGS",
              "PLATFORMS",
              "TERRAFORM_STATE",
              "PROFILE_RESULTS",
              "TERRAFORM_PLAN",
              "EXPORT_EXECUTIONS"
            ]
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/agent/delegateFiles/downloadConfig": {
      "get": {
        "tags": ["agentdelegateFiles"],
        "operationId": "downloadConfigFile",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "fileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/StreamingOutput"
            }
          }
        }
      }
    },
    "/agent/delegateFiles/download": {
      "get": {
        "tags": ["agentdelegateFiles"],
        "operationId": "downloadFile",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "fileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileBucket",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "LOB",
              "ARTIFACTS",
              "AUDITS",
              "CONFIGS",
              "CUSTOM_MANIFEST",
              "LOGS",
              "PLATFORMS",
              "TERRAFORM_STATE",
              "PROFILE_RESULTS",
              "TERRAFORM_PLAN",
              "EXPORT_EXECUTIONS"
            ]
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/StreamingOutput"
            }
          }
        }
      }
    },
    "/agent/delegateFiles/metainfo": {
      "get": {
        "tags": ["agentdelegateFiles"],
        "operationId": "getFileInfo",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "fileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileBucket",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "LOB",
              "ARTIFACTS",
              "AUDITS",
              "CONFIGS",
              "CUSTOM_MANIFEST",
              "LOGS",
              "PLATFORMS",
              "TERRAFORM_STATE",
              "PROFILE_RESULTS",
              "TERRAFORM_PLAN",
              "EXPORT_EXECUTIONS"
            ]
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateFile"
            }
          }
        }
      }
    },
    "/agent/delegateFiles/{delegateId}/profile-result": {
      "post": {
        "tags": ["agentdelegateFiles"],
        "operationId": "saveProfileResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fileBucket",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "LOB",
              "ARTIFACTS",
              "AUDITS",
              "CONFIGS",
              "CUSTOM_MANIFEST",
              "LOGS",
              "PLATFORMS",
              "TERRAFORM_STATE",
              "PROFILE_RESULTS",
              "TERRAFORM_PLAN",
              "EXPORT_EXECUTIONS"
            ]
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/delegate-profiles": {
      "get": {
        "tags": ["delegate-profiles"],
        "operationId": "list_18",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseDelegateProfile"
            }
          }
        }
      },
      "post": {
        "tags": ["delegate-profiles"],
        "operationId": "add_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfile"
            }
          }
        }
      }
    },
    "/delegate-profiles/{delegateProfileId}": {
      "get": {
        "tags": ["delegate-profiles"],
        "operationId": "get_13",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfile"
            }
          }
        }
      },
      "put": {
        "tags": ["delegate-profiles"],
        "operationId": "update_9",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateProfile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfile"
            }
          }
        }
      },
      "delete": {
        "tags": ["delegate-profiles"],
        "operationId": "delete_7",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/delegate-profiles/{delegateProfileId}/selectors": {
      "put": {
        "tags": ["delegate-profiles"],
        "operationId": "updateSelectors",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfile"
            }
          }
        }
      }
    },
    "/delegate-profiles/v2/{delegateProfileId}": {
      "get": {
        "tags": ["delegate-profiles"],
        "operationId": "getV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfileDetails"
            }
          }
        }
      },
      "put": {
        "tags": ["delegate-profiles"],
        "operationId": "updateV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateProfileDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfileDetails"
            }
          }
        }
      },
      "delete": {
        "tags": ["delegate-profiles"],
        "operationId": "deleteV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/delegate-profiles/v2": {
      "get": {
        "tags": ["delegate-profiles"],
        "operationId": "listV2_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseDelegateProfileDetails"
            }
          }
        }
      },
      "post": {
        "tags": ["delegate-profiles"],
        "operationId": "addV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateProfileDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfileDetails"
            }
          }
        }
      }
    },
    "/delegate-profiles/v2/{delegateProfileId}/scoping-rules": {
      "put": {
        "tags": ["delegate-profiles"],
        "operationId": "updateScopingRulesV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScopingRules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfileDetails"
            }
          }
        }
      }
    },
    "/delegate-profiles/v2/{delegateProfileId}/selectors": {
      "put": {
        "tags": ["delegate-profiles"],
        "operationId": "updateSelectorsV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateProfileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateProfileDetails"
            }
          }
        }
      }
    },
    "/delegate-scopes": {
      "get": {
        "tags": ["delegate-scopes"],
        "operationId": "list_19",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseDelegateScope"
            }
          }
        }
      },
      "post": {
        "tags": ["delegate-scopes"],
        "operationId": "add_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateScope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateScope"
            }
          }
        }
      }
    },
    "/delegate-scopes/{delegateScopeId}": {
      "get": {
        "tags": ["delegate-scopes"],
        "operationId": "get_14",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateScopeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateScope"
            }
          }
        }
      },
      "put": {
        "tags": ["delegate-scopes"],
        "operationId": "update_10",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateScopeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateScope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateScope"
            }
          }
        }
      },
      "delete": {
        "tags": ["delegate-scopes"],
        "operationId": "delete_8",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateScopeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/selection-logs": {
      "get": {
        "tags": ["selection-logs"],
        "operationId": "getSelectionLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListDelegateSelectionLogParams"
            }
          }
        }
      }
    },
    "/selection-logs/v2": {
      "get": {
        "tags": ["selection-logs"],
        "operationId": "getSelectionLogsV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateSelectionLogResponse"
            }
          }
        }
      }
    },
    "/setup/delegates/latest": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "get_15",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/setup/delegates/{delegateId}": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "get_16",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      },
      "put": {
        "tags": ["setupdelegates"],
        "operationId": "update_11",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Delegate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      },
      "delete": {
        "tags": ["setupdelegates"],
        "operationId": "delete_9",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/setup/delegates": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "list_20",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseDelegate"
            }
          }
        }
      }
    },
    "/setup/delegates/status2": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "listDelegateStatusWithScalingGroups",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateStatus"
            }
          }
        }
      }
    },
    "/setup/delegates/available-versions-for-verification": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "getAvailableVersions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/setup/delegates/connected-ratio-with-primary": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "getConnectedRatioWithPrimary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "targetVersion",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDouble"
            }
          }
        }
      }
    },
    "/setup/delegates/validateDelegateName": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "validateThatDelegateNameIsUnique",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/setup/delegates/validate-ce-delegate": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "validateCEDelegate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCEDelegateStatus"
            }
          }
        }
      }
    },
    "/setup/delegates/{delegateId}/profile-result": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "getProfileResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/setup/delegates/delegate-sizes": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "delegateSizes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListDelegateSizeDetails"
            }
          }
        }
      }
    },
    "/setup/delegates/{delegateId}/scopes": {
      "put": {
        "tags": ["setupdelegates"],
        "operationId": "updateScopes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateScopes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      }
    },
    "/setup/delegates/{delegateId}/tags": {
      "put": {
        "tags": ["setupdelegates"],
        "operationId": "updateTags",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateTags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      }
    },
    "/setup/delegates/delegate-tags": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "delegateTags",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/setup/delegates/kubernetes-delegates": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "kubernetesDelegateNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/setup/delegates/delegate-selectors-up-the-hierarchy": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "delegateSelectorsUpTheHierarchy",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/setup/delegates/validate-kubernetes-yaml": {
      "post": {
        "tags": ["setupdelegates"],
        "operationId": "validateKubernetesYaml",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateSetupDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateSetupDetails"
            }
          }
        }
      }
    },
    "/setup/delegates/generate-kubernetes-yaml": {
      "post": {
        "tags": ["setupdelegates"],
        "operationId": "generateKubernetesYaml",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateSetupDetails"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/{delegateId}/approval": {
      "put": {
        "tags": ["setupdelegates"],
        "operationId": "updateApprovalStatus",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["ACTIVATE", "REJECT"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      }
    },
    "/setup/delegates/delete-all-except": {
      "delete": {
        "tags": ["setupdelegates"],
        "operationId": "deleteAllExcept",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/setup/delegates/groups/{delegateGroupId}": {
      "delete": {
        "tags": ["setupdelegates"],
        "operationId": "deleteDelegateGroup",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/setup/delegates/downloadUrl": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "downloadUrl",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/setup/delegates/download": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "downloadScripts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/docker": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "downloadDocker",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/kubernetes": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "downloadKubernetes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isCeEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/ecs": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "downloadEcs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateGroupName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "awsVpcMode",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hostname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/delegate-helm-values-yaml": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "downloadDelegateValuesYaml",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/kubernetes/account-identifier": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "getAccountIdentifier",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/setup/delegates/delegate-selectors": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "delegateSelectors",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/setup/delegates/{delegateId}/description": {
      "put": {
        "tags": ["setupdelegates"],
        "operationId": "updateDescription",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      }
    },
    "/setup/delegates/status": {
      "get": {
        "tags": ["setupdelegates"],
        "operationId": "listDelegateStatus",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateStatus"
            }
          }
        },
        "deprecated": true
      }
    },
    "/setup/delegates/v3/latest": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "get_17",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/{delegateId}": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "get_18",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      },
      "put": {
        "tags": ["setupdelegatesv3"],
        "operationId": "update_12",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Delegate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      },
      "delete": {
        "tags": ["setupdelegatesv3"],
        "operationId": "delete_10",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/ng": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "list_21",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateTokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateGroupListing"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/status2": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "listDelegateStatusWithScalingGroups_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateStatus"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/available-versions-for-verification": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "getAvailableVersions_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/connected-ratio-with-primary": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "getConnectedRatioWithPrimary_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "targetVersion",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDouble"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/validateDelegateName": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "validateThatDelegateNameIsUnique_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/validate-ce-delegate": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "validateCEDelegate_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCEDelegateStatus"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/{delegateId}/profile-result": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "getProfileResult_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/delegate-sizes": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "delegateSizes_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListDelegateSizeDetails"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/{delegateId}/scopes": {
      "put": {
        "tags": ["setupdelegatesv3"],
        "operationId": "updateScopes_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateScopes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/{delegateId}/tags": {
      "put": {
        "tags": ["setupdelegatesv3"],
        "operationId": "updateTags_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateTags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/delegate-tags": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "delegateTags_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/kubernetes-delegates": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "kubernetesDelegateNames_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/delegate-selectors-up-the-hierarchy": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "delegateSelectorsUpTheHierarchy_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/validate-kubernetes-yaml": {
      "post": {
        "tags": ["setupdelegatesv3"],
        "operationId": "validateKubernetesYaml_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateSetupDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateSetupDetails"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/generate-kubernetes-yaml": {
      "post": {
        "tags": ["setupdelegatesv3"],
        "operationId": "generateKubernetesYaml_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateSetupDetails"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/v3/{delegateId}/approval": {
      "put": {
        "tags": ["setupdelegatesv3"],
        "operationId": "updateApprovalStatus_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["ACTIVATE", "REJECT"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/delete-all-except": {
      "delete": {
        "tags": ["setupdelegatesv3"],
        "operationId": "deleteAllExcept_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/groups/{identifier}": {
      "delete": {
        "tags": ["setupdelegatesv3"],
        "operationId": "deleteDelegateGroup_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/downloadUrl": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "downloadUrl_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/download": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "downloadScripts_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/v3/docker": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "downloadDocker_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/v3/kubernetes": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "downloadKubernetes_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isCeEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/v3/ecs": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "downloadEcs_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateGroupName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "awsVpcMode",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hostname",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/v3/delegate-helm-values-yaml": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "downloadDelegateValuesYaml_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/v3/ng/validate-docker-delegate-details": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "validateDockerSetupDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/ng/docker": {
      "post": {
        "tags": ["setupdelegatesv3"],
        "operationId": "downloadNgDocker",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateSetupDetails"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/v3/ng/delegate-group": {
      "post": {
        "tags": ["setupdelegatesv3"],
        "operationId": "createDelegateGroup",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateSetupDetails"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/v3/ng/generate-kubernetes-yaml": {
      "post": {
        "tags": ["setupdelegatesv3"],
        "operationId": "generateKubernetesYamlUsingNgToken",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DelegateSetupDetails"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/setup/delegates/v3/kubernetes/account-identifier": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "getAccountIdentifier_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/delegate-selectors": {
      "get": {
        "tags": ["setupdelegatesv3"],
        "operationId": "delegateSelectors_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/setup/delegates/v3/{delegateId}/description": {
      "put": {
        "tags": ["setupdelegatesv3"],
        "operationId": "updateDescription_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "delegateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegate"
            }
          }
        }
      }
    },
    "/delegate-task-selector-map": {
      "get": {
        "tags": ["delegate-task-selector-map"],
        "operationId": "list_22",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListTaskSelectorMap"
            }
          }
        }
      },
      "post": {
        "tags": ["delegate-task-selector-map"],
        "operationId": "add_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskSelectorMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTaskSelectorMap"
            }
          }
        }
      }
    },
    "/delegate-task-selector-map/{taskSelectorMapId}": {
      "put": {
        "tags": ["delegate-task-selector-map"],
        "operationId": "update_13",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskSelectorMapId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskSelectorMap"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTaskSelectorMap"
            }
          }
        }
      }
    },
    "/delegate-task-selector-map/{taskSelectorMapId}/task-selectors": {
      "post": {
        "tags": ["delegate-task-selector-map"],
        "operationId": "addTaskSelector",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskSelectorMapId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "selector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTaskSelectorMap"
            }
          }
        }
      },
      "delete": {
        "tags": ["delegate-task-selector-map"],
        "operationId": "deleteTaskSelector",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskSelectorMapId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "selector",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTaskSelectorMap"
            }
          }
        }
      }
    },
    "/delegates-verification/heartbeatV2": {
      "get": {
        "tags": ["delegates-verification"],
        "operationId": "getDelegatesHeartbeatDetailsV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDelegateHeartbeatDetails"
            }
          }
        }
      }
    },
    "/delegates-verification/initializedV2": {
      "get": {
        "tags": ["delegates-verification"],
        "operationId": "getDelegatesInitializationDetailsV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "delegateName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListDelegateInitializationDetails"
            }
          }
        }
      }
    },
    "/dynatrace/services": {
      "get": {
        "tags": ["dynatrace"],
        "operationId": "getDynatraceServices",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListDynaTraceApplication"
            }
          }
        }
      }
    },
    "/dynatrace/node-data": {
      "post": {
        "tags": ["dynatrace"],
        "operationId": "getMetricsWithDataForNode_4",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DynaTraceSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/elk/node-data": {
      "post": {
        "tags": ["elk"],
        "operationId": "getLogRecords_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ElkSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/elk/get-host-records": {
      "get": {
        "tags": ["elk"],
        "operationId": "getHostLogRecord",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "index",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostNameField",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["TERM", "MATCH", "MATCH_PHRASE"]
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeStampField",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeStampFieldFormat",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "messageField",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseObject"
            }
          }
        }
      }
    },
    "/elk/get-sample-record": {
      "get": {
        "tags": ["elk"],
        "operationId": "getSampleLogRecord",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "index",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseObject"
            }
          }
        }
      }
    },
    "/elk/get-indices": {
      "get": {
        "tags": ["elk"],
        "operationId": "getIndices",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringElkIndexTemplate"
            }
          }
        }
      }
    },
    "/environments/{envId}/config-map-yaml": {
      "post": {
        "tags": ["environments"],
        "operationId": "setConfigMapYaml",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "operationId": "updateConfigMapYaml",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "operationId": "deleteConfigMapYaml",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      }
    },
    "/environments/{envId}/helm-value-yaml": {
      "post": {
        "tags": ["environments"],
        "operationId": "setHelmValueYaml",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "operationId": "updateHelmValueYaml",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "operationId": "deleteHelmValueYaml",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      }
    },
    "/environments/{envId}/values/app-manifest": {
      "post": {
        "tags": ["environments"],
        "operationId": "createValuesAppManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationManifest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      }
    },
    "/environments/{envId}/values/app-manifest/{appManifestId}": {
      "get": {
        "tags": ["environments"],
        "operationId": "getValuesAppManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "operationId": "updateValuesAppManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationManifest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "operationId": "deleteValuesAppManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      }
    },
    "/environments/{envId}/values-app-manifest": {
      "get": {
        "tags": ["environments"],
        "operationId": "getValuesAppManifest_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      }
    },
    "/environments/{envId}/clone": {
      "post": {
        "tags": ["environments"],
        "operationId": "cloneEnvironment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CloneMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      }
    },
    "/environments/{envId}/services": {
      "get": {
        "tags": ["environments"],
        "operationId": "getServicesWithOverrides",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListService"
            }
          }
        }
      }
    },
    "/environments/{envId}/config-map-yaml/{templateId}": {
      "post": {
        "tags": ["environments"],
        "operationId": "setConfigMapYamlForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "operationId": "updateConfigMapYamlForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "operationId": "deleteConfigMapYamlForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      }
    },
    "/environments/{envId}/helm-value-yaml/{templateId}": {
      "post": {
        "tags": ["environments"],
        "operationId": "setHelmValueYamlForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "operationId": "updateHelmValueYamlForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "operationId": "deleteHelmValueYamlForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      }
    },
    "/environments/{envId}/values/{manifestFileId}": {
      "get": {
        "tags": ["environments"],
        "operationId": "getValues",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "operationId": "updateValues",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VALUES",
              "KUSTOMIZE_PATCHES",
              "K8S_MANIFEST",
              "PCF_OVERRIDE",
              "AZURE_APP_SERVICE_MANIFEST",
              "AZURE_APP_SETTINGS_OVERRIDE",
              "AZURE_CONN_STRINGS_OVERRIDE",
              "HELM_CHART_OVERRIDE",
              "OC_PARAMS"
            ]
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManifestFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "operationId": "deleteValues",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      }
    },
    "/environments/{envId}/service/{serviceId}/values": {
      "post": {
        "tags": ["environments"],
        "operationId": "createValuesForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VALUES",
              "KUSTOMIZE_PATCHES",
              "K8S_MANIFEST",
              "PCF_OVERRIDE",
              "AZURE_APP_SERVICE_MANIFEST",
              "AZURE_APP_SETTINGS_OVERRIDE",
              "AZURE_CONN_STRINGS_OVERRIDE",
              "HELM_CHART_OVERRIDE",
              "OC_PARAMS"
            ]
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManifestFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      }
    },
    "/environments/{envId}/service/{serviceId}/values/{manifestFileId}": {
      "get": {
        "tags": ["environments"],
        "operationId": "getValuesForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "operationId": "updateValuesForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VALUES",
              "KUSTOMIZE_PATCHES",
              "K8S_MANIFEST",
              "PCF_OVERRIDE",
              "AZURE_APP_SERVICE_MANIFEST",
              "AZURE_APP_SETTINGS_OVERRIDE",
              "AZURE_CONN_STRINGS_OVERRIDE",
              "HELM_CHART_OVERRIDE",
              "OC_PARAMS"
            ]
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManifestFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "operationId": "deleteValuesForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      }
    },
    "/environments/{envId}/service/{serviceId}/values/app-manifest": {
      "post": {
        "tags": ["environments"],
        "operationId": "createValuesAppManifestForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationManifest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      }
    },
    "/environments/{envId}/service/{serviceId}/values/app-manifest/{appManifestId}": {
      "get": {
        "tags": ["environments"],
        "operationId": "getValuesAppManifestForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "operationId": "updateValuesAppManifestForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationManifest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "operationId": "deleteValuesAppManifestForService",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      }
    },
    "/environments/{envId}/values-manifest-file": {
      "get": {
        "tags": ["environments"],
        "operationId": "getValuesManifestFile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      }
    },
    "/environments/{envId}/manifest-files": {
      "get": {
        "tags": ["environments"],
        "operationId": "getLocalOverrideManifestFiles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListManifestFile"
            }
          }
        }
      }
    },
    "/environments/{envId}/values": {
      "post": {
        "tags": ["environments"],
        "operationId": "createValues",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "VALUES",
              "KUSTOMIZE_PATCHES",
              "K8S_MANIFEST",
              "PCF_OVERRIDE",
              "AZURE_APP_SERVICE_MANIFEST",
              "AZURE_APP_SETTINGS_OVERRIDE",
              "AZURE_CONN_STRINGS_OVERRIDE",
              "HELM_CHART_OVERRIDE",
              "OC_PARAMS"
            ]
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManifestFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      }
    },
    "/environments/{envId}": {
      "get": {
        "tags": ["environments"],
        "operationId": "get_19",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "put": {
        "tags": ["environments"],
        "operationId": "update_14",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      },
      "delete": {
        "tags": ["environments"],
        "operationId": "delete_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/environments": {
      "get": {
        "tags": ["environments"],
        "operationId": "list_23",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withTags",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseEnvironment"
            }
          }
        }
      },
      "post": {
        "tags": ["environments"],
        "operationId": "save_6",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}": {
      "get": {
        "tags": ["executions"],
        "operationId": "getExecutionDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowExecution"
            }
          }
        }
      },
      "put": {
        "tags": ["executions"],
        "operationId": "triggerWorkflowExecutionInterrupt",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExecutionInterrupt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseExecutionInterrupt"
            }
          }
        }
      }
    },
    "/executions": {
      "get": {
        "tags": ["executions"],
        "operationId": "listExecutions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orchestrationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "includeGraph",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "workflowType",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "includeIndirectExecutions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withTags",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseWorkflowExecution"
            }
          }
        }
      },
      "post": {
        "tags": ["executions"],
        "operationId": "triggerExecution",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExecutionArgs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowExecution"
            }
          }
        }
      }
    },
    "/executions/continueExecution": {
      "post": {
        "tags": ["executions"],
        "operationId": "continueExecution",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineStageElementId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExecutionArgs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/executions/triggerResume": {
      "post": {
        "tags": ["executions"],
        "operationId": "triggerPipelineResumeExecution",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "parallelIndexToResume",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowExecution"
            }
          }
        }
      }
    },
    "/executions/resumeStages": {
      "get": {
        "tags": ["executions"],
        "operationId": "getResumeStages",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListPipelineStageGroupedInfo"
            }
          }
        }
      }
    },
    "/executions/resumeHistory": {
      "get": {
        "tags": ["executions"],
        "operationId": "getResumeHistory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListWorkflowExecution"
            }
          }
        }
      }
    },
    "/executions/triggerRollback": {
      "post": {
        "tags": ["executions"],
        "operationId": "triggerRollbackExecution",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowExecution"
            }
          }
        }
      }
    },
    "/executions/rollbackConfirmation": {
      "get": {
        "tags": ["executions"],
        "operationId": "getRollbackConfirmation",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseRollbackConfirmation"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/notes": {
      "put": {
        "tags": ["executions"],
        "operationId": "updateNotes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExecutionArgs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/approval": {
      "put": {
        "tags": ["executions"],
        "operationId": "approveOrRejectExecution",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApprovalDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/executions/required-args": {
      "post": {
        "tags": ["executions"],
        "operationId": "requiredArgs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExecutionArgs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseRequiredExecutionArgs"
            }
          }
        }
      }
    },
    "/executions/deployment-metadata": {
      "post": {
        "tags": ["executions"],
        "operationId": "getDeploymentMetadata",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withDefaultArtifact",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isRunningExecution",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "pipelineStageElementId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withLastDeployedInfo",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExecutionArgs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDeploymentMetadata"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/node/{stateExecutionInstanceId}": {
      "get": {
        "tags": ["executions"],
        "operationId": "getExecutionNodeDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stateExecutionInstanceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseGraphNode"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/history/{stateExecutionInstanceId}": {
      "get": {
        "tags": ["executions"],
        "operationId": "getExecutionHistory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stateExecutionInstanceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListStateExecutionData"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/interruption/{stateExecutionInstanceId}": {
      "get": {
        "tags": ["executions"],
        "operationId": "getExecutionInterrupt",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stateExecutionInstanceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListStateExecutionInterrupt"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/inspection/{stateExecutionInstanceId}": {
      "get": {
        "tags": ["executions"],
        "operationId": "getExecutionInspection",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stateExecutionInstanceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseStateInspection"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/element/{stateExecutionInstanceId}": {
      "get": {
        "tags": ["executions"],
        "operationId": "getExecutionElement",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stateExecutionInstanceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListStateExecutionElement"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/mark-baseline": {
      "get": {
        "tags": ["executions"],
        "operationId": "markAsBaseline",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isBaseline",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetWorkflowExecutionBaseline"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/get-baseline": {
      "get": {
        "tags": ["executions"],
        "operationId": "getBaselineDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "currentExecId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowExecutionBaseline"
            }
          }
        }
      }
    },
    "/executions/artifacts": {
      "get": {
        "tags": ["executions"],
        "operationId": "getLastDeployedArtifacts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListArtifact"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/waitingOnDeployments": {
      "get": {
        "tags": ["executions"],
        "operationId": "getWaitingOnDeployments",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListWorkflowExecution"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/approvalAuthorization": {
      "get": {
        "tags": ["executions"],
        "operationId": "getApprovalAuthorization",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userGroups",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApprovalAuthorization"
            }
          }
        }
      }
    },
    "/executions/{workflowExecutionId}/constraint-executions": {
      "get": {
        "tags": ["executions"],
        "operationId": "getExecutionsForConstraint",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "unit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceConstraintName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseConcurrentExecutionResponse"
            }
          }
        }
      }
    },
    "/executions/nodeSubGraphs/{workflowExecutionId}": {
      "post": {
        "tags": ["executions"],
        "operationId": "getNodeSubGraphs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringGraphGroup"
            }
          }
        }
      }
    },
    "/executions/info/{workflowExecutionId}": {
      "get": {
        "tags": ["executions"],
        "operationId": "getWorkflowExecutionInfo",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowExecutionInfo"
            }
          }
        }
      }
    },
    "/executions/workflow-variables": {
      "post": {
        "tags": ["executions"],
        "operationId": "getWorkflowVariables",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineStageElementId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExecutionArgs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowVariablesMetadata"
            }
          }
        }
      }
    },
    "/learning-exp/get-exp-analysis-info": {
      "get": {
        "tags": ["learning-exp"],
        "operationId": "getLogExpAnalysisInfo",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListExpAnalysisInfo"
            }
          }
        }
      }
    },
    "/learning-exp/get-analysis-summary": {
      "get": {
        "tags": ["learning-exp"],
        "operationId": "getLogAnalysisSummary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "name": "expName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLogMLAnalysisSummary"
            }
          }
        }
      }
    },
    "/learning-exp/msg-pairs-to-vote": {
      "get": {
        "tags": ["learning-exp"],
        "operationId": "getMessageComparisonList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListExperimentalMessageComparisonResult"
            }
          }
        }
      },
      "put": {
        "tags": ["learning-exp"],
        "operationId": "saveMessageComparisonList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/learning-exp-metric/mark-exp-status": {
      "get": {
        "tags": ["learning-exp-metric"],
        "operationId": "markExperimentStatus",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "name": "expName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "expStatus",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseExperimentalMetricRecord"
            }
          }
        }
      }
    },
    "/learning-exp-metric/get-analysis-summary": {
      "get": {
        "tags": ["learning-exp-metric"],
        "operationId": "getExperimentalAnalysisSummary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "name": "expName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseExperimentalMetricRecord"
            }
          }
        }
      }
    },
    "/learning-exp-metric/get-exp-performance": {
      "get": {
        "tags": ["learning-exp-metric"],
        "operationId": "getMetricExpAnalysisAccuracyImprovement",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "experimentName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseExperimentPerformance"
            }
          }
        }
      }
    },
    "/learning-exp-metric/get-exp-analysis-info": {
      "get": {
        "tags": ["learning-exp-metric"],
        "operationId": "getMetricExpAnalysisInfo",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "experimentName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "mismatch",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "experimentStatus",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseExpAnalysisInfo"
            }
          }
        }
      }
    },
    "/learning-exp-metric/update-mismatch": {
      "post": {
        "tags": ["learning-exp-metric"],
        "operationId": "updateMismatchState",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisMinute",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/export-executions/export": {
      "post": {
        "tags": ["export-executions"],
        "operationId": "export",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExportExecutionsUserParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseExportExecutionsRequestSummary"
            }
          }
        }
      }
    },
    "/export-executions/status/{requestId}": {
      "get": {
        "tags": ["export-executions"],
        "operationId": "getStatus_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/export-executions/limit-checks": {
      "get": {
        "tags": ["export-executions"],
        "operationId": "getLimitChecks",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseExportExecutionsRequestLimitChecks"
            }
          }
        }
      }
    },
    "/export-executions/download/{requestId}": {
      "get": {
        "tags": ["export-executions"],
        "operationId": "downloadFile_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/expression-builder": {
      "get": {
        "tags": ["expression-builder"],
        "operationId": "listExpressions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subEntityType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forTags",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/expression-builder/values": {
      "get": {
        "tags": ["expression-builder"],
        "operationId": "listExpressionsFromValues",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/external/{version}/executions/{workflowExecutionId}/status": {
      "get": {
        "tags": ["external"],
        "operationId": "getWorkflowExecutionStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "workflowExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/ExecutionStatusResponse"
            }
          }
        }
      }
    },
    "/feature-flag/{featureFlagName}": {
      "get": {
        "tags": ["feature-flag"],
        "operationId": "getFeatureFlag",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "featureFlagName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseFeatureFlag"
            }
          }
        }
      }
    },
    "/feature-flag/globally-enabled-feature-flags": {
      "get": {
        "tags": ["feature-flag"],
        "operationId": "getGloballyEnabledFlags",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListFeatureFlag"
            }
          }
        }
      }
    },
    "/features/usage-compliance-report": {
      "get": {
        "tags": ["features"],
        "operationId": "getFeaturesUsageComplianceReport",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "targetAccountType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseFeaturesUsageComplianceReport"
            }
          }
        }
      }
    },
    "/features/restrictions": {
      "get": {
        "tags": ["features"],
        "operationId": "getFeatureRestrictions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseFeatureRestrictions"
            }
          }
        }
      }
    },
    "/billing-accounts/{id}": {
      "get": {
        "tags": ["billing-accounts"],
        "operationId": "get_20",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseGcpBillingAccount"
            }
          }
        }
      },
      "put": {
        "tags": ["billing-accounts"],
        "operationId": "update_15",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GcpBillingAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["billing-accounts"],
        "operationId": "delete_12",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/billing-accounts": {
      "get": {
        "tags": ["billing-accounts"],
        "operationId": "list_24",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationSettingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListGcpBillingAccount"
            }
          }
        }
      },
      "post": {
        "tags": ["billing-accounts"],
        "operationId": "save_7",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GcpBillingAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseGcpBillingAccount"
            }
          }
        }
      }
    },
    "/billing-accounts/verify-account": {
      "post": {
        "tags": ["billing-accounts"],
        "operationId": "verifyAccess",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/gcp-organizations/{uuid}": {
      "delete": {
        "tags": ["gcp-organizations"],
        "operationId": "delete_13",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/gcp-organizations": {
      "post": {
        "tags": ["gcp-organizations"],
        "operationId": "save_8",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GcpOrganization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseGcpOrganization"
            }
          }
        }
      }
    },
    "/gcp-organizations/validate-serviceaccount": {
      "post": {
        "tags": ["gcp-organizations"],
        "operationId": "validatePermission",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GcpOrganization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/git-sync/commits": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listCommits",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "gitToharness",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseGitFileActivitySummary"
            }
          }
        }
      }
    },
    "/git-sync/errors/count": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "gitSyncErrorCount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLong"
            }
          }
        }
      }
    },
    "/git-sync/errors": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listErrors",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseGitSyncError"
            }
          }
        }
      }
    },
    "/git-sync/errors/gitToHarness/listAllErrors": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listGitToHarnessErrors",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "yamlFilePathPattern",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseGitSyncError"
            }
          }
        }
      }
    },
    "/git-sync/errors/gitToHarness/{commitId}": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listGitToHarnessErrorsForACommit",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "commitId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeData",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "yamlFilePathPattern",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseGitSyncError"
            }
          }
        }
      }
    },
    "/git-sync/errors/harnessToGit": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listHarnessToGitErrors",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseGitSyncError"
            }
          }
        }
      }
    },
    "/git-sync/errors/connectivityIssue": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listGitConnectivityIssues",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseGitProcessingError"
            }
          }
        }
      }
    },
    "/git-sync/activities": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listGitFileActivity",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activityForFileHistory",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseGitFileActivity"
            }
          }
        }
      }
    },
    "/git-sync/errors/_discard": {
      "post": {
        "tags": ["git-sync"],
        "operationId": "discardGitSyncErrorV2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/git-sync/commits/processing": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listCommitsBeingProcessed",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gitToHarness",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListChangeSetDTO"
            }
          }
        }
      }
    },
    "/git-sync/errors/gitToHarness/commits": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listGitToHarnessErrorsCommits",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numberOfErrorsInSummary",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseGitToHarnessErrorCommitStats"
            }
          }
        }
      }
    },
    "/git-sync/errors/gitToHarness/commits/count": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listGitToHarnessErrorsCommits_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInteger"
            }
          }
        }
      }
    },
    "/git-sync/repos": {
      "get": {
        "tags": ["git-sync"],
        "operationId": "listRepositories_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListGitDetail"
            }
          }
        }
      }
    },
    "/harness-api-keys/{clientType}": {
      "get": {
        "tags": ["harness-api-keys"],
        "operationId": "get_21",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["harness-api-keys"],
        "operationId": "delete_14",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/harness-api-keys": {
      "post": {
        "tags": ["harness-api-keys"],
        "operationId": "generate_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/harness-api-keys/validate": {
      "get": {
        "tags": ["harness-api-keys"],
        "operationId": "validate_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "clientType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "apiKey",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/agent/infra-download/delegate-auth/watcher/{version}": {
      "get": {
        "tags": ["agentinfra-download"],
        "operationId": "getWatcherDownloadUrlFromDelegate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/agent/infra-download/delegate-auth/delegate/{version}": {
      "get": {
        "tags": ["agentinfra-download"],
        "operationId": "getDelegateDownloadUrlFromDelegate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/agent/infra-download/default/watcher/{version}": {
      "get": {
        "tags": ["agentinfra-download"],
        "operationId": "getWatcherDownloadUrlFromDefaultAuth",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "env",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/agent/infra-download/default/delegate/{version}": {
      "get": {
        "tags": ["agentinfra-download"],
        "operationId": "getDelegateDownloadUrlFromDefaultAuth",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "env",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/agent/infra-download/delegate-auth/delegate/logging-token": {
      "get": {
        "tags": ["agentinfra-download"],
        "operationId": "getDelegateLoggingTokenFromDelegate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccessTokenBean"
            }
          }
        }
      }
    },
    "/sampleapps/health": {
      "get": {
        "tags": ["sampleapps"],
        "operationId": "getHealth",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSampleAppStatus"
            }
          }
        }
      }
    },
    "/sampleapps/restore": {
      "post": {
        "tags": ["sampleapps"],
        "operationId": "restoreApp",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplication"
            }
          }
        }
      }
    },
    "/tags/for-key": {
      "get": {
        "tags": ["tags"],
        "operationId": "get_22",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeInUseValues",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "key",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseHarnessTag"
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": ["tags"],
        "operationId": "list_25",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeInUseValues",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseHarnessTag"
            }
          }
        }
      },
      "post": {
        "tags": ["tags"],
        "operationId": "create_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HarnessTag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseHarnessTag"
            }
          }
        }
      },
      "put": {
        "tags": ["tags"],
        "operationId": "update_16",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "key",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HarnessTag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseHarnessTag"
            }
          }
        }
      },
      "delete": {
        "tags": ["tags"],
        "operationId": "delete_15",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "key",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/tags/attach": {
      "post": {
        "tags": ["tags"],
        "operationId": "attachTag",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HarnessTagLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/tags/detach": {
      "post": {
        "tags": ["tags"],
        "operationId": "detachTag",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HarnessTagLink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/tags/links": {
      "get": {
        "tags": ["tags"],
        "operationId": "listResourcesWithTag",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseHarnessTagLink"
            }
          }
        }
      }
    },
    "/harnessUserGroup/listHarnessUserGroupForAccount": {
      "get": {
        "tags": ["harnessUserGroup"],
        "operationId": "listHarnessUserGroup",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListHarnessUserGroup"
            }
          }
        }
      }
    },
    "/harnessUserGroup/listAllHarnessSupportUsers": {
      "get": {
        "tags": ["harnessUserGroup"],
        "operationId": "listAllHarnessSupportUsers",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListHarnessSupportUserDTO"
            }
          }
        }
      }
    },
    "/harnessUserGroup/{accountId}": {
      "post": {
        "tags": ["harnessUserGroup"],
        "operationId": "create_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HarnessUserGroupDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseHarnessUserGroup"
            }
          }
        }
      }
    },
    "/harnessUserGroup/{accountId}/{harnessUserGroupId}": {
      "put": {
        "tags": ["harnessUserGroup"],
        "operationId": "updateHarnessUserGroupMembers",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "harnessUserGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HarnessUserGroupDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseHarnessUserGroup"
            }
          }
        }
      },
      "delete": {
        "tags": ["harnessUserGroup"],
        "operationId": "deleteHarnessUserGroup",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "harnessUserGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/harnessUserGroup/{accountId}/deleteHarnessUserGroupWorkflow/{harnessGroupAccountId}/{harnessUserGroupId}": {
      "delete": {
        "tags": ["harnessUserGroup"],
        "operationId": "deleteHarnessUserGroupWorkflow",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "harnessGroupAccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "harnessUserGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/harnessUserGroup/checkIfHarnessSupportEnabledForAccount": {
      "get": {
        "tags": ["harnessUserGroup"],
        "operationId": "checkIfHarnessSupportEnabledForAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/harnessUserGroup/supportEnabledStatus": {
      "get": {
        "tags": ["harnessUserGroup"],
        "operationId": "checkIfHarnessSupportEnabledForAccountInternal",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/harnessUserGroup/supportUsers": {
      "get": {
        "tags": ["harnessUserGroup"],
        "operationId": "getSupportUsersInternal",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListHarnessSupportUserDTO"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "operationId": "get_23",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/health/configuration": {
      "get": {
        "tags": ["health"],
        "operationId": "getConfiguration_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "configurationType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["MONGO", "ELASTICSEARCH", "SEARCH_ENABLED"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseObject"
            }
          }
        }
      }
    },
    "/hosts/import": {
      "post": {
        "tags": ["hosts"],
        "operationId": "importHosts",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/hosts/export": {
      "get": {
        "tags": ["hosts"],
        "operationId": "exportHosts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/hosts/{hostId}": {
      "get": {
        "tags": ["hosts"],
        "operationId": "get_24",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseHost"
            }
          }
        }
      },
      "put": {
        "tags": ["hosts"],
        "operationId": "update_17",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Host"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseHost"
            }
          }
        }
      },
      "delete": {
        "tags": ["hosts"],
        "operationId": "delete_16",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/hosts": {
      "get": {
        "tags": ["hosts"],
        "operationId": "list_26",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseHost"
            }
          }
        }
      }
    },
    "/identity/accounts": {
      "get": {
        "tags": ["identity"],
        "operationId": "listAccounts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAccount"
            }
          }
        }
      }
    },
    "/identity/users": {
      "get": {
        "tags": ["identity"],
        "operationId": "listUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListUser"
            }
          }
        }
      }
    },
    "/identity/user": {
      "get": {
        "tags": ["identity"],
        "operationId": "getUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/identity/user/login": {
      "get": {
        "tags": ["identity"],
        "operationId": "loginUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/identity/account-settings": {
      "get": {
        "tags": ["identity"],
        "operationId": "getAccountSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccountSettingsResponse"
            }
          }
        }
      }
    },
    "/identity/oauth/signup-user": {
      "post": {
        "tags": ["identity"],
        "operationId": "signupOAuthUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OauthUserInfo"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/identity/restricted-switch-account-info": {
      "get": {
        "tags": ["identity"],
        "operationId": "getSwitchAccountInfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseRestrictedSwitchAccountInfo"
            }
          }
        }
      }
    },
    "/identity/accounts/{accountId}": {
      "get": {
        "tags": ["identity"],
        "operationId": "getAccount_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccount"
            }
          }
        }
      }
    },
    "/identity/user/logout": {
      "get": {
        "tags": ["identity"],
        "operationId": "logout",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLogoutResponse"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/hosts": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "listHosts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/subnets": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "listSubnets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vpcIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsSubnet"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "get_25",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureDefinition"
            }
          }
        }
      },
      "put": {
        "tags": ["infrastructure-definitions"],
        "operationId": "update_18",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InfrastructureDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureDefinition"
            }
          }
        }
      },
      "delete": {
        "tags": ["infrastructure-definitions"],
        "operationId": "delete_17",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/infrastructure-definitions": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "list_27",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseInfrastructureDefinition"
            }
          }
        }
      },
      "post": {
        "tags": ["infrastructure-definitions"],
        "operationId": "save_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InfrastructureDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureDefinition"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/elasti-groups/{elastigroupId}/json": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getElastigroupJson",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "elastigroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/containers": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getRunningContainerCount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceNameExpr",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/pcf/runningcount": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getRunningCountForPcfApp",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appNameExpr",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInteger"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/ami/runningcount": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getRunningCountForAmi",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAwsAsgGetRunningCountData"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/deployment-cloudProviders": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "infrastructureTypes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapDeploymentTypeListSettingVariableTypes"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/iam-roles": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getInstanceRoles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/vpcs": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "listVpcs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsVPC"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/security-groups": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "listSecurityGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vpcIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsSecurityGroup"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/aws-elastic-balancers": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAwsLoadBalancers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/aws-network-balancers": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAwsNetworkLoadBalancers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/load-balancers/{loadbalancerName}/target-groups": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getTargetGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/hosted-zones": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getHostedZones",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsRoute53HostedZoneData"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/list": {
      "post": {
        "tags": ["infrastructure-definitions"],
        "operationId": "listPost",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ListInfraDefinitionParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseInfrastructureDefinition"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/detail/{infraDefinitionId}": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getDetail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfraDefinitionDetail"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/aws-elastic-balancers-details": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAwsLoadBalancerDetails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsLoadBalancerDetails"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/aws-network-balancers-details": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAwsNetworkLoadBalancerDetails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsLoadBalancerDetails"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/elasti-groups": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "listElastgroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListElastiGroup"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/elastigroup/runningcount": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getRunningCountForSpotinst",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blueGreen",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "groupNameExpr",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSpotinstElastigroupRunningCountData"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/azure-load-balancers": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAzureLoadBalancers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/azure-load-balancers/{loadBalancerName}/backend-pools": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAzureLoadBalancerBackendPools",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadBalancerName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/subscriptions": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAzureSubscriptions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/resource-groups": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAzureResourceGroupsNames",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/subscriptions/{subscriptionId}/locations": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getSubscriptionLocations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/azure-app-services": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAppServiceNames",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/azure-app-services/{appName}/slots": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAppServiceDeploymentSlotNames",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListDeploymentSlotData"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/azure-app-services/{appName}/slots": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getDeploymentSlotNames",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListDeploymentSlotData"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/load-balancers/{loadbalancerName}/listeners": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getListeners",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsElbListener"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/routes": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getRoutesForPcf",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/{infraDefinitionId}/load-balancers": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getLoadBalancers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/locations": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getCloudProviderLocations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/management-groups": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getManagementGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/vm-scale-sets": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAzureVirtualMachineScaleSets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/vm-scale-sets/{vmssName}": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAzureVirtualMachineScaleSetByName",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vmssName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVirtualMachineScaleSetData"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/compute-providers/{computeProviderId}/azure-app-services": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "getAppServiceNamesByResourceGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceGroupName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-definitions/details": {
      "get": {
        "tags": ["infrastructure-definitions"],
        "operationId": "listDetails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseInfraDefinitionDetail"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/hosts": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "listHosts_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/tags": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "listTags_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/subnets": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "listSubnets_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vpcIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/validate-hosts": {
      "post": {
        "tags": ["infrastructure-mappings"],
        "operationId": "get_26",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HostValidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListHostValidationResponse"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "get_27",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureMapping"
            }
          }
        }
      },
      "put": {
        "tags": ["infrastructure-mappings"],
        "operationId": "update_19",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InfrastructureMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureMapping"
            }
          }
        }
      },
      "delete": {
        "tags": ["infrastructure-mappings"],
        "operationId": "delete_18",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/infrastructure-mappings": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "list_28",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseInfrastructureMapping"
            }
          }
        }
      },
      "post": {
        "tags": ["infrastructure-mappings"],
        "operationId": "save_10",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InfrastructureMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureMapping"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/hosts": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "listComputeProviderHosts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/containers": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getRunningContainerCount_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceNameExpr",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/pcf/runningcount": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getRunningCountForPcfApp_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appNameExpr",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInteger"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/ami/runningcount": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getRunningCountForAmi_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAwsAsgGetRunningCountData"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/stencils": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "infrastructureMappingSchema",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringObject"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/infra-types": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "infrastructureTypes_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapDeploymentTypeListSettingVariableTypes"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/clusters": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getClusterNames",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/instanceTypes": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getInstanceTypes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/iam-roles": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getInstanceRoles_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/instance-roles": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getInstanceRoles_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/vpcs": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "listVpcs_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/security-groups": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "listSecurityGroups_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vpcIds",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/azure-tags": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "listAzureTags",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/resource-groups": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "listAzureResourceGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/auto-scaling-groups": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "listAutoScalingGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/aws-elastic-balancers": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getAwsLoadBalancers_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/aws-network-balancers": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getAwsNetworkLoadBalancers_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/load-balancers/{loadbalancerName}/target-groups": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getTargetGroups_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/load-balancer/{loadbalancerName}/target-groups": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getTargetGroups_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/hosted-zones": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getHostedZones_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsRoute53HostedZoneData"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/classic-load-balancers": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getClassicLoadBalancers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/elastic-load-balancers": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getElasticLoadBalancers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accessKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "secretKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/target-groups": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getAlbTargetGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/codedeploy/application-names": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getCodeDeployApplicationNames",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/load-balancers/{loadbalancerName}/listeners": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getListeners_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "loadbalancerName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsElbListener"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/codedeploy/deployment-groups": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getCodeDeployDeploymentGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/codedeploy/deployment-configs": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getCodeDeployDeploymentConfigs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/pcf/organizations": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getOrganizationsForPcf",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/pcf/spaces": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getSpacesForPcf",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "org",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/pcf/routes": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getRoutesForPcf_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "org",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "space",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/regions": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getRegions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/{infraMappingId}/load-balancers": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getLoadBalancers_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/load-balancers": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getLoadBalancers_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-mappings/compute-providers/{computeProviderId}/roles": {
      "get": {
        "tags": ["infrastructure-mappings"],
        "operationId": "getRoles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-provisioners/{infraProvisionerId}": {
      "get": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "get_28",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraProvisionerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureProvisioner"
            }
          }
        }
      },
      "put": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "update_20",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraProvisionerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InfrastructureProvisioner"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureProvisioner"
            }
          }
        }
      },
      "delete": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "delete_19",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraProvisionerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/infrastructure-provisioners": {
      "get": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "list_29",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseInfrastructureProvisioner"
            }
          }
        }
      },
      "post": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "save_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InfrastructureProvisioner"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureProvisioner"
            }
          }
        }
      }
    },
    "/infrastructure-provisioners/blueprint-properties": {
      "get": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "blueprintProperties",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapPairDeploymentTypeCloudProviderTypeMapStringString"
            }
          }
        }
      }
    },
    "/infrastructure-provisioners/for-task": {
      "get": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "listForTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SSH",
              "AWS_CODEDEPLOY",
              "ECS",
              "SPOTINST",
              "KUBERNETES",
              "HELM",
              "AWS_LAMBDA",
              "AMI",
              "WINRM",
              "PCF",
              "AZURE_VMSS",
              "AZURE_WEBAPP",
              "CUSTOM"
            ]
          },
          {
            "name": "cloudProviderType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["AWS", "GCP", "PHYSICAL_DATA_CENTER"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseInfrastructureProvisioner"
            }
          }
        }
      }
    },
    "/infrastructure-provisioners/details": {
      "get": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "listDetails_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withTags",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseInfrastructureProvisionerDetails"
            }
          }
        }
      }
    },
    "/infrastructure-provisioners/get-params": {
      "post": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "getParamsKeys",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "awsConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceRepoSettingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commitId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "useBranch",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "repoName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAwsCFTemplateParamsData"
            }
          }
        }
      }
    },
    "/infrastructure-provisioners/terraform-variables": {
      "get": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "getTerraformVariables",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceRepoSettingId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commitId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repoName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNameValuePair"
            }
          }
        }
      }
    },
    "/infrastructure-provisioners/terraform-targets": {
      "get": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "getTerraformTargets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provisionerId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/infrastructure-provisioners/tf-download-state": {
      "get": {
        "tags": ["infrastructure-provisioners"],
        "operationId": "downloadTerraformState",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "provisionerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/StreamingOutput"
            }
          }
        }
      }
    },
    "/instana/node-data": {
      "post": {
        "tags": ["instana"],
        "operationId": "getMetricsWithDataForNode_5",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InstanaSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/log-classify": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getLogRecordsToClassify",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListLogDataRecord"
            }
          }
        }
      },
      "post": {
        "tags": ["log-classify"],
        "operationId": "saveLabeledRecord",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NOISE",
                "CLEAN",
                "INFRA",
                "THIRD_PARTY",
                "IMPORTANT",
                "BACKGROUND",
                "JAVA_THROWABLE",
                "ERROR",
                "EXCEPTION",
                "RUNTIME",
                "HTTP",
                "UPSTREAM",
                "DOWNSTREAM",
                "DATABASE",
                "NETWORK",
                "APM",
                "LOGS",
                "JVM",
                "WARN"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/log-classify/cv-feedback-to-classify": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getIgnoreFeedbacksToClassify",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVFeedbackRecord"
            }
          }
        }
      },
      "post": {
        "tags": ["log-classify"],
        "operationId": "saveLabeledIgnoreFeedback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CVFeedbackRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/log-classify/accounts-with-feedback": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getAccountsWithFeedback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapPairStringStringInteger"
            }
          }
        }
      }
    },
    "/log-classify/l2-records-to-label": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getL2RecordsToClassify",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListLogDataRecord"
            }
          }
        }
      }
    },
    "/log-classify/list-labels-to-classify": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getLabels",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListLogLabel"
            }
          }
        }
      }
    },
    "/log-classify/labels-for-cv-feedback": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getSampleLabelsForIgnoreFeedback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringListCVFeedbackRecord"
            }
          }
        }
      }
    },
    "/log-classify/global-feedbacks-to-classify": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getGlobalFeedbacksToClassify",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVFeedbackRecord"
            }
          }
        }
      }
    },
    "/log-classify/global-labels-for-cv-feedback": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getGlobalSampleLabelsForCvFeedback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringListCVFeedbackRecord"
            }
          }
        }
      }
    },
    "/log-classify/save-classify-label-list": {
      "post": {
        "tags": ["log-classify"],
        "operationId": "saveLabeledIgnoreFeedbackList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/CVFeedbackRecord"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/log-classify/services-with-feedback": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getServicesWithFeedback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapPairStringStringInteger"
            }
          }
        }
      }
    },
    "/log-classify/sample-feedback-l2": {
      "get": {
        "tags": ["log-classify"],
        "operationId": "getSampleFeedbackL2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringListString"
            }
          }
        }
      }
    },
    "/log-classify/save-labeled-feedback-l2": {
      "post": {
        "tags": ["log-classify"],
        "operationId": "saveLabeledL2Feedback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LabeledLogRecord"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/logml/user-feedback": {
      "get": {
        "tags": ["logml"],
        "operationId": "getFeedback",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListLogMLFeedbackRecord"
            }
          }
        }
      },
      "post": {
        "tags": ["logml"],
        "operationId": "createUserFeedback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LogMLFeedback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/logml/get-analysis-summary": {
      "get": {
        "tags": ["logml"],
        "operationId": "getLogAnalysisSummary_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLogMLAnalysisSummary"
            }
          }
        }
      }
    },
    "/logml/last-execution-nodes": {
      "get": {
        "tags": ["logml"],
        "operationId": "getLastExecutionNodes",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringMapStringInstanceDetails"
            }
          }
        }
      }
    },
    "/logml/feedbacks": {
      "get": {
        "tags": ["logml"],
        "operationId": "getFeedbacks",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVFeedbackRecord"
            }
          }
        }
      }
    },
    "/logml/add-to-baseline": {
      "post": {
        "tags": ["logml"],
        "operationId": "addToBaseline",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CVFeedbackRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/logml/remove-from-baseline": {
      "post": {
        "tags": ["logml"],
        "operationId": "removeFromBaseline",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CVFeedbackRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/logml/update-priority": {
      "post": {
        "tags": ["logml"],
        "operationId": "updateFeedbackPriority",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CVFeedbackRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/logml/user-feedback/{feedbackId}": {
      "delete": {
        "tags": ["logml"],
        "operationId": "deleteUserFeedback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "feedbackId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/logml/user-feedback-by-workflow": {
      "get": {
        "tags": ["logml"],
        "operationId": "getFeedbackForDashboard",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListLogMLFeedbackRecord"
            }
          }
        }
      }
    },
    "/logml/24x7-user-feedback": {
      "get": {
        "tags": ["logml"],
        "operationId": "get24x7Feedback",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListLogMLFeedbackRecord"
            }
          }
        }
      },
      "post": {
        "tags": ["logml"],
        "operationId": "create24x7UserFeedback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LogMLFeedback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/logml/feedbacks-le": {
      "get": {
        "tags": ["logml"],
        "operationId": "getFeedbacksLE",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCVFeedbackRecord"
            }
          }
        }
      }
    },
    "/logml/feedback-actions": {
      "get": {
        "tags": ["logml"],
        "operationId": "getFeedbacksActionList",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapFeedbackActionListFeedbackAction"
            }
          }
        }
      }
    },
    "/logml/create-cv-jira": {
      "post": {
        "tags": ["logml"],
        "operationId": "createJiraForAnomaly",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CVCollaborationProviderParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/logs/node-data": {
      "post": {
        "tags": ["logs"],
        "operationId": "getMetricsWithDataForNode_6",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomLogSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/logs/activity/{activityId}/unit/{unitName}/batched": {
      "post": {
        "tags": ["logs"],
        "operationId": "batchSave",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "unitName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "byte"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/loginSettings/get-login-settings": {
      "get": {
        "tags": ["loginSettings"],
        "operationId": "getLoginSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLoginSettings"
            }
          }
        }
      }
    },
    "/loginSettings/update-policy-settings": {
      "put": {
        "tags": ["loginSettings"],
        "operationId": "updatePasswordPolicy",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PasswordExpirationPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLoginSettings"
            }
          }
        }
      }
    },
    "/loginSettings/update-lockout-settings": {
      "put": {
        "tags": ["loginSettings"],
        "operationId": "updateUserLockoutSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserLockoutPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLoginSettings"
            }
          }
        }
      }
    },
    "/loginSettings/update-password-strength-settings": {
      "put": {
        "tags": ["loginSettings"],
        "operationId": "updatePasswordStrengthSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PasswordStrengthPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLoginSettings"
            }
          }
        }
      }
    },
    "/logz/get-host-records": {
      "get": {
        "tags": ["logz"],
        "operationId": "getHostLogRecord_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "index",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostNameField",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["TERM", "MATCH", "MATCH_PHRASE"]
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeStampField",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeStampFieldFormat",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "messageField",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseObject"
            }
          }
        }
      }
    },
    "/logz/get-sample-record": {
      "get": {
        "tags": ["logz"],
        "operationId": "getSampleLogRecord_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseObject"
            }
          }
        }
      }
    },
    "/mktplace/gcp-signup": {
      "post": {
        "tags": ["mktplace"],
        "operationId": "gcpSignUp_1",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["text/html"],
        "parameters": [
          {
            "name": "x-gcp-marketplace-token",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/mktplace/aws-signup": {
      "post": {
        "tags": ["mktplace"],
        "operationId": "awsMarketLogin",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["text/html"],
        "parameters": [
          {
            "name": "x-amzn-marketplace-token",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/mktplace/gcp-billing": {
      "post": {
        "tags": ["mktplace"],
        "operationId": "gcpBilling",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["text/html"],
        "parameters": [
          {
            "name": "x-gcp-marketplace-token",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": ["metrics"],
        "operationId": "get_29",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/newrelic/applications": {
      "get": {
        "tags": ["newrelic"],
        "operationId": "getAllApplications_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNewRelicApplication"
            }
          }
        }
      }
    },
    "/newrelic/node-data": {
      "post": {
        "tags": ["newrelic"],
        "operationId": "getMetricsWithDataForNode_7",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NewRelicSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/newrelic/nodes": {
      "get": {
        "tags": ["newrelic"],
        "operationId": "getApplicationInstances",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNewRelicApplicationInstance"
            }
          }
        }
      }
    },
    "/newrelic/txns-with-data": {
      "get": {
        "tags": ["newrelic"],
        "operationId": "getTxnsWithData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "instanceId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNewRelicMetric"
            }
          }
        }
      }
    },
    "/newrelic/test": {
      "get": {
        "tags": ["newrelic"],
        "operationId": "test1",
        "produces": ["application/v1+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/newrelic/resolve-application-name": {
      "get": {
        "tags": ["newrelic"],
        "operationId": "resolveNewRelicAppName",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "newRelicApplicationName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseNewRelicApplication"
            }
          }
        }
      }
    },
    "/newrelic/resolve-application-id": {
      "get": {
        "tags": ["newrelic"],
        "operationId": "resolveNewRelicAppId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "newRelicApplicationId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseNewRelicApplication"
            }
          }
        }
      }
    },
    "/newrelic/metric-names": {
      "get": {
        "tags": ["newrelic"],
        "operationId": "getAllMetricNames_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListMetric"
            }
          }
        }
      }
    },
    "/notifications/{notificationId}": {
      "get": {
        "tags": ["notifications"],
        "operationId": "get_30",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "notificationId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseNotification"
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": ["notifications"],
        "operationId": "list_30",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseNotification"
            }
          }
        }
      }
    },
    "/notifications/{notificationId}/action/{type}": {
      "post": {
        "tags": ["notifications"],
        "operationId": "act",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": ["APPROVE", "REJECT", "RESUME"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseNotification"
            }
          }
        }
      }
    },
    "/notification-setup/notification-groups": {
      "get": {
        "tags": ["notification-setup"],
        "operationId": "listNotificationGroups",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseNotificationGroup"
            }
          }
        }
      },
      "post": {
        "tags": ["notification-setup"],
        "operationId": "createNotificationGroups",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseNotificationGroup"
            }
          }
        }
      }
    },
    "/notification-setup/notification-groups/{notificationGroupId}": {
      "get": {
        "tags": ["notification-setup"],
        "operationId": "readNotificationGroup",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "notificationGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseNotificationGroup"
            }
          }
        }
      },
      "put": {
        "tags": ["notification-setup"],
        "operationId": "updateNotificationGroups",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "notificationGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseNotificationGroup"
            }
          }
        }
      },
      "delete": {
        "tags": ["notification-setup"],
        "operationId": "deleteNotificationGroups",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "notificationGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/pcfresource/create-route": {
      "post": {
        "tags": ["pcfresource"],
        "operationId": "createRouteForPcf",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "org",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "space",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "host",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "port",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "useRandomPort",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tcpRoute",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/perpetualTaskSchedule": {
      "get": {
        "tags": ["perpetualTaskSchedule"],
        "operationId": "getByAccountIdAndPerpetualTaskType",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "perpetualTaskType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePerpetualTaskScheduleConfig"
            }
          }
        }
      },
      "post": {
        "tags": ["perpetualTaskSchedule"],
        "operationId": "save_12",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "perpetualTaskType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIntervalInMillis",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePerpetualTaskScheduleConfig"
            }
          }
        }
      },
      "delete": {
        "tags": ["perpetualTaskSchedule"],
        "operationId": "resetByAccountIdAndPerpetualTaskType",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "perpetualTaskType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timeIntervalInMillis",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/pipelines/{pipelineId}/clone": {
      "post": {
        "tags": ["pipelines"],
        "operationId": "clone_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePipeline"
            }
          }
        }
      }
    },
    "/pipelines/{pipelineId}": {
      "get": {
        "tags": ["pipelines"],
        "operationId": "read",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "withServices",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "withVariables",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePipeline"
            }
          }
        }
      },
      "put": {
        "tags": ["pipelines"],
        "operationId": "update_21",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePipeline"
            }
          }
        }
      },
      "delete": {
        "tags": ["pipelines"],
        "operationId": "delete_20",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/pipelines": {
      "get": {
        "tags": ["pipelines"],
        "operationId": "list_31",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "previousExecutionsCount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withTags",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponsePipeline"
            }
          }
        }
      },
      "post": {
        "tags": ["pipelines"],
        "operationId": "create_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePipeline"
            }
          }
        }
      }
    },
    "/pipelines/{pipelineId}/failure-strategies": {
      "put": {
        "tags": ["pipelines"],
        "operationId": "updateFailureStrategies",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategy"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListFailureStrategy"
            }
          }
        }
      }
    },
    "/pipelines/stencils": {
      "get": {
        "tags": ["pipelines"],
        "operationId": "stencils",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListStencil"
            }
          }
        }
      }
    },
    "/pipelines/required-entities": {
      "get": {
        "tags": ["pipelines"],
        "operationId": "requiredEntities",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListEntityType"
            }
          }
        }
      }
    },
    "/plugins/{accountId}/installed": {
      "get": {
        "tags": ["plugins"],
        "operationId": "installedPlugins",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAccountPlugin"
            }
          }
        }
      }
    },
    "/plugins/{accountId}/installed/settingschema": {
      "get": {
        "tags": ["plugins"],
        "operationId": "installedPluginSettingSchema",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringMapStringObject"
            }
          }
        }
      }
    },
    "/preference": {
      "get": {
        "tags": ["preference"],
        "operationId": "listPreferences",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponsePreference"
            }
          }
        }
      },
      "post": {
        "tags": ["preference"],
        "operationId": "savePreference",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePreference"
            }
          }
        }
      }
    },
    "/preference/{preferenceId}": {
      "get": {
        "tags": ["preference"],
        "operationId": "getPreference",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "preferenceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePreference"
            }
          }
        }
      },
      "put": {
        "tags": ["preference"],
        "operationId": "updatePreference",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "preferenceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePreference"
            }
          }
        }
      },
      "delete": {
        "tags": ["preference"],
        "operationId": "deletePreference",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "preferenceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/preference/auditPreference": {
      "get": {
        "tags": ["preference"],
        "operationId": "listAuditPreferences",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAuditPreferenceResponse"
            }
          }
        }
      }
    },
    "/prometheus/validate-metrics": {
      "post": {
        "tags": ["prometheus"],
        "operationId": "validateMetrics",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeSeries"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/prometheus/node-data": {
      "post": {
        "tags": ["prometheus"],
        "operationId": "getMetricsWithDataForNode_8",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PrometheusSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/resource-constraints/{resourceConstraintId}": {
      "put": {
        "tags": ["resource-constraints"],
        "operationId": "update_22",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceConstraintId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ResourceConstraint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseResourceConstraint"
            }
          }
        }
      },
      "delete": {
        "tags": ["resource-constraints"],
        "operationId": "delete_21",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceConstraintId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/resource-constraints": {
      "get": {
        "tags": ["resource-constraints"],
        "operationId": "list_32",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseResourceConstraint"
            }
          }
        }
      },
      "post": {
        "tags": ["resource-constraints"],
        "operationId": "save_13",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ResourceConstraint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseResourceConstraint"
            }
          }
        }
      }
    },
    "/resource-constraints/usage": {
      "post": {
        "tags": ["resource-constraints"],
        "operationId": "usage",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListResourceConstraintUsage"
            }
          }
        }
      }
    },
    "/resourcelookup/acc_resource_types": {
      "get": {
        "tags": ["resourcelookup"],
        "operationId": "listAccResourceTypes",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/resourcelookup/app_resource_types": {
      "get": {
        "tags": ["resourcelookup"],
        "operationId": "listAppResourceTypes",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/resourcelookup": {
      "get": {
        "tags": ["resourcelookup"],
        "operationId": "list_33",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseResourceLookup"
            }
          }
        }
      }
    },
    "/resourcelookup/tags": {
      "get": {
        "tags": ["resourcelookup"],
        "operationId": "listResourcesWithTag_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceLookup"
              }
            }
          }
        }
      }
    },
    "/roles/{roleId}": {
      "get": {
        "tags": ["roles"],
        "operationId": "get_31",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseRole"
            }
          }
        }
      },
      "put": {
        "tags": ["roles"],
        "operationId": "update_23",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseRole"
            }
          }
        }
      },
      "delete": {
        "tags": ["roles"],
        "operationId": "delete_22",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "{roleId}",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": ["roles"],
        "operationId": "list_34",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseRole"
            }
          }
        }
      },
      "post": {
        "tags": ["roles"],
        "operationId": "save_14",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseRole"
            }
          }
        }
      }
    },
    "/sso/saml-idp-metadata-upload": {
      "post": {
        "tags": ["sso"],
        "operationId": "uploadSamlMetaData",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "displayName",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupMembershipAttr",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "authorizationEnabled",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "logoutUrl",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityIdentifier",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      },
      "put": {
        "tags": ["sso"],
        "operationId": "updateSamlMetaData",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "displayName",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupMembershipAttr",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "authorizationEnabled",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "logoutUrl",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityIdentifier",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/oauth-settings-upload": {
      "post": {
        "tags": ["sso"],
        "operationId": "uploadOathSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OauthSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      },
      "put": {
        "tags": ["sso"],
        "operationId": "updateOathSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OauthSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseOauthSettings"
            }
          }
        }
      }
    },
    "/sso/delete-oauth-settings": {
      "delete": {
        "tags": ["sso"],
        "operationId": "deleteOauthSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/delete-saml-idp-metadata": {
      "delete": {
        "tags": ["sso"],
        "operationId": "deleteSamlMetaData",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/assign-auth-mechanism": {
      "put": {
        "tags": ["sso"],
        "operationId": "setAuthMechanism",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "authMechanism",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["USER_PASSWORD", "SAML", "LDAP", "OAUTH"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/auth-mechanism/LDAP": {
      "put": {
        "tags": ["sso"],
        "operationId": "enableLdapAuthMechanism",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LDAPTestAuthenticationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/auth-mechanism/SAML": {
      "put": {
        "tags": ["sso"],
        "operationId": "enableSamlAuthMechanism",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/auth-mechanism/OAUTH": {
      "put": {
        "tags": ["sso"],
        "operationId": "enableOauthAuthMechanism",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/auth-mechanism/USER_PASSWORD": {
      "put": {
        "tags": ["sso"],
        "operationId": "enableBasicAuthMechanism",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/ldap/{ldapId}/search/group": {
      "get": {
        "tags": ["sso"],
        "operationId": "searchLdapGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "ldapId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCollectionLdapGroupResponse"
            }
          }
        }
      }
    },
    "/sso/saml-login-test": {
      "get": {
        "tags": ["sso"],
        "operationId": "getSamlLoginTest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLoginTypeResponse"
            }
          }
        }
      }
    },
    "/sso/saml-logout-url-upload": {
      "put": {
        "tags": ["sso"],
        "operationId": "updateLogoutUrlSamlSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logoutUrl",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/access-management/{accountId}": {
      "get": {
        "tags": ["sso"],
        "operationId": "getAccountAccessManagementSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSSOConfig"
            }
          }
        }
      }
    },
    "/sso/ldap/settings": {
      "get": {
        "tags": ["sso"],
        "operationId": "getLdapSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLdapSettings"
            }
          }
        }
      },
      "post": {
        "tags": ["sso"],
        "operationId": "createLdapSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LdapSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLdapSettings"
            }
          }
        }
      },
      "put": {
        "tags": ["sso"],
        "operationId": "updateLdapSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LdapSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLdapSettings"
            }
          }
        }
      },
      "delete": {
        "tags": ["sso"],
        "operationId": "deleteLdapSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLdapSettings"
            }
          }
        }
      }
    },
    "/sso/ldap/settings/test/connection": {
      "post": {
        "tags": ["sso"],
        "operationId": "validateLdapConnectionSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LdapSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLdapTestResponse"
            }
          }
        }
      }
    },
    "/sso/ldap/settings/test/user": {
      "post": {
        "tags": ["sso"],
        "operationId": "validateLdapUserSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LdapSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLdapTestResponse"
            }
          }
        }
      }
    },
    "/sso/ldap/settings/test/group": {
      "post": {
        "tags": ["sso"],
        "operationId": "validateLdapGroupSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LdapSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLdapTestResponse"
            }
          }
        }
      }
    },
    "/sso/ldap/settings/test/authentication": {
      "post": {
        "tags": ["sso"],
        "operationId": "validateLdapAuthentication",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LDAPTestAuthenticationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLdapResponse"
            }
          }
        }
      }
    },
    "/sso/ldap/iterations": {
      "post": {
        "tags": ["sso"],
        "operationId": "getIterationsFromCron",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CronExpressionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListLong"
            }
          }
        }
      }
    },
    "/cf-feature": {
      "get": {
        "tags": ["cf-feature"],
        "operationId": "get_32",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "feature",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/perpetual-task": {
      "post": {
        "tags": ["perpetual-task"],
        "operationId": "create_4",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "population",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "put": {
        "tags": ["perpetual-task"],
        "operationId": "update_24",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "population",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/scim/account/{accountId}/Groups/{groupId}": {
      "get": {
        "tags": ["scim"],
        "summary": "Fetch an existing user by uuid",
        "description": "",
        "operationId": "getGroup",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": ["scim"],
        "summary": "Update a group",
        "description": "",
        "operationId": "updateGroup",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScimGroup"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["scim"],
        "summary": "Delete an existing user by uuid",
        "description": "",
        "operationId": "deleteGroup",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "patch": {
        "tags": ["scim"],
        "summary": "Update some fields of a groups by uuid. Can update members/name",
        "description": "",
        "operationId": "updateGroup_1",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PatchRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/scim/account/{accountId}/Groups": {
      "get": {
        "tags": ["scim"],
        "summary": "Search groups by their name. Supports pagination. If nothing is passed in filter, all results will be returned.",
        "description": "",
        "operationId": "searchGroup",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": ["scim"],
        "summary": "Create a new group and return uuid in response",
        "description": "",
        "operationId": "createGroup",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScimGroup"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/scim/account/{accountId}/Users/{userId}": {
      "get": {
        "tags": ["scim"],
        "summary": "Get an existing user by uuid",
        "description": "",
        "operationId": "getUser_1",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": ["scim"],
        "summary": "Update an existing user by uuid",
        "description": "",
        "operationId": "updateUser_1",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScimUser"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["scim"],
        "summary": "Delete an user by uuid",
        "description": "",
        "operationId": "deleteUser",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "patch": {
        "tags": ["scim"],
        "summary": "Update some fields of a user by uuid",
        "description": "",
        "operationId": "updateUser",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PatchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ScimUser"
            }
          }
        }
      }
    },
    "/scim/account/{accountId}/Users": {
      "get": {
        "tags": ["scim"],
        "summary": "Search users by their email address. Supports pagination. If nothing is passed in filter, all results will be returned.",
        "description": "",
        "operationId": "searchUser",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": ["scim"],
        "summary": "Create a new user",
        "description": "",
        "operationId": "createUser",
        "consumes": ["application/scim+json", "application/json"],
        "produces": ["application/scim+json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScimUser"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/search/advanced": {
      "post": {
        "tags": ["search"],
        "operationId": "getSearchResults",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AdvancedSearchQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSearchResults"
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": ["search"],
        "operationId": "getSearchResults_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSearchResults"
            }
          }
        }
      }
    },
    "/server": {
      "get": {
        "tags": ["server"],
        "operationId": "getServerInfo",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServerInfo"
            }
          }
        }
      }
    },
    "/serverless-dashboard/manual-sync": {
      "put": {
        "tags": ["serverless-dashboard"],
        "operationId": "manualSyncServerlessInfraMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inframappingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/serverless-dashboard/app-instance-summary-stats": {
      "get": {
        "tags": ["serverless-dashboard"],
        "operationId": "getAppInstanceSummaryStats_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInstanceSummaryStats"
            }
          }
        }
      }
    },
    "/serverless-dashboard/instance-details": {
      "get": {
        "tags": ["serverless-dashboard"],
        "operationId": "getInstanceDetails_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "instanceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServerlessInstance"
            }
          }
        }
      }
    },
    "/serverless-dashboard/service-instance-stats": {
      "get": {
        "tags": ["serverless-dashboard"],
        "operationId": "getServiceInstanceStats_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListInstanceStatsByEnvironment"
            }
          }
        }
      }
    },
    "/serverless-dashboard/app-instance-count-stats": {
      "get": {
        "tags": ["serverless-dashboard"],
        "operationId": "getAppInstanceCountStats_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseInstanceSummaryStatsByService"
            }
          }
        }
      }
    },
    "/serverless-dashboard/manual-sync-job": {
      "get": {
        "tags": ["serverless-dashboard"],
        "operationId": "getManualSyncJobStatus_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "jobs",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListBoolean"
            }
          }
        }
      }
    },
    "/serverless-dashboard/timeline": {
      "get": {
        "tags": ["serverless-dashboard"],
        "operationId": "getInstanceStatsForGivenTime_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromTsMillis",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toTsMillis",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "invocation_count_key",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "LAST_30_DAYS",
            "enum": ["LAST_30_DAYS", "SINCE_LAST_DEPLOYED"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServerlessInstanceTimeline"
            }
          }
        }
      }
    },
    "/serverless-dashboard/instance-history-ranges": {
      "get": {
        "tags": ["serverless-dashboard"],
        "operationId": "getTimeRanges_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeRange"
            }
          }
        }
      }
    },
    "/service-instances": {
      "get": {
        "tags": ["service-instances"],
        "operationId": "list_35",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseServiceInstance"
            }
          }
        }
      }
    },
    "/servicenow/ticket-types": {
      "get": {
        "tags": ["servicenow"],
        "operationId": "getTicketTypes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/servicenow/{connectorId}/states": {
      "get": {
        "tags": ["servicenow"],
        "operationId": "getStates",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ticketType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["INCIDENT", "PROBLEM", "CHANGE_REQUEST", "CHANGE_TASK"]
          },
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/servicenow/{connectorId}/approvalstates": {
      "get": {
        "tags": ["servicenow"],
        "operationId": "getApprovalValues",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ticketType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["INCIDENT", "PROBLEM", "CHANGE_REQUEST", "CHANGE_TASK"]
          },
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/servicenow/{connectorId}/createMeta": {
      "get": {
        "tags": ["servicenow"],
        "operationId": "getCreateMeta",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ticketType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["INCIDENT", "PROBLEM", "CHANGE_REQUEST", "CHANGE_TASK"]
          },
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/servicenow/{connectorId}/additionalFields": {
      "get": {
        "tags": ["servicenow"],
        "operationId": "getAdditionalFields",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ticketType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["INCIDENT", "PROBLEM", "CHANGE_REQUEST", "CHANGE_TASK"]
          },
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "typeFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["DATE_TIME", "INTEGER", "BOOLEAN", "STRING"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/services/{serviceId}/commands": {
      "post": {
        "tags": ["services"],
        "operationId": "saveCommand",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "command",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      },
      "put": {
        "tags": ["services"],
        "operationId": "updateCommands",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "command",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceCommand"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/services/{serviceId}/commands/{commandName}": {
      "get": {
        "tags": ["services"],
        "operationId": "getCommand",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceCommand"
            }
          }
        }
      },
      "put": {
        "tags": ["services"],
        "operationId": "updateCommand",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/services/{serviceId}/commands/{commandName}/clone": {
      "post": {
        "tags": ["services"],
        "operationId": "cloneCommand",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/services/{serviceId}/commands/{serviceCommandId}": {
      "delete": {
        "tags": ["services"],
        "operationId": "deleteCommand",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceCommandId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/services/{serviceId}/containers/tasks": {
      "get": {
        "tags": ["services"],
        "operationId": "listContainerTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseContainerTask"
            }
          }
        }
      },
      "post": {
        "tags": ["services"],
        "operationId": "createContainerTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "advanced",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContainerTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseContainerTask"
            }
          }
        }
      }
    },
    "/services/{serviceId}/containers/tasks/{taskId}": {
      "put": {
        "tags": ["services"],
        "operationId": "updateContainerTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "advanced",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContainerTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseContainerTask"
            }
          }
        }
      }
    },
    "/services/{serviceId}/containers/tasks/{taskId}/advanced": {
      "put": {
        "tags": ["services"],
        "operationId": "updateContainerTaskAdvanced",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reset",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseContainerTask"
            }
          }
        }
      }
    },
    "/services/{serviceId}/containers/tasks/stencils": {
      "get": {
        "tags": ["services"],
        "operationId": "listTaskStencils",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListStencil"
            }
          }
        }
      }
    },
    "/services/{serviceId}/containers/charts": {
      "get": {
        "tags": ["services"],
        "operationId": "listHelmChartSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseHelmChartSpecification"
            }
          }
        }
      },
      "post": {
        "tags": ["services"],
        "operationId": "createHelmChartSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HelmChartSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseHelmChartSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/containers/charts/{taskId}": {
      "put": {
        "tags": ["services"],
        "operationId": "updateHelmChartSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HelmChartSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseHelmChartSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/pcfspecification": {
      "get": {
        "tags": ["services"],
        "operationId": "getPcfServiceSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePcfServiceSpecification"
            }
          }
        }
      },
      "post": {
        "tags": ["services"],
        "operationId": "createPcfServiceSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PcfServiceSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePcfServiceSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/pcfspecification/{pcfSpecificationId}": {
      "put": {
        "tags": ["services"],
        "operationId": "updatePcfServiceSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pcfSpecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PcfServiceSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePcfServiceSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/pcfspecification/reset": {
      "put": {
        "tags": ["services"],
        "operationId": "resetToDefaultPcfServiceSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PcfServiceSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePcfServiceSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/ecsSpecification": {
      "get": {
        "tags": ["services"],
        "operationId": "getEcsServiceSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEcsServiceSpecification"
            }
          }
        }
      },
      "post": {
        "tags": ["services"],
        "operationId": "createEcsServiceSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EcsServiceSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEcsServiceSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/ecsSpecification/{ecsSpecificationId}": {
      "put": {
        "tags": ["services"],
        "operationId": "updateEcsServiceSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ecsSpecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EcsServiceSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEcsServiceSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/ecsSpecification/reset": {
      "put": {
        "tags": ["services"],
        "operationId": "resetToDefaultEcsServiceSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEcsServiceSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/lambda-specifications": {
      "get": {
        "tags": ["services"],
        "operationId": "listLambdaSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseLambdaSpecification"
            }
          }
        }
      },
      "post": {
        "tags": ["services"],
        "operationId": "createLambdaSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LambdaSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLambdaSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/lambda-specifications/{lambdaSpecificationId}": {
      "put": {
        "tags": ["services"],
        "operationId": "updateLambdaSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "lambdaSpecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LambdaSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLambdaSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/user-data-specifications": {
      "get": {
        "tags": ["services"],
        "operationId": "listUserDataSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseUserDataSpecification"
            }
          }
        }
      },
      "post": {
        "tags": ["services"],
        "operationId": "createUserDataSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserDataSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserDataSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/user-data-specifications/{userDataSpecificationId}": {
      "put": {
        "tags": ["services"],
        "operationId": "updateUserDataSpecification",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userDataSpecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserDataSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserDataSpecification"
            }
          }
        }
      }
    },
    "/services/{serviceId}/config-map-yaml": {
      "post": {
        "tags": ["services"],
        "operationId": "setConfigMapYaml_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      },
      "put": {
        "tags": ["services"],
        "operationId": "updateConfigMapYaml_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      },
      "delete": {
        "tags": ["services"],
        "operationId": "deleteConfigMapYaml_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/services/{serviceId}/helm-value-yaml": {
      "post": {
        "tags": ["services"],
        "operationId": "setHelmValueYaml_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      },
      "put": {
        "tags": ["services"],
        "operationId": "updateHelmValueYaml_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KubernetesPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      },
      "delete": {
        "tags": ["services"],
        "operationId": "deleteHelmValueYaml_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/services/{serviceId}/commands/categories": {
      "get": {
        "tags": ["services"],
        "operationId": "getCommandUnitItems",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterCommand",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCommandCategory"
            }
          }
        }
      }
    },
    "/services/{serviceId}/app-manifest": {
      "get": {
        "tags": ["services"],
        "operationId": "getAppManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      }
    },
    "/services/{serviceId}/k8s-values": {
      "post": {
        "tags": ["services"],
        "operationId": "createManifestFile_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestKind",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "VALUES",
              "KUSTOMIZE_PATCHES",
              "K8S_MANIFEST",
              "PCF_OVERRIDE",
              "AZURE_APP_SERVICE_MANIFEST",
              "AZURE_APP_SETTINGS_OVERRIDE",
              "AZURE_CONN_STRINGS_OVERRIDE",
              "HELM_CHART_OVERRIDE",
              "OC_PARAMS"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManifestFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      }
    },
    "/services/{serviceId}/k8s-values/{manifestFileId}": {
      "get": {
        "tags": ["services"],
        "operationId": "getManifestFile_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      },
      "put": {
        "tags": ["services"],
        "operationId": "updateManifestFile_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestKind",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "VALUES",
              "KUSTOMIZE_PATCHES",
              "K8S_MANIFEST",
              "PCF_OVERRIDE",
              "AZURE_APP_SERVICE_MANIFEST",
              "AZURE_APP_SETTINGS_OVERRIDE",
              "AZURE_CONN_STRINGS_OVERRIDE",
              "HELM_CHART_OVERRIDE",
              "OC_PARAMS"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ManifestFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      },
      "delete": {
        "tags": ["services"],
        "operationId": "deleteManifestFIle_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/services/{serviceId}/k8s-values/app-manifest": {
      "post": {
        "tags": ["services"],
        "operationId": "createK8sValueAppManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationManifest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      }
    },
    "/services/{serviceId}/k8s-values/app-manifest/{appManifestId}": {
      "get": {
        "tags": ["services"],
        "operationId": "getK8sValueAppManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      },
      "put": {
        "tags": ["services"],
        "operationId": "updateK8sValueAppManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ApplicationManifest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationManifest"
            }
          }
        }
      },
      "delete": {
        "tags": ["services"],
        "operationId": "deleteK8sValueAppManifest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/services/{serviceId}/app-manifests": {
      "get": {
        "tags": ["services"],
        "operationId": "listAppManifests",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListApplicationManifest"
            }
          }
        }
      }
    },
    "/services/{serviceId}/artifact-stream-bindings": {
      "get": {
        "tags": ["services"],
        "operationId": "listArtifactStreamBindings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListArtifactStreamBinding"
            }
          }
        }
      },
      "post": {
        "tags": ["services"],
        "operationId": "createArtifactStreamBinding",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ArtifactStreamBinding"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStreamBinding"
            }
          }
        }
      }
    },
    "/services/{serviceId}/artifact-stream-bindings/{name}": {
      "get": {
        "tags": ["services"],
        "operationId": "getArtifactStreamBinding",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStreamBinding"
            }
          }
        }
      },
      "put": {
        "tags": ["services"],
        "operationId": "updateArtifactStreamBinding",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ArtifactStreamBinding"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStreamBinding"
            }
          }
        }
      },
      "delete": {
        "tags": ["services"],
        "operationId": "deleteArtifactStreamBinding",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/services/{serviceId}/chart-versions": {
      "get": {
        "tags": ["services"],
        "operationId": "getHelmChartVersions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "manifestSearchString",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringListHelmChart"
            }
          }
        }
      }
    },
    "/services/{serviceId}/helm-version": {
      "put": {
        "tags": ["services"],
        "operationId": "updateHelmVersion",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/services/{serviceId}/helm-command-flag": {
      "get": {
        "tags": ["services"],
        "operationId": "getHelmCommandFlags",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["V2", "V3"]
          },
          {
            "name": "storeType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Local",
              "Remote",
              "HelmSourceRepo",
              "HelmChartRepo",
              "KustomizeSourceRepo",
              "OC_TEMPLATES",
              "CUSTOM",
              "CUSTOM_OPENSHIFT_TEMPLATE",
              "VALUES_YAML_FROM_HELM_REPO"
            ]
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetHelmSubCommand"
            }
          }
        }
      }
    },
    "/services/{serviceId}": {
      "get": {
        "tags": ["services"],
        "operationId": "get_33",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["COMPLETE", "INCOMPLETE"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      },
      "put": {
        "tags": ["services"],
        "operationId": "update_25",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      },
      "delete": {
        "tags": ["services"],
        "operationId": "delete_23",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/services/{serviceId}/clone": {
      "post": {
        "tags": ["services"],
        "operationId": "clone_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": ["services"],
        "operationId": "list_36",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withTags",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseService"
            }
          }
        }
      },
      "post": {
        "tags": ["services"],
        "operationId": "save_15",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/services/{serviceId}/artifact-streams": {
      "get": {
        "tags": ["services"],
        "operationId": "listArtifactStreams",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListArtifactStream"
            }
          }
        }
      }
    },
    "/services/forDeployment": {
      "get": {
        "tags": ["services"],
        "operationId": "getServices",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deploymentTypeTemplateId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListService"
            }
          }
        }
      }
    },
    "/services/{serviceId}/commands/stencils": {
      "get": {
        "tags": ["services"],
        "operationId": "stencils_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterCommand",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListStencil"
            }
          }
        }
      }
    },
    "/service-templates/{templateId}/compute-files": {
      "get": {
        "tags": ["service-templates"],
        "operationId": "computeFiles",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/service-templates/{templateId}": {
      "get": {
        "tags": ["service-templates"],
        "operationId": "get_34",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceTemplate"
            }
          }
        }
      },
      "put": {
        "tags": ["service-templates"],
        "operationId": "update_26",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceTemplate"
            }
          }
        }
      },
      "delete": {
        "tags": ["service-templates"],
        "operationId": "delete_24",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/service-templates": {
      "get": {
        "tags": ["service-templates"],
        "operationId": "list_37",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseServiceTemplate"
            }
          }
        }
      },
      "post": {
        "tags": ["service-templates"],
        "operationId": "create_5",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceTemplate"
            }
          }
        }
      }
    },
    "/service-variables/{serviceVariableId}": {
      "get": {
        "tags": ["service-variables"],
        "operationId": "get_35",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceVariableId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "withArtifactStreamSummary",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceVariable"
            }
          }
        }
      },
      "put": {
        "tags": ["service-variables"],
        "operationId": "update_27",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceVariableId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceVariable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["service-variables"],
        "operationId": "delete_25",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceVariableId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/service-variables": {
      "get": {
        "tags": ["service-variables"],
        "operationId": "list_38",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "withArtifactStreamSummary",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseServiceVariable"
            }
          }
        }
      },
      "post": {
        "tags": ["service-variables"],
        "operationId": "save_16",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceVariable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceVariable"
            }
          }
        }
      }
    },
    "/service-variables/entity/{entityId}": {
      "delete": {
        "tags": ["service-variables"],
        "operationId": "deleteByEntity_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/settings/tags": {
      "get": {
        "tags": ["settings"],
        "operationId": "listTags_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "computeProviderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/settings/build-sources/builds": {
      "get": {
        "tags": ["settings"],
        "operationId": "getBuilds_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "artifactStreamId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListBuildDetails"
            }
          }
        }
      }
    },
    "/settings/build-sources/jobs": {
      "get": {
        "tags": ["settings"],
        "operationId": "getJobs_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "parentJobName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetJobDetails"
            }
          }
        }
      }
    },
    "/settings/{attrId}": {
      "get": {
        "tags": ["settings"],
        "operationId": "get_36",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "attrId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSettingAttribute"
            }
          }
        }
      },
      "put": {
        "tags": ["settings"],
        "operationId": "update_30",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "attrId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SettingAttribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSettingAttribute"
            }
          }
        }
      },
      "delete": {
        "tags": ["settings"],
        "operationId": "delete_27",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "attrId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/settings/artifact-streams/{streamId}": {
      "get": {
        "tags": ["settings"],
        "operationId": "get_37",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "streamId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStream"
            }
          }
        }
      },
      "put": {
        "tags": ["settings"],
        "operationId": "update_28",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "streamId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ArtifactStream"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStream"
            }
          }
        }
      },
      "delete": {
        "tags": ["settings"],
        "operationId": "delete_26",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "streamId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/settings/{attrId}/upload": {
      "put": {
        "tags": ["settings"],
        "operationId": "update_29",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "attrId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "usageRestrictions",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSettingAttribute"
            }
          }
        }
      }
    },
    "/settings": {
      "get": {
        "tags": ["settings"],
        "operationId": "list_39",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "currentAppId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "currentEnvId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "HOST_CONNECTION_ATTRIBUTES",
                "BASTION_HOST_CONNECTION_ATTRIBUTES",
                "SMTP",
                "SFTP",
                "JENKINS",
                "BAMBOO",
                "STRING",
                "SPLUNK",
                "ELK",
                "LOGZ",
                "SUMO",
                "DATA_DOG",
                "APM_VERIFICATION",
                "BUG_SNAG",
                "LOG_VERIFICATION",
                "APP_DYNAMICS",
                "NEW_RELIC",
                "DYNA_TRACE",
                "INSTANA",
                "DATA_DOG_LOG",
                "CLOUD_WATCH",
                "SCALYR",
                "ELB",
                "SLACK",
                "AWS",
                "GCS",
                "GCP",
                "AZURE",
                "PCF",
                "DIRECT",
                "KUBERNETES_CLUSTER",
                "DOCKER",
                "ECR",
                "GCR",
                "ACR",
                "PHYSICAL_DATA_CENTER",
                "KUBERNETES",
                "NEXUS",
                "ARTIFACTORY",
                "SMB",
                "AMAZON_S3",
                "GIT",
                "SSH_SESSION_CONFIG",
                "SERVICE_VARIABLE",
                "CONFIG_FILE",
                "KMS",
                "GCP_KMS",
                "JIRA",
                "SERVICENOW",
                "SECRET_TEXT",
                "YAML_GIT_SYNC",
                "VAULT",
                "VAULT_SSH",
                "AWS_SECRETS_MANAGER",
                "CYBERARK",
                "WINRM_CONNECTION_ATTRIBUTES",
                "WINRM_SESSION_CONFIG",
                "PROMETHEUS",
                "INFRASTRUCTURE_MAPPING",
                "HTTP_HELM_REPO",
                "AMAZON_S3_HELM_REPO",
                "GCS_HELM_REPO",
                "SPOT_INST",
                "AZURE_ARTIFACTS_PAT",
                "CUSTOM",
                "CE_AWS",
                "CE_GCP",
                "CE_AZURE",
                "AZURE_VAULT",
                "KUBERNETES_CLUSTER_NG",
                "GIT_NG",
                "GCP_SECRETS_MANAGER",
                "TRIGGER"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "gitSshConfigOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "withArtifactStreamCount",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "artifactStreamSearchString",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxArtifactStreams",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 2147483647,
            "format": "int32"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseSettingAttribute"
            }
          }
        }
      },
      "post": {
        "tags": ["settings"],
        "operationId": "save_18",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SettingAttribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSettingAttribute"
            }
          }
        }
      },
      "delete": {
        "tags": ["settings"],
        "operationId": "retainSelectedGitConnectorsAndDeleteRest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/settings/artifact-streams": {
      "get": {
        "tags": ["settings"],
        "operationId": "listArtifactStreams_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "currentAppId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "currentEnvId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withArtifactCount",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "artifactSearchString",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxArtifacts",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 2147483647,
            "format": "int32"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseArtifactStream"
            }
          }
        }
      },
      "post": {
        "tags": ["settings"],
        "operationId": "save_17",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ArtifactStream"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStream"
            }
          }
        }
      }
    },
    "/settings/validate": {
      "post": {
        "tags": ["settings"],
        "operationId": "validate_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SettingAttribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseValidationResult"
            }
          }
        }
      }
    },
    "/settings/validate-connectivity": {
      "post": {
        "tags": ["settings"],
        "operationId": "validateConnectivity",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SettingAttribute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseValidationResult"
            }
          }
        }
      }
    },
    "/settings/build-sources/jobs/{jobName}/paths": {
      "get": {
        "tags": ["settings"],
        "operationId": "getArtifactPaths_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "streamType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repositoryFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/settings/build-sources/smb-paths": {
      "get": {
        "tags": ["settings"],
        "operationId": "getSmbPaths_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/settings/build-sources/jobs/{jobName}/groupIds": {
      "get": {
        "tags": ["settings"],
        "operationId": "getGroupIds_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repositoryFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/settings/build-sources": {
      "post": {
        "tags": ["settings"],
        "operationId": "collectArtifact_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "artifactStreamId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BuildDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifact"
            }
          }
        }
      }
    },
    "/settings/subscriptions": {
      "get": {
        "tags": ["settings"],
        "operationId": "listSubscriptions_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/settings/build-sources/project": {
      "get": {
        "tags": ["settings"],
        "operationId": "getProject_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/settings/build-sources/buckets": {
      "get": {
        "tags": ["settings"],
        "operationId": "getBuckets_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/settings/aws-regions": {
      "get": {
        "tags": ["settings"],
        "operationId": "listAwsRegions_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNameValuePair"
            }
          }
        }
      }
    },
    "/settings/artifact-streams/artifacts": {
      "get": {
        "tags": ["settings"],
        "operationId": "listArtifacts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseArtifact"
            }
          }
        }
      }
    },
    "/settings/subscriptions/{subscriptionId}/containerRegistries": {
      "get": {
        "tags": ["settings"],
        "operationId": "listContainerRegistries_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/settings/subscriptions/{subscriptionId}/containerRegistries/{registryName}/repositories": {
      "get": {
        "tags": ["settings"],
        "operationId": "listRepositories_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "registryName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/settings/azure-regions": {
      "get": {
        "tags": ["settings"],
        "operationId": "listAzureRegions_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNameValuePair"
            }
          }
        }
      }
    },
    "/settings/upload": {
      "post": {
        "tags": ["settings"],
        "operationId": "saveUpload",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "usageRestrictions",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSettingAttribute"
            }
          }
        }
      }
    },
    "/settings/validate-gcp-connectivity": {
      "post": {
        "tags": ["settings"],
        "operationId": "validateGcpConnectivity",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "attrId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseValidationResult"
            }
          }
        }
      }
    },
    "/settings/build-sources/plans": {
      "get": {
        "tags": ["settings"],
        "operationId": "getBuildPlans_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "streamType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repositoryType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repositoryFormat",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/settings/build-sources/artifact-paths": {
      "get": {
        "tags": ["settings"],
        "operationId": "getSftpPaths_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "streamType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/settings/build-sources/nexus/repositories/{repositoryName}/packageNames": {
      "get": {
        "tags": ["settings"],
        "operationId": "fetchPackageNames_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "repositoryName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repositoryFormat",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/signup/azure-marketplace/complete": {
      "put": {
        "tags": ["signup"],
        "operationId": "completeAzureSignup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/signup/{source}": {
      "post": {
        "tags": ["signup"],
        "operationId": "signup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserInvite"
            }
          },
          {
            "name": "source",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/signup/complete/{token}": {
      "post": {
        "tags": ["signup"],
        "operationId": "completeSignup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/signup/check-validity/azure-marketplace": {
      "get": {
        "tags": ["signup"],
        "operationId": "validateToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/slack/approval": {
      "post": {
        "tags": ["slack"],
        "operationId": "handleSlackApproval",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/ng/smtp-config": {
      "get": {
        "tags": ["ngsmtp-config"],
        "operationId": "getSmtpConfig",
        "consumes": ["application/x-kryo"],
        "produces": ["application/x-kryo"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSmtpConfigResponse"
            }
          }
        }
      }
    },
    "/splunkv2/node-data": {
      "post": {
        "tags": ["splunkv2"],
        "operationId": "getLogRecords_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SplunkSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/stackdriver/node-data": {
      "post": {
        "tags": ["stackdriver"],
        "operationId": "getDataForNode",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StackDriverSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/stackdriver/get-regions": {
      "get": {
        "tags": ["stackdriver"],
        "operationId": "getRegions_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/stackdriver/get-metric-names": {
      "get": {
        "tags": ["stackdriver"],
        "operationId": "getMetricNames_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListStackDriverMetric"
            }
          }
        }
      }
    },
    "/stackdriver/get-load-balancers": {
      "get": {
        "tags": ["stackdriver"],
        "operationId": "getLoadBalancers_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "settingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/stackdriver/get-sample-record": {
      "post": {
        "tags": ["stackdriver"],
        "operationId": "getSampleLogRecord_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StackDriverSetupTestNodeData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseObject"
            }
          }
        }
      }
    },
    "/statistics/deployment-stats": {
      "get": {
        "tags": ["statistics"],
        "operationId": "deploymentStats",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numOfDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 30,
            "format": "int32"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDeploymentStatistics"
            }
          }
        }
      }
    },
    "/statistics/service-instance-stats": {
      "get": {
        "tags": ["statistics"],
        "operationId": "instanceStats",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "numOfDays",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 30,
            "format": "int32"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceInstanceStatistics"
            }
          }
        }
      }
    },
    "/sumo/node-data": {
      "post": {
        "tags": ["sumo"],
        "operationId": "getLogRecords_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SumoLogicSetupTestNodedata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVerificationNodeDataSetupResponse"
            }
          }
        }
      }
    },
    "/sumo/get-sample-record": {
      "get": {
        "tags": ["sumo"],
        "operationId": "getSampleLogRecord_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "durationInMinutes",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseObject"
            }
          }
        }
      }
    },
    "/timeseries/key-transactions": {
      "get": {
        "tags": ["timeseries"],
        "operationId": "getKeyTransactions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTimeSeriesKeyTransactions"
            }
          }
        }
      },
      "post": {
        "tags": ["timeseries"],
        "operationId": "saveKeyTransactions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/timeseries/fetch": {
      "post": {
        "tags": ["timeseries"],
        "operationId": "fetch",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serverConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/APMFetchConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/timeseries/metric-analysis": {
      "get": {
        "tags": ["timeseries"],
        "operationId": "getMetricsAnalysis",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDeploymentTimeSeriesAnalysis"
            }
          }
        }
      }
    },
    "/timeseries/threshold": {
      "get": {
        "tags": ["timeseries"],
        "operationId": "getCustomThreshold",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transactionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customThresholdRefId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTimeSeriesMLTransactionThresholds"
            }
          }
        }
      },
      "post": {
        "tags": ["timeseries"],
        "operationId": "saveCustomThreshold",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transactionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customThresholdRefId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TimeSeriesMetricDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      },
      "delete": {
        "tags": ["timeseries"],
        "operationId": "deleteCustomThreshold",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SUB_WORKFLOW",
              "REPEAT",
              "FORK",
              "WAIT",
              "PAUSE",
              "BARRIER",
              "RESOURCE_CONSTRAINT",
              "SHELL_SCRIPT",
              "HTTP",
              "TEMPLATIZED_SECRET_MANAGER",
              "EMAIL",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "NEW_RELIC_DEPLOYMENT_MARKER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "SPLUNKV2",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "DATA_DOG_LOG",
              "CVNG",
              "CLOUD_WATCH",
              "AWS_LAMBDA_VERIFICATION",
              "APM_VERIFICATION",
              "LOG_VERIFICATION",
              "BUG_SNAG",
              "STACK_DRIVER",
              "STACK_DRIVER_LOG",
              "INSTANA",
              "SCALYR",
              "ENV_STATE",
              "ENV_LOOP_STATE",
              "ENV_RESUME_STATE",
              "ENV_LOOP_RESUME_STATE",
              "COMMAND",
              "APPROVAL",
              "APPROVAL_RESUME",
              "ELASTIC_LOAD_BALANCER",
              "JENKINS",
              "GCB",
              "BAMBOO",
              "ARTIFACT_COLLECTION",
              "ARTIFACT_CHECK",
              "AZURE_NODE_SELECT",
              "AZURE_VMSS_SETUP",
              "AZURE_VMSS_DEPLOY",
              "AZURE_VMSS_ROLLBACK",
              "AZURE_VMSS_SWITCH_ROUTES",
              "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
              "AZURE_WEBAPP_SLOT_SETUP",
              "AZURE_WEBAPP_SLOT_SWAP",
              "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
              "AZURE_WEBAPP_SLOT_ROLLBACK",
              "AWS_NODE_SELECT",
              "DC_NODE_SELECT",
              "ROLLING_NODE_SELECT",
              "PHASE",
              "PHASE_STEP",
              "STAGING_ORIGINAL_EXECUTION",
              "AWS_CODEDEPLOY_STATE",
              "AWS_CODEDEPLOY_ROLLBACK",
              "AWS_LAMBDA_STATE",
              "AWS_LAMBDA_ROLLBACK",
              "AWS_AMI_SERVICE_SETUP",
              "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
              "AWS_AMI_SERVICE_DEPLOY",
              "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
              "AWS_AMI_SWITCH_ROUTES",
              "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
              "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
              "AWS_AMI_SERVICE_ROLLBACK",
              "ECS_SERVICE_SETUP",
              "SPOTINST_SETUP",
              "SPOTINST_ALB_SHIFT_SETUP",
              "SPOTINST_DEPLOY",
              "SPOTINST_ALB_SHIFT_DEPLOY",
              "SPOTINST_LISTENER_UPDATE",
              "SPOTINST_LISTENER_ALB_SHIFT",
              "SPOTINST_ROLLBACK",
              "SPOTINST_LISTENER_UPDATE_ROLLBACK",
              "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
              "ECS_SERVICE_SETUP_ROLLBACK",
              "ECS_DAEMON_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP",
              "ECS_BG_SERVICE_SETUP_ROUTE53",
              "ECS_SERVICE_DEPLOY",
              "ECS_SERVICE_ROLLBACK",
              "ECS_LISTENER_UPDATE",
              "ECS_LISTENER_UPDATE_ROLLBACK",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
              "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
              "KUBERNETES_SETUP",
              "KUBERNETES_SETUP_ROLLBACK",
              "KUBERNETES_DEPLOY",
              "KUBERNETES_DEPLOY_ROLLBACK",
              "KUBERNETES_STEADY_STATE_CHECK",
              "ECS_STEADY_STATE_CHECK",
              "ECS_RUN_TASK",
              "GCP_CLUSTER_SETUP",
              "HELM_DEPLOY",
              "HELM_ROLLBACK",
              "PCF_SETUP",
              "PCF_RESIZE",
              "PCF_ROLLBACK",
              "PCF_MAP_ROUTE",
              "PCF_UNMAP_ROUTE",
              "PCF_BG_MAP_ROUTE",
              "PCF_PLUGIN",
              "TERRAFORM_PROVISION",
              "TERRAFORM_APPLY",
              "TERRAGRUNT_PROVISION",
              "TERRAGRUNT_DESTROY",
              "TERRAGRUNT_ROLLBACK",
              "ARM_CREATE_RESOURCE",
              "ARM_ROLLBACK",
              "SHELL_SCRIPT_PROVISION",
              "TERRAFORM_DESTROY",
              "CLOUD_FORMATION_CREATE_STACK",
              "CLOUD_FORMATION_DELETE_STACK",
              "KUBERNETES_SWAP_SERVICE_SELECTORS",
              "CLOUD_FORMATION_ROLLBACK_STACK",
              "TERRAFORM_ROLLBACK",
              "K8S_DEPLOYMENT_ROLLING",
              "K8S_SCALE",
              "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
              "K8S_BLUE_GREEN_DEPLOY",
              "K8S_CANARY_DEPLOY",
              "K8S_DELETE",
              "JIRA_CREATE_UPDATE",
              "SERVICENOW_CREATE_UPDATE",
              "K8S_TRAFFIC_SPLIT",
              "K8S_APPLY",
              "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
            ]
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "transactionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "comparisonType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["RATIO", "DELTA", "ABSOLUTE"]
          },
          {
            "name": "customThresholdRefId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/timeseries/threshold-by-id": {
      "delete": {
        "tags": ["timeseries"],
        "operationId": "deleteCustomThreshold_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "thresholdIdList",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/timeseries/generate-metrics-appdynamics": {
      "get": {
        "tags": ["timeseries"],
        "operationId": "getMetricsAnalysisAppdynamics",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetNewRelicMetricAnalysisRecord"
            }
          }
        }
      }
    },
    "/timeseries/get-tooltip": {
      "get": {
        "tags": ["timeseries"],
        "operationId": "getTooltip",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisMinute",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "transactionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNewRelicMetricHostAnalysisValue"
            }
          }
        }
      }
    },
    "/timeseries/custom-threshold-list": {
      "post": {
        "tags": ["timeseries"],
        "operationId": "saveCustomThresholdList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeSeriesMLTransactionThresholds"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/timeseries/thresholds-for-cvconfig": {
      "get": {
        "tags": ["timeseries"],
        "operationId": "getCustomThresholdForCVConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesMLTransactionThresholds"
            }
          }
        }
      }
    },
    "/timeseries/thresholds-for-workflow": {
      "get": {
        "tags": ["timeseries"],
        "operationId": "getCustomThresholdForWorkflow",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesMLTransactionThresholds"
            }
          }
        }
      }
    },
    "/timeseries/thresholds": {
      "get": {
        "tags": ["timeseries"],
        "operationId": "getCustomThresholdWithRefId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customThresholdRefId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesMLTransactionThresholds"
            }
          }
        }
      }
    },
    "/timeseries/bulk-threshold": {
      "delete": {
        "tags": ["timeseries"],
        "operationId": "bulkDeleteCustomThresholds",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customThresholdRefId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/timeseries/txn-metric-for-cvconfig": {
      "get": {
        "tags": ["timeseries"],
        "operationId": "getTxnMetricPairsForAPMCVConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/timeseries/add-to-key-transactions": {
      "post": {
        "tags": ["timeseries"],
        "operationId": "addToKeyTransactions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/timeseries/remove-from-key-transactions": {
      "post": {
        "tags": ["timeseries"],
        "operationId": "removeFromKeyTransactions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/triggers/{triggerId}": {
      "get": {
        "tags": ["triggers"],
        "operationId": "get_38",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "triggerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTrigger"
            }
          }
        }
      },
      "put": {
        "tags": ["triggers"],
        "operationId": "update_31",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "triggerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTrigger"
            }
          }
        }
      },
      "delete": {
        "tags": ["triggers"],
        "operationId": "delete_28",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "triggerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/triggers": {
      "get": {
        "tags": ["triggers"],
        "operationId": "list_40",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withTags",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseTrigger"
            }
          }
        }
      },
      "post": {
        "tags": ["triggers"],
        "operationId": "save_19",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Trigger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTrigger"
            }
          }
        }
      }
    },
    "/triggers/{triggerId}/webhook_token": {
      "get": {
        "tags": ["triggers"],
        "operationId": "generateWebhookToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "triggerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWebHookToken"
            }
          }
        }
      }
    },
    "/triggers/{triggerId}/webhook_token/git": {
      "get": {
        "tags": ["triggers"],
        "operationId": "generateGitWebhookToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "triggerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWebHookToken"
            }
          }
        }
      }
    },
    "/triggers/cron/translate": {
      "post": {
        "tags": ["triggers"],
        "operationId": "translateCron",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/triggers/webhook/parameters": {
      "get": {
        "tags": ["triggers"],
        "operationId": "listWebhookParameters",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PIPELINE", "ORCHESTRATION"]
          },
          {
            "name": "webhookSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["GITHUB", "GITLAB", "BITBUCKET", "AZURE_DEVOPS"]
          },
          {
            "name": "eventType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWebhookParameters"
            }
          }
        }
      }
    },
    "/triggers/webhook/eventTypes": {
      "get": {
        "tags": ["triggers"],
        "operationId": "listWebhookEventTypes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWebhookEventType"
            }
          }
        }
      }
    },
    "/usageRestrictions/editable/{entityId}": {
      "get": {
        "tags": ["usageRestrictions"],
        "operationId": "isEditable",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/usageRestrictions/defaultRestrictions": {
      "get": {
        "tags": ["usageRestrictions"],
        "operationId": "getDefaultRestrictions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUsageRestrictions"
            }
          }
        }
      }
    },
    "/usageRestrictions/apps": {
      "get": {
        "tags": ["usageRestrictions"],
        "operationId": "listAppsWithEnvUpdatePermissions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseRestrictionsSummary"
            }
          }
        }
      }
    },
    "/usageRestrictions/appReferences/{appId}": {
      "get": {
        "tags": ["usageRestrictions"],
        "operationId": "getReferenceSummaryForApp",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUsageRestrictionsReferenceSummary"
            }
          }
        }
      }
    },
    "/usageRestrictions/envReferences/{envId}": {
      "get": {
        "tags": ["usageRestrictions"],
        "operationId": "getReferenceSummaryForEnv",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUsageRestrictionsReferenceSummary"
            }
          }
        }
      }
    },
    "/userGroups/{userGroupId}/members": {
      "put": {
        "tags": ["userGroups"],
        "operationId": "updateMembers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      }
    },
    "/userGroups/{userGroupId}": {
      "get": {
        "tags": ["userGroups"],
        "operationId": "get_39",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      },
      "delete": {
        "tags": ["userGroups"],
        "operationId": "delete_30",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/userGroups/{userGroupId}/clone": {
      "post": {
        "tags": ["userGroups"],
        "operationId": "clone_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "newName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "newDescription",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      }
    },
    "/userGroups": {
      "get": {
        "tags": ["userGroups"],
        "operationId": "list_41",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseUserGroup"
            }
          }
        }
      },
      "post": {
        "tags": ["userGroups"],
        "operationId": "save_20",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      },
      "delete": {
        "tags": ["userGroups"],
        "operationId": "delete_29",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/userGroups/{userGroupId}/overview": {
      "put": {
        "tags": ["userGroups"],
        "operationId": "updateOverview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      }
    },
    "/userGroups/{userGroupId}/notification-settings": {
      "put": {
        "tags": ["userGroups"],
        "operationId": "updateNotificationSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NotificationSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      }
    },
    "/userGroups/{userGroupId}/permissions": {
      "put": {
        "tags": ["userGroups"],
        "operationId": "updatePermissions",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      }
    },
    "/userGroups/non-admin": {
      "delete": {
        "tags": ["userGroups"],
        "operationId": "deleteNonAdminUserGroups",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/userGroups/approvals": {
      "get": {
        "tags": ["userGroups"],
        "operationId": "listForApprovals",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseUserGroup"
            }
          }
        }
      }
    },
    "/userGroups/{userGroupId}/link/ldap/{ldapId}": {
      "put": {
        "tags": ["userGroups"],
        "operationId": "linkToLdapGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ldapId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LdapLinkGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      }
    },
    "/userGroups/{userGroupId}/unlink": {
      "put": {
        "tags": ["userGroups"],
        "operationId": "unlinkSsoGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "retainMembers",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      }
    },
    "/userGroups/{userGroupId}/link/saml/{samlId}": {
      "put": {
        "tags": ["userGroups"],
        "operationId": "linkToSamlGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "samlId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SamlLinkGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserGroup"
            }
          }
        }
      }
    },
    "/users/account-name/{accountName}": {
      "get": {
        "tags": ["users"],
        "operationId": "suggestAccountName",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/users/feature-flags/{accountId}": {
      "get": {
        "tags": ["users"],
        "operationId": "getFeatureFlags",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCollectionFeatureFlag"
            }
          }
        }
      }
    },
    "/users/custom-event": {
      "post": {
        "tags": ["users"],
        "operationId": "postCustomEvent_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/two-factor-auth-info/{accountId}": {
      "get": {
        "tags": ["users"],
        "operationId": "getTwoFactorAuthAdminEnforceInfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/two-factor-auth/{auth-mechanism}": {
      "get": {
        "tags": ["users"],
        "operationId": "getTwoFactorAuthSettings",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "auth-mechanism",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": ["TOTP"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTwoFactorAuthenticationSettings"
            }
          }
        }
      }
    },
    "/users/enable-two-factor-auth": {
      "put": {
        "tags": ["users"],
        "operationId": "enableTwoFactorAuth",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TwoFactorAuthenticationSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/disable-two-factor-auth/{accountId}": {
      "put": {
        "tags": ["users"],
        "operationId": "disableTwoFactorAuth",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/disable-two-factor-auth": {
      "put": {
        "tags": ["users"],
        "operationId": "disableTwoFactorAuth_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/verify/{token}": {
      "get": {
        "tags": ["users"],
        "operationId": "verifyToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringObject"
            }
          }
        }
      }
    },
    "/users/override-two-factor-auth/{accountId}": {
      "put": {
        "tags": ["users"],
        "operationId": "setTwoFactorAuthAtAccountLevel",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TwoFactorAdminOverrideSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTwoFactorAdminOverrideSettings"
            }
          }
        }
      }
    },
    "/users/unlock-user": {
      "put": {
        "tags": ["users"],
        "operationId": "unlockUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/user": {
      "get": {
        "tags": ["users"],
        "operationId": "get_40",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["users"],
        "operationId": "list_42",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponsePublicUser"
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "operationId": "register_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "operationId": "delete_32",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "delete": {
        "tags": ["users"],
        "operationId": "delete_31",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/users/new-trial": {
      "post": {
        "tags": ["users"],
        "operationId": "trialSignup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserInvite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/join-account": {
      "post": {
        "tags": ["users"],
        "operationId": "accountJoinRequest",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountJoinRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/account": {
      "post": {
        "tags": ["users"],
        "operationId": "addAccount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          {
            "name": "addUser",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccount"
            }
          }
        }
      }
    },
    "/users/user/{userId}": {
      "put": {
        "tags": ["users"],
        "operationId": "updateUserGroupsOfUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/profile/{userId}": {
      "put": {
        "tags": ["users"],
        "operationId": "updateUserProfile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": ["users"],
        "operationId": "resetPassword",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/users/user/login": {
      "get": {
        "tags": ["users"],
        "operationId": "loginUser_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/reset-cache": {
      "put": {
        "tags": ["users"],
        "operationId": "resetCache",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/users/user-permissions/{accountId}": {
      "get": {
        "tags": ["users"],
        "operationId": "getUserPermissionInfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserPermissionInfo"
            }
          }
        }
      }
    },
    "/users/refresh-token": {
      "get": {
        "tags": ["users"],
        "operationId": "refreshToken",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/users/{userId}/logout": {
      "post": {
        "tags": ["users"],
        "operationId": "logout_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["users"],
        "operationId": "login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "captcha",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/resend-invitation-email": {
      "post": {
        "tags": ["users"],
        "operationId": "resendInvitationEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ResendInvitationEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/users/reset-password/{token}": {
      "post": {
        "tags": ["users"],
        "operationId": "updatePassword",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdatePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/users/check-password-violations": {
      "get": {
        "tags": ["users"],
        "operationId": "checkPasswordViolations",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pollType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["SIGN_UP_FLOW", "PASSWORD_RESET_FLOW"]
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/users/account-roles/{accountId}": {
      "get": {
        "tags": ["users"],
        "operationId": "getAccountRole",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseAccountRole"
            }
          }
        }
      }
    },
    "/users/application-roles/{appId}": {
      "get": {
        "tags": ["users"],
        "operationId": "getApplicationRole",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplicationRole"
            }
          }
        }
      }
    },
    "/users/switch-account": {
      "get": {
        "tags": ["users"],
        "operationId": "switchAccount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "operationId": "newSwitchAccount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SwitchAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/restricted-switch-account": {
      "post": {
        "tags": ["users"],
        "operationId": "restrictedSwitchAccount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "routingId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SwitchAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSwitchAccountResponse"
            }
          }
        }
      }
    },
    "/users/set-default-account/{accountId}": {
      "put": {
        "tags": ["users"],
        "operationId": "setDefaultAccountForCurrentUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/harness-local-login": {
      "post": {
        "tags": ["users"],
        "operationId": "forceLoginUsingHarnessPassword",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/two-factor-login": {
      "post": {
        "tags": ["users"],
        "operationId": "twoFactorLogin",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/logintype": {
      "post": {
        "tags": ["users"],
        "operationId": "getLoginType",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LoginTypeRequest"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLoginTypeResponse"
            }
          }
        }
      }
    },
    "/users/onprem-logintype": {
      "get": {
        "tags": ["users"],
        "operationId": "getLoginTypeForOnPremSetup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseLoginTypeResponse"
            }
          }
        }
      }
    },
    "/users/oauth2Redirect": {
      "get": {
        "tags": ["users"],
        "operationId": "oauth2Redirect",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/oauth2/{provider}": {
      "get": {
        "tags": ["users"],
        "operationId": "oauth2CallbackUrl",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/sso-redirect-login": {
      "post": {
        "tags": ["users"],
        "operationId": "redirectlogin",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SsoRedirectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/invitation-id": {
      "get": {
        "tags": ["users"],
        "operationId": "getUserInvitationId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/users/disable/{userId}": {
      "put": {
        "tags": ["users"],
        "operationId": "disableUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/enable/{userId}": {
      "put": {
        "tags": ["users"],
        "operationId": "enableUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/saml-login": {
      "post": {
        "tags": ["users"],
        "operationId": "samlLogin",
        "consumes": ["application/x-www-form-urlencoded"],
        "produces": ["text/html"],
        "parameters": [
          {
            "name": "SAMLResponse",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "RelayState",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/verify-email": {
      "get": {
        "tags": ["users"],
        "operationId": "verifyEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/resend-verification-email/{email}": {
      "get": {
        "tags": ["users"],
        "operationId": "resendVerificationEmail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/{userId}/role/{roleId}": {
      "put": {
        "tags": ["users"],
        "operationId": "assignRole",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "operationId": "revokeRole",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/invites": {
      "get": {
        "tags": ["users"],
        "operationId": "listInvites",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseUserInvite"
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "operationId": "inviteUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserInvite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListInviteOperationResponse"
            }
          }
        }
      }
    },
    "/users/trigger-account-password-expiration-job": {
      "post": {
        "tags": ["users"],
        "operationId": "triggerAccountPasswordExpirationCheckJob",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/users/invites/{inviteId}": {
      "get": {
        "tags": ["users"],
        "operationId": "getInvite",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserInvite"
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "operationId": "completeInvite",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserInvite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInviteOperationResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "operationId": "deleteInvite",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUserInvite"
            }
          }
        }
      }
    },
    "/users/invites/{inviteId}/status": {
      "get": {
        "tags": ["users"],
        "operationId": "checkInvite",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CG", "NG"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInviteOperationResponse"
            }
          }
        }
      }
    },
    "/users/invites/mktplace/{inviteId}/signin": {
      "put": {
        "tags": ["users"],
        "operationId": "completeMarketPlaceInvite",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "company",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketPlaceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["AWS", "GCP", "AZURE"]
          },
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserInvite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/invites/ngsignin": {
      "put": {
        "tags": ["users"],
        "operationId": "completeInviteAndSignIn",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CG", "NG"]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserInviteDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/invites/{inviteId}/signin": {
      "put": {
        "tags": ["users"],
        "operationId": "completeInviteAndSignIn_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["CG", "NG"]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserInvite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/invites/verify": {
      "get": {
        "tags": ["users"],
        "operationId": "acceptInviteAndRedirect",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/invites/trial/{inviteId}/new-signin": {
      "put": {
        "tags": ["users"],
        "operationId": "completeTrialSignupAndSignIn",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUser"
            }
          }
        }
      }
    },
    "/users/sso/zendesk": {
      "post": {
        "tags": ["users"],
        "operationId": "zendDesk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "returnTo",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseZendeskSsoLoginResponse"
            }
          }
        }
      }
    },
    "/users/reset-two-factor-auth/{userId}": {
      "get": {
        "tags": ["users"],
        "operationId": "reset2fa",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/users/lead-update": {
      "put": {
        "tags": ["users"],
        "operationId": "updateMarketoForUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": ["version"],
        "operationId": "get_41",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVersionPackage"
            }
          }
        }
      }
    },
    "/versions": {
      "get": {
        "tags": ["versions"],
        "operationId": "list_43",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseEntityVersionCollection"
            }
          }
        }
      }
    },
    "/webhooks/{webHookToken}": {
      "get": {
        "tags": ["webhooks"],
        "operationId": "ping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "webHookToken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WebHookRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": ["webhooks"],
        "operationId": "execute_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "webHookToken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WebHookRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/webhooks/{webHookToken}/git": {
      "post": {
        "tags": ["webhooks"],
        "operationId": "executeGit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "webHookToken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/webhooks/triggers/{webHookToken}": {
      "post": {
        "tags": ["webhooks"],
        "operationId": "execute",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "webHookToken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/whitelist/isEnabled": {
      "get": {
        "tags": ["whitelist"],
        "operationId": "isEnabled",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/whitelist/ip-address-whitelisted": {
      "get": {
        "tags": ["whitelist"],
        "operationId": "isIpAddressWhitelisted",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ipAddress",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/whitelist/{whitelistId}": {
      "get": {
        "tags": ["whitelist"],
        "operationId": "get_42",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "whitelistId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWhitelist"
            }
          }
        }
      },
      "put": {
        "tags": ["whitelist"],
        "operationId": "update_32",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "whitelistId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Whitelist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWhitelist"
            }
          }
        }
      },
      "delete": {
        "tags": ["whitelist"],
        "operationId": "delete_33",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "whitelistId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/whitelist": {
      "get": {
        "tags": ["whitelist"],
        "operationId": "list_44",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseWhitelist"
            }
          }
        }
      },
      "post": {
        "tags": ["whitelist"],
        "operationId": "save_21",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Whitelist"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWhitelist"
            }
          }
        }
      },
      "delete": {
        "tags": ["whitelist"],
        "operationId": "deleteAll_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/phases/clone": {
      "post": {
        "tags": ["workflows"],
        "operationId": "clone_4",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkflowPhase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowPhase"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}": {
      "get": {
        "tags": ["workflows"],
        "operationId": "read_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "withArtifactStreamSummary",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflow"
            }
          }
        }
      },
      "put": {
        "tags": ["workflows"],
        "operationId": "update_33",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkflowVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflow"
            }
          }
        }
      },
      "delete": {
        "tags": ["workflows"],
        "operationId": "delete_34",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/phases/{phaseId}": {
      "put": {
        "tags": ["workflows"],
        "operationId": "update_34",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phaseId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkflowPhase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowPhase"
            }
          }
        }
      },
      "delete": {
        "tags": ["workflows"],
        "operationId": "deletePhase",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phaseId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowPhase"
            }
          }
        }
      }
    },
    "/workflows": {
      "get": {
        "tags": ["workflows"],
        "operationId": "list_45",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "previousExecutionsCount",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "workflowType",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "withArtifactStreamSummary",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "tagFilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withTags",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseWorkflow"
            }
          }
        }
      },
      "post": {
        "tags": ["workflows"],
        "operationId": "create_6",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflow"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/phases": {
      "post": {
        "tags": ["workflows"],
        "operationId": "create_7",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkflowPhase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowPhase"
            }
          }
        }
      }
    },
    "/workflows/steps/phase/{phaseId}/sections/{sectionId}/{position}": {
      "get": {
        "tags": ["workflows"],
        "operationId": "getSteps",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phaseId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "position",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "rollbackSection",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowCategorySteps"
            }
          }
        }
      }
    },
    "/workflows/hpa-metric-yaml": {
      "get": {
        "tags": ["workflows"],
        "operationId": "getHPAYamlStringWithCustomMetric",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "minAutoscaleInstances",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxAutoscaleInstances",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "targetCpuUtilizationPercentage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/traffic-shift-metadata": {
      "get": {
        "tags": ["workflows"],
        "operationId": "readTrafficShiftMetadata",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTrafficShiftMetadata"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/phases/{phaseId}/rollback": {
      "put": {
        "tags": ["workflows"],
        "operationId": "updateRollback",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "phaseId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkflowPhase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowPhase"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/nodes/{nodeId}": {
      "get": {
        "tags": ["workflows"],
        "operationId": "readGraphNode",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseGraphNode"
            }
          }
        }
      },
      "put": {
        "tags": ["workflows"],
        "operationId": "updateGraphNode",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subworkflowId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "nodeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GraphNode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseGraphNode"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/notification-rules": {
      "put": {
        "tags": ["workflows"],
        "operationId": "updateNotificationRules",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationRule"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListNotificationRule"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/failure-strategies": {
      "put": {
        "tags": ["workflows"],
        "operationId": "updateFailureStrategies_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategy"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListFailureStrategy"
            }
          }
        }
      }
    },
    "/workflows/stencils": {
      "get": {
        "tags": ["workflows"],
        "operationId": "stencils_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phaseId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListStencil"
            }
          }
        }
      }
    },
    "/workflows/state-defaults": {
      "get": {
        "tags": ["workflows"],
        "operationId": "stateDefaults",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringString"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/infra-types": {
      "get": {
        "tags": ["workflows"],
        "operationId": "workflowHasSSHInfraMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/deployed-nodes": {
      "get": {
        "tags": ["workflows"],
        "operationId": "getDeployedNodes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListInstanceElement"
            }
          }
        }
      }
    },
    "/workflows/required-entities": {
      "get": {
        "tags": ["workflows"],
        "operationId": "requiredEntities_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListEntityType"
            }
          }
        }
      }
    },
    "/workflows/last-successful-workflow-ids": {
      "get": {
        "tags": ["workflows"],
        "operationId": "getLastSuccessfulWorkflowExecutionIds",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/workflows/workflow-execution-for-state-execution": {
      "get": {
        "tags": ["workflows"],
        "operationId": "getWorkflowExecutionForStateExecution",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflowExecution"
            }
          }
        }
      }
    },
    "/workflows/state-valid": {
      "get": {
        "tags": ["workflows"],
        "operationId": "isStateValid",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stateExecutionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/basic": {
      "put": {
        "tags": ["workflows"],
        "operationId": "updatePreDeployment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflow"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/pre-deploy": {
      "put": {
        "tags": ["workflows"],
        "operationId": "updatePreDeployment_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PhaseStep"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePhaseStep"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/clone": {
      "post": {
        "tags": ["workflows"],
        "operationId": "cloneWorkflow",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CloneMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflow"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/post-deploy": {
      "put": {
        "tags": ["workflows"],
        "operationId": "updatePostDeployment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PhaseStep"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePhaseStep"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/concurrency-strategy": {
      "put": {
        "tags": ["workflows"],
        "operationId": "concurrencyStrategy",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ConcurrencyStrategy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseConcurrencyStrategy"
            }
          }
        }
      }
    },
    "/workflows/{workflowId}/user-variables": {
      "put": {
        "tags": ["workflows"],
        "operationId": "updateUserVariables",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListVariable"
            }
          }
        }
      }
    },
    "/alerts": {
      "get": {
        "tags": ["alerts"],
        "operationId": "list_46",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseAlert"
            }
          }
        }
      }
    },
    "/alerts/types": {
      "get": {
        "tags": ["alerts"],
        "operationId": "listCategoriesAndTypes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListAlertType"
            }
          }
        }
      }
    },
    "/alerts/open-cv-alert": {
      "post": {
        "tags": ["alerts"],
        "operationId": "openCVAlert",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContinuousVerificationAlertData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/alerts/open-cv-alert-with-ttl": {
      "post": {
        "tags": ["alerts"],
        "operationId": "openCVAlert_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "validUntil",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContinuousVerificationAlertData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/alerts/close-cv-alert": {
      "post": {
        "tags": ["alerts"],
        "operationId": "closeCVAlert",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cvConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ContinuousVerificationAlertData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/ccm/perpetual-task/delete": {
      "get": {
        "tags": ["ccmperpetual-task"],
        "summary": "delete",
        "description": "",
        "operationId": "delete perpetual task",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          }
        }
      }
    },
    "/ccm/perpetual-task/create": {
      "post": {
        "tags": ["ccmperpetual-task"],
        "summary": "create",
        "description": "",
        "operationId": "create perpetual task",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/K8sEventCollectionBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/ccm/perpetual-task/reset": {
      "post": {
        "tags": ["ccmperpetual-task"],
        "summary": "reset",
        "description": "",
        "operationId": "reset perpetual task",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/K8sEventCollectionBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          }
        }
      }
    },
    "/ccm/perpetual-task/status": {
      "get": {
        "tags": ["ccmperpetual-task"],
        "summary": "status",
        "description": "",
        "operationId": "status of a perpetual task",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePerpetualTaskRecord"
            }
          }
        }
      }
    },
    "/command-library/configuration": {
      "get": {
        "tags": ["command-library"],
        "operationId": "getCommandStores",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCommandLibraryConfigurationDTO"
            }
          }
        }
      }
    },
    "/command-library/command-stores/{commandStoreName}/commands": {
      "get": {
        "tags": ["command-library"],
        "operationId": "listImportedCommandVersions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "commandNames",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "commandStoreName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListImportedCommand"
            }
          }
        }
      }
    },
    "/command-library/command-stores/{commandStoreName}/commands/{commandName}": {
      "get": {
        "tags": ["command-library"],
        "operationId": "listLatestVersionsOfTemplates",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commandStoreName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseImportedCommand"
            }
          }
        }
      }
    },
    "/command-library/command-stores/{commandStoreName}/commands/{commandName}/versions/{version}": {
      "post": {
        "tags": ["command-library"],
        "operationId": "importTemplate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commandStoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplate"
            }
          }
        }
      }
    },
    "/command-library-service/command-stores": {
      "get": {
        "tags": ["command-library-service"],
        "operationId": "getCommandStores_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/command-library-service/command-stores/{commandStoreName}/commands/tags": {
      "get": {
        "tags": ["command-library-service"],
        "operationId": "getCommandTags",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commandStoreName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/command-library-service/command-stores/{commandStoreName}/commands": {
      "get": {
        "tags": ["command-library-service"],
        "operationId": "listCommands",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commandStoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": ["command-library-service"],
        "operationId": "publishCommand",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commandStoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "apiKey",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/command-library-service/command-stores/{commandStoreName}/commands/{commandName}": {
      "get": {
        "tags": ["command-library-service"],
        "operationId": "getCommandDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commandStoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/command-library-service/command-stores/{commandStoreName}/commands/{commandName}/versions/{version}": {
      "get": {
        "tags": ["command-library-service"],
        "operationId": "getVersionDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commandStoreName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/customDeploymentType/{accountId}/{templateId}": {
      "get": {
        "tags": ["customDeploymentType"],
        "operationId": "get_43",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCustomDeploymentTypeDTO"
            }
          }
        }
      }
    },
    "/customDeploymentType/{accountId}": {
      "get": {
        "tags": ["customDeploymentType"],
        "operationId": "list_47",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "withDetails",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCustomDeploymentTypeDTO"
            }
          }
        }
      }
    },
    "/cv-nextgen/service/change-events": {
      "get": {
        "tags": ["cv-nextgenservicechange-events"],
        "operationId": "getChangeEvents",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListHarnessCDCurrentGenEventMetadata"
            }
          }
        }
      }
    },
    "/cv-nextgen/service/cv-data-collection-task/create-task": {
      "post": {
        "tags": ["cv-nextgenservicecv-data-collection-task"],
        "operationId": "createTask",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataCollectionConnectorBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/cv-nextgen/service/cv-data-collection-task/get-data-collection-result": {
      "post": {
        "tags": ["cv-nextgenservicecv-data-collection-task"],
        "operationId": "getDataCollectionResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataCollectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/cv-nextgen/service/cv-data-collection-task/reset-task": {
      "post": {
        "tags": ["cv-nextgenservicecv-data-collection-task"],
        "operationId": "resetTask",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataCollectionConnectorBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/cv-nextgen/service/cv-data-collection-task/delete-task": {
      "delete": {
        "tags": ["cv-nextgenservicecv-data-collection-task"],
        "operationId": "deleteTask",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/cv-nextgen/service/cv-data-collection-task/task-status": {
      "get": {
        "tags": ["cv-nextgenservicecv-data-collection-task"],
        "operationId": "getTaskStatus",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCVNGPerpetualTaskDTO"
            }
          }
        }
      }
    },
    "/kubernetes/namespaces": {
      "post": {
        "tags": ["kubernetes"],
        "operationId": "getNamespaces",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataCollectionConnectorBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/kubernetes/workloads": {
      "post": {
        "tags": ["kubernetes"],
        "operationId": "getWorkloads",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataCollectionConnectorBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/kubernetes/events": {
      "post": {
        "tags": ["kubernetes"],
        "operationId": "checkCapabilityToGetEvents",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataCollectionConnectorBundle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/cv-nextgen/splunk/validation": {
      "post": {
        "tags": ["cv-nextgensplunk"],
        "operationId": "getValidationResponse",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "requestGuid",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SplunkConnectorDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSplunkValidationResponse"
            }
          }
        }
      }
    },
    "/cv-nextgen/splunk/saved-searches": {
      "post": {
        "tags": ["cv-nextgensplunk"],
        "operationId": "getSavedSearches",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestGuid",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SplunkConnectorDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListSplunkSavedSearch"
            }
          }
        }
      }
    },
    "/custom-dashboard": {
      "get": {
        "tags": ["custom-dashboard"],
        "operationId": "getDashboardSettings",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseDashboardSettings"
            }
          }
        }
      },
      "post": {
        "tags": ["custom-dashboard"],
        "operationId": "createDashboardSetting",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DashboardSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDashboardSettings"
            }
          }
        }
      },
      "put": {
        "tags": ["custom-dashboard"],
        "operationId": "updateDashboardSettings",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DashboardSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDashboardSettings"
            }
          }
        }
      },
      "delete": {
        "tags": ["custom-dashboard"],
        "operationId": "deleteDashboardSettings",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dashboardId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/custom-dashboard/{dashboardId}": {
      "get": {
        "tags": ["custom-dashboard"],
        "operationId": "getDashboardSetting",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dashboardId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDashboardSettings"
            }
          }
        }
      }
    },
    "/custom-dashboard/deployment-recon-per-account": {
      "put": {
        "tags": ["custom-dashboard"],
        "operationId": "performReconciliationSingleAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "targetAccountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "durationStartTs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "durationEndTs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/custom-dashboard/deployment-recon-all-accounts": {
      "put": {
        "tags": ["custom-dashboard"],
        "operationId": "performReconciliationAllAccounts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "durationStartTs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "durationEndTs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/custom-dashboard/instance-recon-per-account": {
      "put": {
        "tags": ["custom-dashboard"],
        "operationId": "doReconInstanceOnAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "intervalStartTimeMs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "intervalEndTimeMs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/custom-dashboard/instance-data-migration": {
      "put": {
        "tags": ["custom-dashboard"],
        "operationId": "doInstanceDataMigration",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "batchSizeInHours",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/custom-dashboard/deployment-data-migration": {
      "put": {
        "tags": ["custom-dashboard"],
        "operationId": "doDeploymentDataMigration",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "batchSizeInHours",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/custom-dashboard/deployment-migration-per-account": {
      "put": {
        "tags": ["custom-dashboard"],
        "operationId": "doDeploymentMigrationOnAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "intervalStartTimeMs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "intervalEndTimeMs",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/compliance-config/{accountId}": {
      "get": {
        "tags": ["compliance-config"],
        "operationId": "get_44",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseGovernanceConfig"
            }
          }
        }
      },
      "put": {
        "tags": ["compliance-config"],
        "operationId": "update_35",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GovernanceConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseGovernanceConfig"
            }
          }
        }
      }
    },
    "/compliance-config/deploymentfreeze/info/{accountId}": {
      "get": {
        "tags": ["compliance-config"],
        "operationId": "getDeploymentFreezeInfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDeploymentFreezeInfo"
            }
          }
        }
      }
    },
    "/compliance/pipeline/report": {
      "get": {
        "tags": ["pipeline-compliance"],
        "operationId": "report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListPipelineReportCard"
            }
          }
        }
      }
    },
    "/compliance/pipeline": {
      "get": {
        "tags": ["pipeline-compliance"],
        "operationId": "list_48",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListPipelineGovernanceConfig"
            }
          }
        }
      },
      "post": {
        "tags": ["pipeline-compliance"],
        "operationId": "add_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PipelineGovernanceConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePipelineGovernanceConfig"
            }
          }
        }
      }
    },
    "/compliance/pipeline/{uuid}": {
      "delete": {
        "tags": ["pipeline-compliance"],
        "operationId": "update_36",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/graphql": {
      "post": {
        "tags": ["graphql"],
        "operationId": "execute_2",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "X-Api-Key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/graphql/int": {
      "post": {
        "tags": ["graphql"],
        "operationId": "execute_4",
        "consumes": ["text/plain"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/limits/configure/static-limit": {
      "post": {
        "tags": ["limits"],
        "operationId": "configureStaticLimit",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StaticLimit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/limits/configure/rate-limit": {
      "post": {
        "tags": ["limits"],
        "operationId": "configureRateLimit",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RateLimit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/personalization/templates/favorite": {
      "get": {
        "tags": ["personalization"],
        "operationId": "fetchFavoriteTemplates",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetString"
            }
          }
        }
      }
    },
    "/personalization/steps/{stepId}/favorite": {
      "put": {
        "tags": ["personalization"],
        "operationId": "addFavorite",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stepId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["personalization"],
        "operationId": "removeFavorite",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stepId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/personalization/steps/{stepId}/recent": {
      "put": {
        "tags": ["personalization"],
        "operationId": "addRecent",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "stepId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/personalization/templates/{templateId}/favorite": {
      "put": {
        "tags": ["personalization"],
        "operationId": "addTemplateToFavorite",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "tags": ["personalization"],
        "operationId": "removeTemplateFromFavorite",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/aws-secrets-manager": {
      "post": {
        "tags": ["aws-secrets-manager"],
        "operationId": "saveAwsSecretsManagerConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AwsSecretsManagerConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["aws-secrets-manager"],
        "operationId": "deleteAwsSecretsManagerConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/azure-secrets-manager": {
      "post": {
        "tags": ["azure-secrets-manager"],
        "operationId": "saveAzureSecretsManagerConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AzureVaultConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["azure-secrets-manager"],
        "operationId": "deleteAzureVaultConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/azure-secrets-manager/list-vaults": {
      "post": {
        "tags": ["azure-secrets-manager"],
        "operationId": "listVaults",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AzureVaultConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/custom-secrets-managers/{configId}": {
      "get": {
        "tags": ["custom-secrets-managers"],
        "operationId": "getCustomSecretsManagerConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCustomSecretsManagerConfig"
            }
          }
        }
      },
      "post": {
        "tags": ["custom-secrets-managers"],
        "operationId": "updateCustomSecretsManagerConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomSecretsManagerConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["custom-secrets-managers"],
        "operationId": "deleteCustomSecretsManagerConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/custom-secrets-managers/validate": {
      "post": {
        "tags": ["custom-secrets-managers"],
        "operationId": "validateCustomSecretsManagerConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomSecretsManagerConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/custom-secrets-managers": {
      "put": {
        "tags": ["custom-secrets-managers"],
        "operationId": "saveCustomSecretsManagerConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomSecretsManagerConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/cyberark": {
      "post": {
        "tags": ["cyberark"],
        "operationId": "saveCyberArkConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CyberArkConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["cyberark"],
        "operationId": "deleteCyberArkConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/gcp-secrets-manager": {
      "post": {
        "tags": ["gcp-secrets-manager"],
        "operationId": "saveGcpSecretsManagerConfig",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "keyRing",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "encryptionType",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": [
              "LOCAL",
              "KMS",
              "GCP_KMS",
              "AWS_SECRETS_MANAGER",
              "AZURE_VAULT",
              "CYBERARK",
              "VAULT",
              "GCP_SECRETS_MANAGER",
              "CUSTOM",
              "VAULT_SSH"
            ]
          },
          {
            "name": "isDefault",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "usageRestrictions",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "delegateSelectors",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["gcp-secrets-manager"],
        "operationId": "deleteGcpSecretsManagerConfig",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/gcp-secrets-manager/{secretMangerId}": {
      "post": {
        "tags": ["gcp-secrets-manager"],
        "operationId": "updateGcpSecretsManagerConfig",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "secretMangerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "keyRing",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "encryptionType",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": [
              "LOCAL",
              "KMS",
              "GCP_KMS",
              "AWS_SECRETS_MANAGER",
              "AZURE_VAULT",
              "CYBERARK",
              "VAULT",
              "GCP_SECRETS_MANAGER",
              "CUSTOM",
              "VAULT_SSH"
            ]
          },
          {
            "name": "isDefault",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "usageRestrictions",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "delegateSelectors",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/gcp-secrets-manager/global-kms": {
      "put": {
        "tags": ["gcp-secrets-manager"],
        "operationId": "saveGlobalKmsConfig",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "keyName",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "keyRing",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "encryptionType",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": [
              "LOCAL",
              "KMS",
              "GCP_KMS",
              "AWS_SECRETS_MANAGER",
              "AZURE_VAULT",
              "CYBERARK",
              "VAULT",
              "GCP_SECRETS_MANAGER",
              "CUSTOM",
              "VAULT_SSH"
            ]
          },
          {
            "name": "isDefault",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "usageRestrictions",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "delegateSelectors",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/gcp-secrets-manager-v2": {
      "post": {
        "tags": ["gcp-secrets-manager-v2"],
        "operationId": "saveGcpSecretsManagerConfig_1",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "encryptionType",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": [
              "LOCAL",
              "KMS",
              "GCP_KMS",
              "AWS_SECRETS_MANAGER",
              "AZURE_VAULT",
              "CYBERARK",
              "VAULT",
              "GCP_SECRETS_MANAGER",
              "CUSTOM",
              "VAULT_SSH"
            ]
          },
          {
            "name": "isDefault",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "usageRestrictions",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "delegateSelectors",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["gcp-secrets-manager-v2"],
        "operationId": "deleteGcpSecretsManagerConfig_1",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/gcp-secrets-manager-v2/{secretManagerId}": {
      "post": {
        "tags": ["gcp-secrets-manager-v2"],
        "operationId": "updateGcpSecretsManagerConfig_1",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "secretManagerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "encryptionType",
            "in": "formData",
            "required": false,
            "type": "string",
            "enum": [
              "LOCAL",
              "KMS",
              "GCP_KMS",
              "AWS_SECRETS_MANAGER",
              "AZURE_VAULT",
              "CYBERARK",
              "VAULT",
              "GCP_SECRETS_MANAGER",
              "CUSTOM",
              "VAULT_SSH"
            ]
          },
          {
            "name": "isDefault",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "usageRestrictions",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "delegateSelectors",
            "in": "formData",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/gcp-secrets-manager-v2/regions": {
      "get": {
        "tags": ["gcp-secrets-manager-v2"],
        "operationId": "regions",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/kms": {
      "delete": {
        "tags": ["kms"],
        "operationId": "deleteKmsConfig2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kmsConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/kms/save-global-kms": {
      "post": {
        "tags": ["kms"],
        "operationId": "saveGlobalKmsConfig_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KmsConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/kms/save-kms": {
      "post": {
        "tags": ["kms"],
        "operationId": "saveKmsConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/KmsConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/kms/delete-kms": {
      "get": {
        "tags": ["kms"],
        "operationId": "deleteKmsConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kmsConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/ssh-vault": {
      "post": {
        "tags": ["ssh-vault"],
        "operationId": "saveOrUpdateSSHVaultConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SSHVaultConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["ssh-vault"],
        "operationId": "deleteVaultConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vaultConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/ssh-vault/list-engines": {
      "post": {
        "tags": ["ssh-vault"],
        "operationId": "listSecretEngines",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SSHVaultConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListSecretEngineSummary"
            }
          }
        }
      }
    },
    "/secrets/add-local-secret": {
      "post": {
        "tags": ["secrets"],
        "operationId": "saveSecretUsingLocalMode",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SecretText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/secrets/delete-file": {
      "post": {
        "tags": ["secrets"],
        "operationId": "deleteFilePost",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      },
      "delete": {
        "tags": ["secrets"],
        "operationId": "deleteFile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        },
        "deprecated": true
      }
    },
    "/secrets/list-setup-usage": {
      "get": {
        "tags": ["secrets"],
        "operationId": "getSecretSetupUsage",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSetSecretSetupUsage"
            }
          }
        }
      }
    },
    "/secrets/update-file": {
      "post": {
        "tags": ["secrets"],
        "operationId": "updateFile",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "usageRestrictions",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "additionalMetadata",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "runtimeParameters",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "scopedToAccount",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "inheritScopesFromSM",
            "in": "formData",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/secrets/list-secret-usage": {
      "get": {
        "tags": ["secrets"],
        "operationId": "getSecretUsage",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListUuidAware"
            }
          }
        }
      }
    },
    "/secrets/update-secret": {
      "post": {
        "tags": ["secrets"],
        "operationId": "updateSecret",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SecretText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/secrets/delete-secret": {
      "post": {
        "tags": ["secrets"],
        "operationId": "deleteSecret",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      },
      "delete": {
        "tags": ["secrets"],
        "operationId": "deleteSecret_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        },
        "deprecated": true
      }
    },
    "/secrets/list-secrets-page": {
      "get": {
        "tags": ["secrets"],
        "operationId": "listSecrets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "HOST_CONNECTION_ATTRIBUTES",
              "BASTION_HOST_CONNECTION_ATTRIBUTES",
              "SMTP",
              "SFTP",
              "JENKINS",
              "BAMBOO",
              "STRING",
              "SPLUNK",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "APM_VERIFICATION",
              "BUG_SNAG",
              "LOG_VERIFICATION",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "DYNA_TRACE",
              "INSTANA",
              "DATA_DOG_LOG",
              "CLOUD_WATCH",
              "SCALYR",
              "ELB",
              "SLACK",
              "AWS",
              "GCS",
              "GCP",
              "AZURE",
              "PCF",
              "DIRECT",
              "KUBERNETES_CLUSTER",
              "DOCKER",
              "ECR",
              "GCR",
              "ACR",
              "PHYSICAL_DATA_CENTER",
              "KUBERNETES",
              "NEXUS",
              "ARTIFACTORY",
              "SMB",
              "AMAZON_S3",
              "GIT",
              "SSH_SESSION_CONFIG",
              "SERVICE_VARIABLE",
              "CONFIG_FILE",
              "KMS",
              "GCP_KMS",
              "JIRA",
              "SERVICENOW",
              "SECRET_TEXT",
              "YAML_GIT_SYNC",
              "VAULT",
              "VAULT_SSH",
              "AWS_SECRETS_MANAGER",
              "CYBERARK",
              "WINRM_CONNECTION_ATTRIBUTES",
              "WINRM_SESSION_CONFIG",
              "PROMETHEUS",
              "INFRASTRUCTURE_MAPPING",
              "HTTP_HELM_REPO",
              "AMAZON_S3_HELM_REPO",
              "GCS_HELM_REPO",
              "SPOT_INST",
              "AZURE_ARTIFACTS_PAT",
              "CUSTOM",
              "CE_AWS",
              "CE_GCP",
              "CE_AZURE",
              "AZURE_VAULT",
              "KUBERNETES_CLUSTER_NG",
              "GIT_NG",
              "GCP_SECRETS_MANAGER",
              "TRIGGER"
            ]
          },
          {
            "name": "currentAppId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "currentEnvId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseEncryptedData"
            }
          }
        }
      }
    },
    "/secrets/list-account-secrets": {
      "get": {
        "tags": ["secrets"],
        "operationId": "listSecrets_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "HOST_CONNECTION_ATTRIBUTES",
              "BASTION_HOST_CONNECTION_ATTRIBUTES",
              "SMTP",
              "SFTP",
              "JENKINS",
              "BAMBOO",
              "STRING",
              "SPLUNK",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "APM_VERIFICATION",
              "BUG_SNAG",
              "LOG_VERIFICATION",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "DYNA_TRACE",
              "INSTANA",
              "DATA_DOG_LOG",
              "CLOUD_WATCH",
              "SCALYR",
              "ELB",
              "SLACK",
              "AWS",
              "GCS",
              "GCP",
              "AZURE",
              "PCF",
              "DIRECT",
              "KUBERNETES_CLUSTER",
              "DOCKER",
              "ECR",
              "GCR",
              "ACR",
              "PHYSICAL_DATA_CENTER",
              "KUBERNETES",
              "NEXUS",
              "ARTIFACTORY",
              "SMB",
              "AMAZON_S3",
              "GIT",
              "SSH_SESSION_CONFIG",
              "SERVICE_VARIABLE",
              "CONFIG_FILE",
              "KMS",
              "GCP_KMS",
              "JIRA",
              "SERVICENOW",
              "SECRET_TEXT",
              "YAML_GIT_SYNC",
              "VAULT",
              "VAULT_SSH",
              "AWS_SECRETS_MANAGER",
              "CYBERARK",
              "WINRM_CONNECTION_ATTRIBUTES",
              "WINRM_SESSION_CONFIG",
              "PROMETHEUS",
              "INFRASTRUCTURE_MAPPING",
              "HTTP_HELM_REPO",
              "AMAZON_S3_HELM_REPO",
              "GCS_HELM_REPO",
              "SPOT_INST",
              "AZURE_ARTIFACTS_PAT",
              "CUSTOM",
              "CE_AWS",
              "CE_GCP",
              "CE_AZURE",
              "AZURE_VAULT",
              "KUBERNETES_CLUSTER_NG",
              "GIT_NG",
              "GCP_SECRETS_MANAGER",
              "TRIGGER"
            ]
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseEncryptedData"
            }
          }
        }
      }
    },
    "/secrets/get-config": {
      "get": {
        "tags": ["secrets"],
        "operationId": "getEncryptionConfig",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "secretsManagerConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSecretManagerConfig"
            }
          }
        }
      }
    },
    "/secrets/add-secret": {
      "post": {
        "tags": ["secrets"],
        "operationId": "saveSecret",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SecretText"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/secrets/add-file": {
      "post": {
        "tags": ["secrets"],
        "operationId": "saveFile",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kmsId",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          },
          {
            "name": "usageRestrictions",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "additionalMetadata",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "runtimeParameters",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "scopedToAccount",
            "in": "formData",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "inheritScopesFromSM",
            "in": "formData",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/secrets/usage": {
      "get": {
        "tags": ["secrets"],
        "operationId": "getUsageLogs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "HOST_CONNECTION_ATTRIBUTES",
              "BASTION_HOST_CONNECTION_ATTRIBUTES",
              "SMTP",
              "SFTP",
              "JENKINS",
              "BAMBOO",
              "STRING",
              "SPLUNK",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "APM_VERIFICATION",
              "BUG_SNAG",
              "LOG_VERIFICATION",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "DYNA_TRACE",
              "INSTANA",
              "DATA_DOG_LOG",
              "CLOUD_WATCH",
              "SCALYR",
              "ELB",
              "SLACK",
              "AWS",
              "GCS",
              "GCP",
              "AZURE",
              "PCF",
              "DIRECT",
              "KUBERNETES_CLUSTER",
              "DOCKER",
              "ECR",
              "GCR",
              "ACR",
              "PHYSICAL_DATA_CENTER",
              "KUBERNETES",
              "NEXUS",
              "ARTIFACTORY",
              "SMB",
              "AMAZON_S3",
              "GIT",
              "SSH_SESSION_CONFIG",
              "SERVICE_VARIABLE",
              "CONFIG_FILE",
              "KMS",
              "GCP_KMS",
              "JIRA",
              "SERVICENOW",
              "SECRET_TEXT",
              "YAML_GIT_SYNC",
              "VAULT",
              "VAULT_SSH",
              "AWS_SECRETS_MANAGER",
              "CYBERARK",
              "WINRM_CONNECTION_ATTRIBUTES",
              "WINRM_SESSION_CONFIG",
              "PROMETHEUS",
              "INFRASTRUCTURE_MAPPING",
              "HTTP_HELM_REPO",
              "AMAZON_S3_HELM_REPO",
              "GCS_HELM_REPO",
              "SPOT_INST",
              "AZURE_ARTIFACTS_PAT",
              "CUSTOM",
              "CE_AWS",
              "CE_GCP",
              "CE_AZURE",
              "AZURE_VAULT",
              "KUBERNETES_CLUSTER_NG",
              "GIT_NG",
              "GCP_SECRETS_MANAGER",
              "TRIGGER"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseSecretUsageLog"
            }
          }
        }
      }
    },
    "/secrets/change-logs": {
      "get": {
        "tags": ["secrets"],
        "operationId": "getChangeLogs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "HOST_CONNECTION_ATTRIBUTES",
              "BASTION_HOST_CONNECTION_ATTRIBUTES",
              "SMTP",
              "SFTP",
              "JENKINS",
              "BAMBOO",
              "STRING",
              "SPLUNK",
              "ELK",
              "LOGZ",
              "SUMO",
              "DATA_DOG",
              "APM_VERIFICATION",
              "BUG_SNAG",
              "LOG_VERIFICATION",
              "APP_DYNAMICS",
              "NEW_RELIC",
              "DYNA_TRACE",
              "INSTANA",
              "DATA_DOG_LOG",
              "CLOUD_WATCH",
              "SCALYR",
              "ELB",
              "SLACK",
              "AWS",
              "GCS",
              "GCP",
              "AZURE",
              "PCF",
              "DIRECT",
              "KUBERNETES_CLUSTER",
              "DOCKER",
              "ECR",
              "GCR",
              "ACR",
              "PHYSICAL_DATA_CENTER",
              "KUBERNETES",
              "NEXUS",
              "ARTIFACTORY",
              "SMB",
              "AMAZON_S3",
              "GIT",
              "SSH_SESSION_CONFIG",
              "SERVICE_VARIABLE",
              "CONFIG_FILE",
              "KMS",
              "GCP_KMS",
              "JIRA",
              "SERVICENOW",
              "SECRET_TEXT",
              "YAML_GIT_SYNC",
              "VAULT",
              "VAULT_SSH",
              "AWS_SECRETS_MANAGER",
              "CYBERARK",
              "WINRM_CONNECTION_ATTRIBUTES",
              "WINRM_SESSION_CONFIG",
              "PROMETHEUS",
              "INFRASTRUCTURE_MAPPING",
              "HTTP_HELM_REPO",
              "AMAZON_S3_HELM_REPO",
              "GCS_HELM_REPO",
              "SPOT_INST",
              "AZURE_ARTIFACTS_PAT",
              "CUSTOM",
              "CE_AWS",
              "CE_GCP",
              "CE_AZURE",
              "AZURE_VAULT",
              "KUBERNETES_CLUSTER_NG",
              "GIT_NG",
              "GCP_SECRETS_MANAGER",
              "TRIGGER"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListSecretChangeLog"
            }
          }
        }
      }
    },
    "/secrets/list-values": {
      "get": {
        "tags": ["secrets"],
        "operationId": "listEncryptedSettingAttributes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCollectionSettingAttribute"
            }
          }
        }
      }
    },
    "/secrets/list-configs": {
      "get": {
        "tags": ["secrets"],
        "operationId": "listEncryptionConfig",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListSecretManagerConfig"
            }
          }
        }
      }
    },
    "/secrets/create-secret-allowed-scopes": {
      "get": {
        "tags": ["secrets"],
        "operationId": "getAllowedUsageScopesToCreateSecret",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "secretsManagerConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseUsageRestrictions"
            }
          }
        }
      }
    },
    "/secrets/transition-config": {
      "get": {
        "tags": ["secrets"],
        "operationId": "transitionSecrets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromEncryptionType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "LOCAL",
              "KMS",
              "GCP_KMS",
              "AWS_SECRETS_MANAGER",
              "AZURE_VAULT",
              "CYBERARK",
              "VAULT",
              "GCP_SECRETS_MANAGER",
              "CUSTOM",
              "VAULT_SSH"
            ]
          },
          {
            "name": "fromKmsId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toEncryptionType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "LOCAL",
              "KMS",
              "GCP_KMS",
              "AWS_SECRETS_MANAGER",
              "AZURE_VAULT",
              "CYBERARK",
              "VAULT",
              "GCP_SECRETS_MANAGER",
              "CUSTOM",
              "VAULT_SSH"
            ]
          },
          {
            "name": "toKmsId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": ["secrets"],
        "operationId": "transitionSecrets_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromEncryptionType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "LOCAL",
              "KMS",
              "GCP_KMS",
              "AWS_SECRETS_MANAGER",
              "AZURE_VAULT",
              "CYBERARK",
              "VAULT",
              "GCP_SECRETS_MANAGER",
              "CUSTOM",
              "VAULT_SSH"
            ]
          },
          {
            "name": "fromKmsId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toEncryptionType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "LOCAL",
              "KMS",
              "GCP_KMS",
              "AWS_SECRETS_MANAGER",
              "AZURE_VAULT",
              "CYBERARK",
              "VAULT",
              "GCP_SECRETS_MANAGER",
              "CUSTOM",
              "VAULT_SSH"
            ]
          },
          {
            "name": "toKmsId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/secrets/import-secrets": {
      "post": {
        "tags": ["secrets"],
        "operationId": "importSecrets",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/vault": {
      "post": {
        "tags": ["vault"],
        "operationId": "saveOrUpdateVaultConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VaultConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["vault"],
        "operationId": "deleteVaultConfig_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vaultConfigId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/vault/list-engines": {
      "post": {
        "tags": ["vault"],
        "operationId": "listSecretEngines_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VaultConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListSecretEngineSummary"
            }
          }
        }
      }
    },
    "/template-galleries/{templateGalleryId}": {
      "put": {
        "tags": ["template-galleries"],
        "operationId": "update_37",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateGalleryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TemplateGallery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplateGallery"
            }
          }
        }
      }
    },
    "/template-galleries/{galleryId}": {
      "get": {
        "tags": ["template-galleries"],
        "operationId": "getTemplateGallery",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "galleryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplateGallery"
            }
          }
        }
      },
      "delete": {
        "tags": ["template-galleries"],
        "operationId": "delete_35",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "galleryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/template-galleries": {
      "get": {
        "tags": ["template-galleries"],
        "operationId": "list_49",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseTemplateGallery"
            }
          }
        }
      },
      "post": {
        "tags": ["template-galleries"],
        "operationId": "save_22",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TemplateGallery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplateGallery"
            }
          }
        }
      }
    },
    "/template-galleries/folders": {
      "post": {
        "tags": ["template-galleries"],
        "operationId": "saveFolder",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TemplateFolder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplateFolder"
            }
          }
        }
      }
    },
    "/template-galleries/folders/{templateFolderId}": {
      "get": {
        "tags": ["template-galleries"],
        "operationId": "getTemplateFolder",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateFolderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplateFolder"
            }
          }
        }
      },
      "put": {
        "tags": ["template-galleries"],
        "operationId": "updateFolder",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "templateFolderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TemplateFolder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplateFolder"
            }
          }
        }
      },
      "delete": {
        "tags": ["template-galleries"],
        "operationId": "deleteFolder",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "templateFolderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/templates/metadata": {
      "post": {
        "tags": ["templates"],
        "operationId": "getTemplateMetadata",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListTemplateMetaData"
            }
          }
        }
      }
    },
    "/templates/{templateId}/commands/categories": {
      "get": {
        "tags": ["templates"],
        "operationId": "getCommandCategories",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListCommandCategory"
            }
          }
        }
      }
    },
    "/templates/{templateId}": {
      "get": {
        "tags": ["templates"],
        "operationId": "getTemplate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplate"
            }
          }
        }
      },
      "put": {
        "tags": ["templates"],
        "operationId": "update_38",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplate"
            }
          }
        }
      },
      "delete": {
        "tags": ["templates"],
        "operationId": "delete_36",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "tags": ["templates"],
        "operationId": "list_50",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "default": "__GLOBAL_APP_ID__"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "galleryKeys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "defaultVersion",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseTemplate"
            }
          }
        }
      },
      "post": {
        "tags": ["templates"],
        "operationId": "save_23",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Template"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplate"
            }
          }
        }
      }
    },
    "/templates/versions": {
      "get": {
        "tags": ["templates"],
        "operationId": "list_51",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "0"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fieldsIncluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "fieldsExcluded",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePageResponseTemplateVersion"
            }
          }
        }
      }
    },
    "/templates/{templateId}/versions/{version}/yaml": {
      "get": {
        "tags": ["templates"],
        "operationId": "getYaml",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/templates/tree/search": {
      "get": {
        "tags": ["templates"],
        "operationId": "getTemplateTree",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "name": "folderId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplateFolder"
            }
          }
        }
      }
    },
    "/view": {
      "get": {
        "tags": ["view"],
        "operationId": "get_45",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCEView"
            }
          }
        }
      },
      "post": {
        "tags": ["view"],
        "operationId": "create_8",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clone",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCEView"
            }
          }
        }
      },
      "put": {
        "tags": ["view"],
        "operationId": "update_39",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCEView"
            }
          }
        }
      },
      "delete": {
        "tags": ["view"],
        "operationId": "delete_37",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "viewId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/view-custom-field": {
      "get": {
        "tags": ["view-custom-field"],
        "operationId": "get_46",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customFieldId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseViewCustomField"
            }
          }
        }
      },
      "post": {
        "tags": ["view-custom-field"],
        "operationId": "saveCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ViewCustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseViewCustomField"
            }
          }
        }
      },
      "put": {
        "tags": ["view-custom-field"],
        "operationId": "update_40",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ViewCustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseViewCustomField"
            }
          }
        }
      },
      "delete": {
        "tags": ["view-custom-field"],
        "operationId": "delete_38",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customFieldId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEView"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/view-custom-field/validate": {
      "post": {
        "tags": ["view-custom-field"],
        "operationId": "validate_3",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ViewCustomField"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/yaml-history/{accountId}": {
      "get": {
        "tags": ["yaml-history"],
        "operationId": "get_47",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SETUP",
              "APP",
              "SERVICE",
              "SERVICE_COMMAND",
              "CONFIG_FILE",
              "ENVIRONMENT",
              "CONFIG_FILE_OVERRIDE",
              "SETTING",
              "WORKFLOW",
              "PIPELINE",
              "PROVISIONER",
              "TRIGGER",
              "ARTIFACT_STREAM",
              "INFRA_MAPPING",
              "INFRA_DEFINITION",
              "DEPLOYMENT_SPEC",
              "APPLICATION_DEFAULTS",
              "ACCOUNT_DEFAULTS",
              "NOTIFICATION_GROUP",
              "APPLICATION_MANIFEST",
              "APPLICATION_MANIFEST_FILE",
              "SERVICE_CV_CONFIG",
              "TAGS",
              "GLOBAL_TEMPLATE_LIBRARY",
              "APPLICATION_TEMPLATE_LIBRARY",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          },
          {
            "name": "versionId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlHistory"
            }
          }
        }
      },
      "post": {
        "tags": ["yaml-history"],
        "operationId": "save_24",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SETUP",
              "APP",
              "SERVICE",
              "SERVICE_COMMAND",
              "CONFIG_FILE",
              "ENVIRONMENT",
              "CONFIG_FILE_OVERRIDE",
              "SETTING",
              "WORKFLOW",
              "PIPELINE",
              "PROVISIONER",
              "TRIGGER",
              "ARTIFACT_STREAM",
              "INFRA_MAPPING",
              "INFRA_DEFINITION",
              "DEPLOYMENT_SPEC",
              "APPLICATION_DEFAULTS",
              "ACCOUNT_DEFAULTS",
              "NOTIFICATION_GROUP",
              "APPLICATION_MANIFEST",
              "APPLICATION_MANIFEST_FILE",
              "SERVICE_CV_CONFIG",
              "TAGS",
              "GLOBAL_TEMPLATE_LIBRARY",
              "APPLICATION_TEMPLATE_LIBRARY",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlVersion"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/webhook/{entityId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getWebhook",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseGitSyncWebhook"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/git-sync-errors": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "listGitSyncErrors",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListGitSyncError"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/git-sync-errors-discard-all": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "discardGitSyncError",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/git-sync-errors-discard-selected": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "discardGitSyncError_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/service-commands/{serviceCommandId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getServiceCommand",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceCommandId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateServiceCommand",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "serviceCommandId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceCommand"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/yaml-as-zip": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "processYamlFilesAsZip",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "yamlPath",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/yaml-content": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getYamlForFilePath",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "yamlFilePath",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "yamlSubType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/container-tasks/{containerTaskId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getContainerTask",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "containerTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateContainerTask_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "containerTaskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/helm-charts/{helmChartSpecificationId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getHelmChartSpecification",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "helmChartSpecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateHelmChartSpecification_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "helmChartSpecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/pcfservicespecifications/{pcfservicespecificationId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getPcfservicespecificationId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pcfservicespecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updatePcfServiceSpecification_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "pcfservicespecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/ecs-service-spec/{ecsServiceSpecificationId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getEcsSErviceSpecification_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ecsServiceSpecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateEcsServiceSpecification_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "ecsServiceSpecificationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/manifest-files/{manifestFileId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getApplicationManifestFile",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateManifestFile_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "manifestFileId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseManifestFile"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/cvconfigurations/{cvConfigId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getCVConfiguration",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateCVConfiguration_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "cvConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/settings/{uuid}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getSettingAttribute",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateSettingAttribute",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseSettingAttribute"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/git-config/{entityId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "get_48",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlGitConfig"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateGitConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlGitConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlGitConfig"
            }
          }
        }
      },
      "delete": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "delete_39",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlGitConfig"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/clone": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "clone_5",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "newEntityName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/environments/{envId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getEnvironment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateEnvironment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "envId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseEnvironment"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/application": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getApplication",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDirectoryNode"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/workflows/{workflowId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getWorkflow",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateWorkflow",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseWorkflow"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/tags/{uuid}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getTags",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateTags_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceCommand"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/services/{serviceId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseService"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/directory": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getDirectory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDirectoryNode"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/artifact-streams/{artifactStreamId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getArtifactStream",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "artifactStreamId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateArtifactStream",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "artifactStreamId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/applications/{appId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getApp",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateApp",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseApplication"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/templates/{templateId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getTemplateLibrary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateTemplate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "__GLOBAL_APP_ID__"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseTemplate"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/infrastructureprovisioners/{infraProvisionerId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getProvisioner",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraProvisionerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateProvisioner",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "infraProvisionerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureProvisioner"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/artifactTriggers/{artifactStreamId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getArtifactTrigger",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "artifactStreamId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateArtifactTrigger",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "artifactStreamId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseArtifactStream"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/triggers/{triggerId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getTrigger",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "triggerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateTrigger",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "triggerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/cgeventconfigs/{eventConfigId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getCgEventConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "eventConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateCgEventConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "eventConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseCgEventConfig"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/application-manifests/{applicationManifestId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getApplicationManifestId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateApplicationManifest_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "applicationManifestId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/pipelines/{pipelineId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getPipeline",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updatePipeline",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "pipelineId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponsePipeline"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/settings": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getSettingAttributesList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/defaults/{uuid}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getDefaults",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateDefaults",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseServiceCommand"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/configs/{configId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getConfigFile",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateConfigFile",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "configId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseConfigFile"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/manifest": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getApplicationManifestForService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseDirectoryNode"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/full-sync/{entityId}": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "pushDirectory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/infrastructuremappings/{infraMappingId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getInfraMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateInfraMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "infraMappingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/infrastructuredefinitions/{infraDefinitionId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getInfraDefintion",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateInfraDefinition",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "infraDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseInfrastructureDefinition"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/lambda-specs/{lambdaSpecId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getLamdbaSpec",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lambdaSpecId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateLambdaSpec",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "lambdaSpecId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/user-data-specs/{userDataSpecId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getUserDataSpec",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userDataSpecId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      },
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateUserDataSpec",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "deleteEnabled",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "userDataSpecId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml": {
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateYaml",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseBase"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/git-config": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "saveGitConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlGitConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlGitConfig"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/webhook/{entityToken}": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "webhookCatcher",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityToken",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/full-sync-dry-run": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "fullSyncDryRun",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryAllAccounts",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/get-all-yaml-errors": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getAllYamlErrors",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "queryAllAccounts",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/full-sync-account": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "fullSyncAccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/internal/full-sync-account": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "fullSyncAccountInternal",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/internal/template-yaml-sync": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "templateYamlSync",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/upsert-entities": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "upsertYAMLEntities",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlOperationResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/upsert-entity": {
      "post": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "upsertYAMLEntity",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "yamlFilePath",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "yamlContent",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseFileOperationStatus"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/delete-entities": {
      "delete": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "deleteYAMLEntities",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filePaths",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlOperationResponse"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/compliance-config/{governanceConfigId}": {
      "put": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "updateGovernanceConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlPayload"
            }
          },
          {
            "name": "governanceConfigId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/notification-groups/{notificationGroupId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getNotificationGroup",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "notificationGroupId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      }
    },
    "/setup-as-code/yaml/compliance-config/{accountId}": {
      "get": {
        "tags": ["setup-as-codeyaml"],
        "operationId": "getGovernanceConfig",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseYamlPayload"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ResponseMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "JIRA_STEP_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION"
          ]
        },
        "level": {
          "type": "string",
          "enum": ["INFO", "ERROR"]
        },
        "message": {
          "type": "string"
        },
        "exception": {
          "$ref": "#/definitions/Throwable"
        },
        "failureTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EXPIRED",
              "DELEGATE_PROVISIONING",
              "CONNECTIVITY",
              "AUTHENTICATION",
              "VERIFICATION_FAILURE",
              "APPLICATION_ERROR",
              "AUTHORIZATION_ERROR",
              "TIMEOUT_ERROR"
            ]
          }
        }
      }
    },
    "RestResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean"
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "RestResponseListString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseVoid": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Void"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Void": {
      "type": "object"
    },
    "DelegateTokenDetails": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": ["ACTIVE", "REVOKED"]
        },
        "value": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "ownerIdentifier": {
          "type": "string"
        }
      }
    },
    "EmbeddedUser": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "RestResponseDelegateTokenDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateTokenDetails"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListDelegateTokenDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateTokenDetails"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateConnectionDetails": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "lastHeartbeat": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DelegateGroupDetails": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "delegateGroupIdentifier": {
          "type": "string"
        },
        "delegateType": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "groupHostName": {
          "type": "string"
        },
        "delegateDescription": {
          "type": "string"
        },
        "delegateConfigurationId": {
          "type": "string"
        },
        "sizeDetails": {
          "$ref": "#/definitions/DelegateSizeDetails"
        },
        "groupImplicitSelectors": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "enum": ["PROFILE_NAME", "DELEGATE_NAME", "HOST_NAME", "GROUP_NAME", "GROUP_SELECTORS", "PROFILE_SELECTORS"]
          }
        },
        "groupCustomSelectors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "delegateInsightsDetails": {
          "$ref": "#/definitions/DelegateInsightsDetails"
        },
        "lastHeartBeat": {
          "type": "integer",
          "format": "int64"
        },
        "connectivityStatus": {
          "type": "string"
        },
        "activelyConnected": {
          "type": "boolean"
        },
        "delegateInstanceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateInner"
          }
        }
      }
    },
    "DelegateInner": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "delegateName": {
          "type": "string"
        },
        "delegateGroupName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["ENABLED", "WAITING_FOR_APPROVAL", "DISABLED", "DELETED"]
        },
        "lastHeartBeat": {
          "type": "integer",
          "format": "int64"
        },
        "activelyConnected": {
          "type": "boolean"
        },
        "delegateProfileId": {
          "type": "string"
        },
        "delegateType": {
          "type": "string"
        },
        "polllingModeEnabled": {
          "type": "boolean"
        },
        "proxy": {
          "type": "boolean"
        },
        "ceEnabled": {
          "type": "boolean"
        },
        "includeScopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateScope"
          }
        },
        "excludeScopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateScope"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "implicitSelectors": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "enum": ["PROFILE_NAME", "DELEGATE_NAME", "HOST_NAME", "GROUP_NAME", "GROUP_SELECTORS", "PROFILE_SELECTORS"]
          }
        },
        "profileExecutedAt": {
          "type": "integer",
          "format": "int64"
        },
        "profileError": {
          "type": "boolean"
        },
        "sampleDelegate": {
          "type": "boolean"
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateConnectionDetails"
          }
        }
      }
    },
    "DelegateInsightsBarDetails": {
      "type": "object",
      "properties": {
        "timeStamp": {
          "type": "integer",
          "format": "int64"
        },
        "counts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PairDelegateInsightsTypeLong"
          }
        }
      }
    },
    "DelegateInsightsDetails": {
      "type": "object",
      "properties": {
        "insights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateInsightsBarDetails"
          }
        }
      }
    },
    "Pair": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        },
        "key": {
          "type": "object"
        },
        "right": {
          "type": "object"
        },
        "left": {
          "type": "object"
        }
      }
    },
    "PairDelegateInsightsTypeLong": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int64"
        },
        "key": {
          "type": "string",
          "enum": ["SUCCESSFUL", "FAILED", "IN_PROGRESS", "PERPETUAL_TASK_ASSIGNED"]
        },
        "right": {
          "type": "integer",
          "format": "int64"
        },
        "left": {
          "type": "string",
          "enum": ["SUCCESSFUL", "FAILED", "IN_PROGRESS", "PERPETUAL_TASK_ASSIGNED"]
        }
      }
    },
    "RestResponseDelegateGroupDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateGroupDetails"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateGroupListing": {
      "type": "object",
      "properties": {
        "delegateGroupDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateGroupDetails"
          }
        }
      }
    },
    "RestResponseDelegateGroupListing": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateGroupListing"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateFilterProperties": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["ENABLED", "WAITING_FOR_APPROVAL", "DISABLED", "DELETED"]
        },
        "description": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "delegateName": {
          "type": "string"
        },
        "delegateType": {
          "type": "string"
        },
        "delegateGroupIdentifier": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "filterType": {
          "type": "string",
          "enum": [
            "Connector",
            "DelegateProfile",
            "Delegate",
            "PipelineSetup",
            "PipelineExecution",
            "Deployment",
            "Audit",
            "Template"
          ]
        }
      }
    },
    "DelegateResponseData": {
      "type": "object"
    },
    "DelegateTaskResponse": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "response": {
          "$ref": "#/definitions/DelegateResponseData"
        },
        "responseCode": {
          "type": "string",
          "enum": ["OK", "FAILED", "RETRY_ON_OTHER_DELEGATE"]
        }
      }
    },
    "PairBooleanString": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "key": {
          "type": "boolean"
        },
        "right": {
          "type": "string"
        },
        "left": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePairBooleanString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PairBooleanString"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseBoolean": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "boolean"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AccessRequestDTO": {
      "type": "object",
      "properties": {
        "accessRequestId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "harnessUserGroupId": {
          "type": "string"
        },
        "harnessUserGroupName": {
          "type": "string"
        },
        "emailIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "accessStartAt": {
          "type": "integer",
          "format": "int64"
        },
        "accessEndAt": {
          "type": "integer",
          "format": "int64"
        },
        "hours": {
          "type": "integer",
          "format": "int32"
        },
        "accessType": {
          "type": "string",
          "enum": ["GROUP_ACCESS", "MEMBER_ACCESS"]
        },
        "accessActive": {
          "type": "boolean"
        }
      }
    },
    "RestResponseAccessRequestDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AccessRequestDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListAccessRequestDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessRequestDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseSetString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ImportStatus": {
      "type": "object",
      "properties": {
        "collectionName": {
          "type": "string"
        },
        "imported": {
          "type": "integer",
          "format": "int32"
        },
        "idClashes": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ImportStatusReport": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": ["DRY_RUN", "UPSERT", "INSERT"]
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportStatus"
          }
        }
      }
    },
    "RestResponseImportStatusReport": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ImportStatusReport"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AccountDetails": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "cluster": {
          "type": "string"
        },
        "createdFromNG": {
          "type": "boolean"
        },
        "defaultExperience": {
          "type": "string",
          "enum": ["NG", "CG"]
        },
        "licenseInfo": {
          "$ref": "#/definitions/LicenseInfo"
        },
        "ceLicenseInfo": {
          "$ref": "#/definitions/CeLicenseInfo"
        },
        "activeServiceCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CeLicenseInfo": {
      "type": "object",
      "properties": {
        "licenseType": {
          "type": "string",
          "enum": ["FULL_TRIAL", "LIMITED_TRIAL", "PAID"]
        },
        "expiryTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "LicenseInfo": {
      "type": "object",
      "properties": {
        "accountType": {
          "type": "string"
        },
        "accountStatus": {
          "type": "string"
        },
        "expiryTime": {
          "type": "integer",
          "format": "int64"
        },
        "licenseUnits": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseAccountDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AccountDetails"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Account": {
      "type": "object",
      "required": ["accountName", "appId", "companyName", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "companyName": {
          "type": "string"
        },
        "nextGenEnabled": {
          "type": "boolean"
        },
        "accountName": {
          "type": "string"
        },
        "whitelistedDomains": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "licenseId": {
          "type": "string"
        },
        "dataRetentionDurationMs": {
          "type": "integer",
          "format": "int64"
        },
        "licenseInfo": {
          "$ref": "#/definitions/LicenseInfo"
        },
        "ceLicenseInfo": {
          "$ref": "#/definitions/CeLicenseInfo"
        },
        "accountEvents": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AccountEvent"
          }
        },
        "subdomainUrl": {
          "type": "string"
        },
        "twoFactorAdminEnforced": {
          "type": "boolean"
        },
        "forImport": {
          "type": "boolean"
        },
        "migratedToClusterUrl": {
          "type": "string"
        },
        "defaultExperience": {
          "type": "string",
          "enum": ["NG", "CG"]
        },
        "createdFromNG": {
          "type": "boolean"
        },
        "localEncryptionEnabled": {
          "type": "boolean"
        },
        "delegateConfiguration": {
          "$ref": "#/definitions/DelegateConfiguration"
        },
        "techStacks": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TechStack"
          }
        },
        "oauthEnabled": {
          "type": "boolean"
        },
        "ringName": {
          "type": "string"
        },
        "accountPreferences": {
          "$ref": "#/definitions/AccountPreferences"
        },
        "cloudCostEnabled": {
          "type": "boolean"
        },
        "ceAutoCollectK8sEvents": {
          "type": "boolean"
        },
        "trialSignupOptions": {
          "$ref": "#/definitions/TrialSignupOptions"
        },
        "serviceGuardLimit": {
          "type": "integer",
          "format": "int64"
        },
        "serviceAccountConfig": {
          "$ref": "#/definitions/ServiceAccountConfig"
        },
        "defaults": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "authenticationMechanism": {
          "type": "string",
          "enum": ["USER_PASSWORD", "SAML", "LDAP", "OAUTH"]
        },
        "povAccount": {
          "type": "boolean"
        },
        "harnessSupportAccessAllowed": {
          "type": "boolean"
        }
      }
    },
    "AccountEvent": {
      "type": "object",
      "properties": {
        "accountEventType": {
          "type": "string",
          "enum": [
            "APP_CREATED",
            "SERVICE_CREATED",
            "ENV_CREATED",
            "WORKFLOW_CREATED",
            "WORKFLOW_DEPLOYED",
            "PIPELINE_DEPLOYED",
            "DELEGATE_INSTALLED",
            "CLOUD_PROVIDER_CREATED",
            "ARTIFACT_REPO_CREATED",
            "PIPELINE_CREATED",
            "ARTIFACT_STREAM_ADDED",
            "INFRA_MAPPING_ADDED",
            "INFRA_DEFINITION_ADDED",
            "CUSTOM"
          ]
        },
        "customMsg": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "AccountPreferences": {
      "type": "object",
      "properties": {
        "delegateSecretsCacheTTLInHours": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DelegateConfiguration": {
      "type": "object",
      "properties": {
        "delegateVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "type": "string",
          "enum": ["SELF_DESTRUCT"]
        },
        "accountVersion": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageResponseAccount": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceAccountConfig": {
      "type": "object",
      "properties": {
        "apiKeyLimit": {
          "type": "integer",
          "format": "int64"
        },
        "tokenLimit": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TechStack": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "technology": {
          "type": "string"
        }
      }
    },
    "TrialSignupOptions": {
      "type": "object",
      "properties": {
        "productsSelected": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["CD", "CE", "CI"]
          }
        },
        "assistedOption": {
          "type": "boolean"
        }
      }
    },
    "RestResponseAccount": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Account"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SubdomainUrl": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "Activity": {
      "type": "object",
      "required": ["appId", "commandUnits", "environmentType", "lastUpdatedAt", "uuid", "workflowType"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": ["Command", "Verification", "Other"]
        },
        "applicationName": {
          "type": "string"
        },
        "environmentId": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "environmentType": {
          "type": "string",
          "enum": ["PROD", "NON_PROD", "ALL"]
        },
        "commandName": {
          "type": "string"
        },
        "commandUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandUnit"
          }
        },
        "commandNameVersionMap": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "commandType": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceTemplateId": {
          "type": "string"
        },
        "serviceTemplateName": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "publicDns": {
          "type": "string"
        },
        "serviceInstanceId": {
          "type": "string"
        },
        "infrastructureDefinitionId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowExecutionName": {
          "type": "string"
        },
        "workflowType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        },
        "stateExecutionInstanceId": {
          "type": "string"
        },
        "stateExecutionInstanceName": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "commandUnitType": {
          "type": "string",
          "enum": [
            "COMMAND",
            "JENKINS",
            "GCB",
            "HELM",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "PCF_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_UPDATE_LISTENER",
            "PCF_RESIZE",
            "PCF_MAP_ROUTE",
            "PCF_BG_SWAP_ROUTE",
            "PCF_PLUGIN",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "KUBERNETES",
            "AWS_AMI_SWITCH_ROUTES",
            "AWS_ECS_UPDATE_LISTENER_BG",
            "AWS_ECS_UPDATE_ROUTE_53_DNS_WEIGHT",
            "AWS_ECS_SERVICE_SETUP",
            "AWS_ECS_RUN_TASK_DEPLOY",
            "AWS_ECS_SERVICE_SETUP_ROUTE53",
            "AWS_ECS_SERVICE_SETUP_ELB",
            "AWS_ECS_SERVICE_SETUP_DAEMON",
            "AWS_ECS_SERVICE_ROLLBACK_DAEMON",
            "AWS_ECS_SERVICE_DEPLOY",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_SWAP",
            "AZURE_APP_SERVICE_SLOT_SETUP",
            "AZURE_APP_SERVICE_SLOT_TRAFFIC_SHIFT",
            "AZURE_APP_SERVICE_SLOT_SWAP",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES",
            "AZURE_ARM_DEPLOYMENT",
            "AZURE_BLUEPRINT_DEPLOYMENT",
            "TERRAGRUNT_PROVISION"
          ]
        },
        "logPurged": {
          "type": "boolean"
        },
        "artifactStreamId": {
          "type": "string"
        },
        "artifactStreamName": {
          "type": "string"
        },
        "artifactId": {
          "type": "string"
        },
        "artifactName": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "triggeredBy": {
          "$ref": "#/definitions/TriggeredBy"
        },
        "accountId": {
          "type": "string"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "pipeline": {
          "type": "boolean"
        }
      }
    },
    "AppContainer": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "fileUuid": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "checksumType": {
          "type": "string",
          "enum": ["MD5", "SHA1", "SHA256"]
        },
        "checksum": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "standard": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "standardUpload": {
          "type": "boolean"
        },
        "family": {
          "type": "string",
          "enum": ["TOMCAT", "JBOSS"]
        },
        "stackRootDirectory": {
          "type": "string"
        },
        "fileType": {
          "type": "string",
          "enum": ["ZIP", "TAR_GZ", "TAR_BZ", "TAR", "UNKNOWN"]
        },
        "systemCreated": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "hardened": {
          "type": "boolean"
        }
      }
    },
    "ArtifactStream": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "artifactStreamId": {
          "type": "string"
        },
        "artifactStreamType": {
          "type": "string"
        },
        "sourceName": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "artifactServerName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "autoPopulate": {
          "type": "boolean"
        },
        "serviceId": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/Service"
        },
        "autoDownload": {
          "type": "boolean"
        },
        "autoApproveForProduction": {
          "type": "boolean"
        },
        "metadataOnly": {
          "type": "boolean"
        },
        "failedCronAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "nextIteration": {
          "type": "integer",
          "format": "int64"
        },
        "nextCleanupIteration": {
          "type": "integer",
          "format": "int64"
        },
        "templateUuid": {
          "type": "string"
        },
        "templateVersion": {
          "type": "string"
        },
        "templateVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "accountId": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "artifactCount": {
          "type": "integer",
          "format": "int64"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactSummary"
          }
        },
        "sample": {
          "type": "boolean"
        },
        "perpetualTaskId": {
          "type": "string"
        },
        "collectionStatus": {
          "type": "string"
        },
        "artifactStreamParameterized": {
          "type": "boolean"
        },
        "collectionEnabled": {
          "type": "boolean"
        },
        "lastIteration": {
          "type": "integer",
          "format": "int64"
        },
        "lastSuccessfulIteration": {
          "type": "integer",
          "format": "int64"
        },
        "maxAttempts": {
          "type": "integer",
          "format": "int64"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ArtifactStreamBinding": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "artifactStreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStreamSummary"
          }
        }
      }
    },
    "ArtifactStreamSummary": {
      "type": "object",
      "properties": {
        "artifactStreamId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lastCollectedArtifact": {
          "type": "string"
        },
        "defaultArtifact": {
          "$ref": "#/definitions/ArtifactSummary"
        }
      }
    },
    "ArtifactSummary": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "uiDisplayName": {
          "type": "string"
        },
        "buildNo": {
          "type": "string"
        }
      }
    },
    "AzureAppDeploymentData": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "resourceGroup": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "deploySlot": {
          "type": "string"
        },
        "deploySlotId": {
          "type": "string"
        },
        "appServicePlanId": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "instanceIp": {
          "type": "string"
        },
        "instanceState": {
          "type": "string"
        }
      }
    },
    "AzureVMInstanceData": {
      "type": "object",
      "properties": {
        "instanceId": {
          "type": "string"
        },
        "publicDnsName": {
          "type": "string"
        },
        "privateDnsName": {
          "type": "string"
        },
        "privateIpAddress": {
          "type": "string"
        }
      }
    },
    "CVConfiguration": {
      "type": "object",
      "required": [
        "accountId",
        "analysisTolerance",
        "appId",
        "connectorId",
        "envId",
        "lastUpdatedAt",
        "name",
        "serviceId",
        "stateType",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "analysisTolerance": {
          "type": "string",
          "enum": ["LOW", "MEDIUM", "HIGH"]
        },
        "customThresholdRefId": {
          "type": "string"
        },
        "enabled24x7": {
          "type": "boolean"
        },
        "comparisonStrategy": {
          "type": "string",
          "enum": ["COMPARE_WITH_PREVIOUS", "COMPARE_WITH_CURRENT", "PREDICTIVE"]
        },
        "contextId": {
          "type": "string"
        },
        "alertEnabled": {
          "type": "boolean"
        },
        "alertThreshold": {
          "type": "number",
          "format": "double"
        },
        "numOfOccurrencesForAlert": {
          "type": "integer",
          "format": "int32"
        },
        "snoozeStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "snoozeEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "connectorName": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "workflowConfig": {
          "type": "boolean"
        }
      }
    },
    "CVEnabledService": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/Service"
        },
        "cvConfig": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CVConfiguration"
          }
        },
        "appName": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        }
      }
    },
    "CapacityReservationSpecificationResponse": {
      "type": "object",
      "properties": {
        "capacityReservationPreference": {
          "type": "string"
        },
        "capacityReservationTarget": {
          "$ref": "#/definitions/CapacityReservationTargetResponse"
        }
      }
    },
    "CapacityReservationTargetResponse": {
      "type": "object",
      "properties": {
        "capacityReservationId": {
          "type": "string"
        },
        "capacityReservationResourceGroupArn": {
          "type": "string"
        }
      }
    },
    "Command": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "commandUnitType": {
          "type": "string",
          "enum": [
            "EXEC",
            "SCP",
            "COPY_CONFIGS",
            "COMMAND",
            "SETUP_ENV",
            "DOCKER_START",
            "DOCKER_STOP",
            "PROCESS_CHECK_RUNNING",
            "PROCESS_CHECK_STOPPED",
            "PORT_CHECK_CLEARED",
            "PORT_CHECK_LISTENING",
            "CODE_DEPLOY",
            "AWS_LAMBDA",
            "AWS_AMI",
            "ECS_SETUP",
            "ECS_SETUP_DAEMON_SCHEDULING_TYPE",
            "KUBERNETES_SETUP",
            "RESIZE",
            "RESIZE_KUBERNETES",
            "DOWNLOAD_ARTIFACT",
            "K8S_DUMMY",
            "SPOTINST_DUMMY",
            "HELM_DUMMY",
            "PCF_DUMMY",
            "AZURE_VMSS_DUMMY",
            "AZURE_WEBAPP",
            "FETCH_INSTANCES_DUMMY",
            "AZURE_ARM",
            "TERRAGRUNT_PROVISION"
          ]
        },
        "commandExecutionStatus": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "RUNNING", "QUEUED", "SKIPPED"]
        },
        "artifactNeeded": {
          "type": "boolean"
        },
        "deploymentType": {
          "type": "string"
        },
        "originEntityId": {
          "type": "string"
        },
        "containerFamily": {
          "type": "string",
          "enum": ["TOMCAT", "JBOSS"]
        },
        "artifactType": {
          "type": "string",
          "enum": [
            "JAR",
            "WAR",
            "TAR",
            "ZIP",
            "NUGET",
            "DOCKER",
            "RPM",
            "AWS_LAMBDA",
            "AWS_CODEDEPLOY",
            "PCF",
            "AMI",
            "AZURE_MACHINE_IMAGE",
            "AZURE_WEBAPP",
            "IIS",
            "OTHER",
            "IIS_APP",
            "IIS_VirtualDirectory"
          ]
        },
        "referenceId": {
          "type": "string"
        },
        "referenceUuid": {
          "type": "string"
        },
        "templateReference": {
          "$ref": "#/definitions/TemplateReference"
        },
        "graph": {
          "$ref": "#/definitions/Graph"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "commandUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandUnit"
          }
        },
        "commandType": {
          "type": "string",
          "enum": ["START", "STOP", "INSTALL", "ENABLE", "DISABLE", "VERIFY", "OTHER", "RESIZE", "SETUP"]
        },
        "templateVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "templateMetadata": {
          "$ref": "#/definitions/TemplateMetadata"
        },
        "accountId": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        }
      }
    },
    "CommandUnit": {
      "type": "object",
      "properties": {
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "name": {
          "type": "string"
        },
        "commandExecutionStatus": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "RUNNING", "QUEUED", "SKIPPED"]
        },
        "commandUnitType": {
          "type": "string",
          "enum": [
            "EXEC",
            "SCP",
            "COPY_CONFIGS",
            "COMMAND",
            "SETUP_ENV",
            "DOCKER_START",
            "DOCKER_STOP",
            "PROCESS_CHECK_RUNNING",
            "PROCESS_CHECK_STOPPED",
            "PORT_CHECK_CLEARED",
            "PORT_CHECK_LISTENING",
            "CODE_DEPLOY",
            "AWS_LAMBDA",
            "AWS_AMI",
            "ECS_SETUP",
            "ECS_SETUP_DAEMON_SCHEDULING_TYPE",
            "KUBERNETES_SETUP",
            "RESIZE",
            "RESIZE_KUBERNETES",
            "DOWNLOAD_ARTIFACT",
            "K8S_DUMMY",
            "SPOTINST_DUMMY",
            "HELM_DUMMY",
            "PCF_DUMMY",
            "AZURE_VMSS_DUMMY",
            "AZURE_WEBAPP",
            "FETCH_INSTANCES_DUMMY",
            "AZURE_ARM",
            "TERRAGRUNT_PROVISION"
          ]
        },
        "artifactNeeded": {
          "type": "boolean"
        },
        "deploymentType": {
          "type": "string"
        }
      }
    },
    "ConfigFile": {
      "type": "object",
      "required": ["appId", "entityType", "lastUpdatedAt", "uuid"],
      "properties": {
        "templateId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "entityId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parentConfigFileId": {
          "type": "string"
        },
        "relativeFilePath": {
          "type": "string"
        },
        "targetToAllEnv": {
          "type": "boolean"
        },
        "defaultVersion": {
          "type": "integer",
          "format": "int32"
        },
        "envIdVersionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EntityVersion"
          }
        },
        "envIdVersionMapString": {
          "type": "string"
        },
        "setAsDefault": {
          "type": "boolean"
        },
        "notes": {
          "type": "string"
        },
        "overridePath": {
          "type": "string"
        },
        "configOverrideType": {
          "type": "string",
          "enum": ["ALL", "INSTANCES", "CUSTOM"]
        },
        "configOverrideExpression": {
          "type": "string"
        },
        "instances": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "overriddenConfigFile": {
          "$ref": "#/definitions/ConfigFile"
        },
        "encrypted": {
          "type": "boolean"
        },
        "encryptedFileId": {
          "type": "string"
        },
        "secretFileName": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "encryptedBy": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "fileUuid": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "checksumType": {
          "type": "string",
          "enum": ["MD5", "SHA1", "SHA256"]
        },
        "checksum": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "settingType": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        }
      }
    },
    "ContextElement": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "elementType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "INFRAMAPPING",
            "SERVICE_TEMPLATE",
            "TAG",
            "SHELL",
            "HOST",
            "INSTANCE",
            "STANDARD",
            "PARAM",
            "PARTITION",
            "OTHER",
            "FORK",
            "CONTAINER_SERVICE",
            "CLUSTER",
            "AWS_LAMBDA_FUNCTION",
            "AMI_SERVICE_SETUP",
            "AMI_SERVICE_DEPLOY",
            "ECS_SERVICE_SETUP",
            "AMI_SWITCH_ROUTES",
            "PCF_SERVICE_SETUP",
            "PCF_SERVICE_DEPLOY",
            "PCF_ROUTE_SWAP_ROLLBACK",
            "PCF_INSTANCE",
            "SPOTINST_SERVICE_SETUP",
            "SPOTINST_SERVICE_DEPLOY",
            "ARTIFACT",
            "ARTIFACT_VARIABLE",
            "HELM_DEPLOY",
            "CLOUD_FORMATION_PROVISION",
            "CLOUD_FORMATION_ROLLBACK",
            "CLOUD_FORMATION_DEPROVISION",
            "TERRAFORM_PROVISION",
            "SHELL_SCRIPT_PROVISION",
            "K8S",
            "TERRAFORM_INHERIT_PLAN",
            "TERRAGRUNT_INHERIT_PLAN",
            "AZURE_VMSS_SETUP",
            "AZURE_WEBAPP_SETUP",
            "HELM_CHART",
            "MANIFEST_VARIABLE"
          ]
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "CopiedTemplateMetadata": {
      "allOf": [
        {
          "$ref": "#/definitions/TemplateMetadata"
        },
        {
          "type": "object",
          "properties": {
            "parentTemplateId": {
              "type": "string"
            },
            "parentTemplateVersion": {
              "type": "integer",
              "format": "int64"
            },
            "parentCommandVersion": {
              "type": "string"
            },
            "parentCommandName": {
              "type": "string"
            },
            "parentCommandStoreName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CpuOptions": {
      "type": "object",
      "properties": {
        "coreCount": {
          "type": "integer",
          "format": "int32"
        },
        "threadsPerCore": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DelegateTaskDetails": {
      "type": "object",
      "properties": {
        "delegateTaskId": {
          "type": "string"
        },
        "taskDescription": {
          "type": "string"
        },
        "selectedDelegateId": {
          "type": "string"
        },
        "selectedDelegateName": {
          "type": "string"
        },
        "selectedDelegateHostName": {
          "type": "string"
        },
        "setupAbstractions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "taskType": {
          "type": "string"
        }
      }
    },
    "EbsInstanceBlockDevice": {
      "type": "object",
      "properties": {
        "attachTime": {
          "type": "string",
          "format": "date-time"
        },
        "deleteOnTermination": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        }
      }
    },
    "EcsContainerDetails": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "taskArn": {
          "type": "string"
        },
        "dockerId": {
          "type": "string"
        },
        "completeDockerId": {
          "type": "string"
        },
        "containerId": {
          "type": "string"
        },
        "containerInstanceId": {
          "type": "string"
        },
        "containerInstanceArn": {
          "type": "string"
        },
        "ecsServiceName": {
          "type": "string"
        }
      }
    },
    "ElasticGpuAssociation": {
      "type": "object",
      "properties": {
        "elasticGpuId": {
          "type": "string"
        },
        "elasticGpuAssociationId": {
          "type": "string"
        },
        "elasticGpuAssociationState": {
          "type": "string"
        },
        "elasticGpuAssociationTime": {
          "type": "string"
        }
      }
    },
    "ElasticInferenceAcceleratorAssociation": {
      "type": "object",
      "properties": {
        "elasticInferenceAcceleratorArn": {
          "type": "string"
        },
        "elasticInferenceAcceleratorAssociationId": {
          "type": "string"
        },
        "elasticInferenceAcceleratorAssociationState": {
          "type": "string"
        },
        "elasticInferenceAcceleratorAssociationTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ElementExecutionSummary": {
      "type": "object",
      "properties": {
        "contextElement": {
          "$ref": "#/definitions/ContextElement"
        },
        "instanceStatusSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceStatusSummary"
          }
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "endTs": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "infraMappingSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfraMappingSummary"
          }
        },
        "infraDefinitionSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfraDefinitionSummary"
          }
        },
        "instancesCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalTime": {
          "type": "integer",
          "format": "int32"
        },
        "avgTime": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EnclaveOptions": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "EntityVersion": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "entityName": {
          "type": "string"
        },
        "changeType": {
          "type": "string",
          "enum": ["CREATED", "UPDATED"]
        },
        "entityUuid": {
          "type": "string"
        },
        "entityParentUuid": {
          "type": "string"
        },
        "entityData": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "Graph": {
      "type": "object",
      "properties": {
        "graphName": {
          "type": "string"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphNode"
          }
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphLink"
          }
        },
        "subworkflows": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Graph"
          }
        }
      }
    },
    "GraphGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "rollback": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "executionSummary": {
          "type": "object"
        },
        "executionDetails": {
          "type": "object"
        },
        "detailsReference": {
          "type": "string"
        },
        "origin": {
          "type": "boolean"
        },
        "executionHistoryCount": {
          "type": "integer",
          "format": "int32"
        },
        "interruptHistoryCount": {
          "type": "integer",
          "format": "int32"
        },
        "hasInspection": {
          "type": "boolean"
        },
        "valid": {
          "type": "boolean"
        },
        "validationMessage": {
          "type": "string"
        },
        "inValidFieldMessages": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "elementStatusSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementExecutionSummary"
          }
        },
        "instanceStatusSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceStatusSummary"
          }
        },
        "templateExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateExpression"
          }
        },
        "variableOverrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "templateVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "templateVersion": {
          "type": "string"
        },
        "importedTemplateDetails": {
          "$ref": "#/definitions/ImportedTemplateDetails"
        },
        "templateMetadata": {
          "$ref": "#/definitions/TemplateMetadata"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "next": {
          "$ref": "#/definitions/GraphNode"
        },
        "group": {
          "$ref": "#/definitions/GraphGroup"
        },
        "delegateTaskId": {
          "type": "string"
        },
        "selectionLogsTrackingForTaskEnabled": {
          "type": "boolean"
        },
        "delegateTasksDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateTaskDetails"
          }
        },
        "selectionLogsTrackingForTasksEnabled": {
          "type": "boolean"
        },
        "elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphNode"
          }
        },
        "executionStrategy": {
          "type": "string",
          "enum": ["SERIAL", "PARALLEL"]
        }
      }
    },
    "GraphLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "GraphNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "rollback": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "executionSummary": {
          "type": "object"
        },
        "executionDetails": {
          "type": "object"
        },
        "detailsReference": {
          "type": "string"
        },
        "origin": {
          "type": "boolean"
        },
        "executionHistoryCount": {
          "type": "integer",
          "format": "int32"
        },
        "interruptHistoryCount": {
          "type": "integer",
          "format": "int32"
        },
        "hasInspection": {
          "type": "boolean"
        },
        "valid": {
          "type": "boolean"
        },
        "validationMessage": {
          "type": "string"
        },
        "inValidFieldMessages": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "elementStatusSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementExecutionSummary"
          }
        },
        "instanceStatusSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceStatusSummary"
          }
        },
        "templateExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateExpression"
          }
        },
        "variableOverrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "templateVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "templateUuid": {
          "type": "string"
        },
        "templateVersion": {
          "type": "string"
        },
        "importedTemplateDetails": {
          "$ref": "#/definitions/ImportedTemplateDetails"
        },
        "templateMetadata": {
          "$ref": "#/definitions/TemplateMetadata"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "next": {
          "$ref": "#/definitions/GraphNode"
        },
        "group": {
          "$ref": "#/definitions/GraphGroup"
        },
        "delegateTaskId": {
          "type": "string"
        },
        "selectionLogsTrackingForTaskEnabled": {
          "type": "boolean"
        },
        "delegateTasksDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateTaskDetails"
          }
        },
        "selectionLogsTrackingForTasksEnabled": {
          "type": "boolean"
        }
      }
    },
    "GroupIdentifier": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        }
      }
    },
    "HarnessImportedTemplateDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ImportedTemplateDetails"
        },
        {
          "type": "object",
          "properties": {
            "commandVersion": {
              "type": "string"
            },
            "commandName": {
              "type": "string"
            },
            "commandStoreName": {
              "type": "string"
            },
            "repoUrl": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "HarnessTagLink": {
      "type": "object",
      "required": ["entityType", "lastUpdatedAt"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "entityId": {
          "type": "string"
        },
        "tagType": {
          "type": "string",
          "enum": ["USER", "HARNESS"]
        },
        "appName": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "HibernationOptions": {
      "type": "object",
      "properties": {
        "configured": {
          "type": "boolean"
        }
      }
    },
    "HostElement": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "publicDns": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "ec2Instance": {
          "$ref": "#/definitions/Instance"
        },
        "pcfElement": {
          "$ref": "#/definitions/PcfInstanceElement"
        },
        "azureVMInstance": {
          "$ref": "#/definitions/AzureVMInstanceData"
        },
        "webAppInstance": {
          "$ref": "#/definitions/AzureAppDeploymentData"
        },
        "name": {
          "type": "string"
        },
        "elementType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "INFRAMAPPING",
            "SERVICE_TEMPLATE",
            "TAG",
            "SHELL",
            "HOST",
            "INSTANCE",
            "STANDARD",
            "PARAM",
            "PARTITION",
            "OTHER",
            "FORK",
            "CONTAINER_SERVICE",
            "CLUSTER",
            "AWS_LAMBDA_FUNCTION",
            "AMI_SERVICE_SETUP",
            "AMI_SERVICE_DEPLOY",
            "ECS_SERVICE_SETUP",
            "AMI_SWITCH_ROUTES",
            "PCF_SERVICE_SETUP",
            "PCF_SERVICE_DEPLOY",
            "PCF_ROUTE_SWAP_ROLLBACK",
            "PCF_INSTANCE",
            "SPOTINST_SERVICE_SETUP",
            "SPOTINST_SERVICE_DEPLOY",
            "ARTIFACT",
            "ARTIFACT_VARIABLE",
            "HELM_DEPLOY",
            "CLOUD_FORMATION_PROVISION",
            "CLOUD_FORMATION_ROLLBACK",
            "CLOUD_FORMATION_DEPROVISION",
            "TERRAFORM_PROVISION",
            "SHELL_SCRIPT_PROVISION",
            "K8S",
            "TERRAFORM_INHERIT_PLAN",
            "TERRAGRUNT_INHERIT_PLAN",
            "AZURE_VMSS_SETUP",
            "AZURE_WEBAPP_SETUP",
            "HELM_CHART",
            "MANIFEST_VARIABLE"
          ]
        }
      }
    },
    "IamInstanceProfile": {
      "type": "object",
      "properties": {
        "arn": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "ImportedTemplateDetails": {
      "type": "object",
      "discriminator": "type"
    },
    "ImportedTemplateMetadata": {
      "allOf": [
        {
          "$ref": "#/definitions/TemplateMetadata"
        },
        {
          "type": "object",
          "properties": {
            "defaultVersion": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "InfraDefinitionSummary": {
      "type": "object",
      "properties": {
        "infraDefinitionId": {
          "type": "string"
        },
        "cloudProviderType": {
          "type": "string",
          "enum": ["PHYSICAL_DATA_CENTER", "AWS", "AZURE", "GCP", "KUBERNETES_CLUSTER", "PCF", "CUSTOM"]
        },
        "deploymentType": {
          "type": "string",
          "enum": [
            "SSH",
            "AWS_CODEDEPLOY",
            "ECS",
            "SPOTINST",
            "KUBERNETES",
            "HELM",
            "AWS_LAMBDA",
            "AMI",
            "WINRM",
            "PCF",
            "AZURE_VMSS",
            "AZURE_WEBAPP",
            "CUSTOM"
          ]
        },
        "cloudProviderName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "InfraMappingSummary": {
      "type": "object",
      "properties": {
        "infraMappingId": {
          "type": "string"
        },
        "computeProviderType": {
          "type": "string"
        },
        "infraMappingType": {
          "type": "string"
        },
        "deploymentType": {
          "type": "string"
        },
        "computeProviderName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "Instance": {
      "type": "object",
      "properties": {
        "amiLaunchIndex": {
          "type": "integer",
          "format": "int32"
        },
        "imageId": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "kernelId": {
          "type": "string"
        },
        "keyName": {
          "type": "string"
        },
        "launchTime": {
          "type": "string",
          "format": "date-time"
        },
        "monitoring": {
          "$ref": "#/definitions/Monitoring"
        },
        "placement": {
          "$ref": "#/definitions/Placement"
        },
        "platform": {
          "type": "string"
        },
        "privateDnsName": {
          "type": "string"
        },
        "privateIpAddress": {
          "type": "string"
        },
        "productCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCode"
          }
        },
        "publicDnsName": {
          "type": "string"
        },
        "publicIpAddress": {
          "type": "string"
        },
        "ramdiskId": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/InstanceState"
        },
        "stateTransitionReason": {
          "type": "string"
        },
        "subnetId": {
          "type": "string"
        },
        "vpcId": {
          "type": "string"
        },
        "architecture": {
          "type": "string"
        },
        "blockDeviceMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceBlockDeviceMapping"
          }
        },
        "clientToken": {
          "type": "string"
        },
        "ebsOptimized": {
          "type": "boolean"
        },
        "enaSupport": {
          "type": "boolean"
        },
        "hypervisor": {
          "type": "string"
        },
        "iamInstanceProfile": {
          "$ref": "#/definitions/IamInstanceProfile"
        },
        "instanceLifecycle": {
          "type": "string"
        },
        "elasticGpuAssociations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElasticGpuAssociation"
          }
        },
        "elasticInferenceAcceleratorAssociations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElasticInferenceAcceleratorAssociation"
          }
        },
        "networkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceNetworkInterface"
          }
        },
        "outpostArn": {
          "type": "string"
        },
        "rootDeviceName": {
          "type": "string"
        },
        "rootDeviceType": {
          "type": "string"
        },
        "securityGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupIdentifier"
          }
        },
        "sourceDestCheck": {
          "type": "boolean"
        },
        "spotInstanceRequestId": {
          "type": "string"
        },
        "sriovNetSupport": {
          "type": "string"
        },
        "stateReason": {
          "$ref": "#/definitions/StateReason"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "virtualizationType": {
          "type": "string"
        },
        "cpuOptions": {
          "$ref": "#/definitions/CpuOptions"
        },
        "capacityReservationId": {
          "type": "string"
        },
        "capacityReservationSpecification": {
          "$ref": "#/definitions/CapacityReservationSpecificationResponse"
        },
        "hibernationOptions": {
          "$ref": "#/definitions/HibernationOptions"
        },
        "licenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LicenseConfiguration"
          }
        },
        "metadataOptions": {
          "$ref": "#/definitions/InstanceMetadataOptionsResponse"
        },
        "enclaveOptions": {
          "$ref": "#/definitions/EnclaveOptions"
        },
        "bootMode": {
          "type": "string"
        }
      }
    },
    "InstanceBlockDeviceMapping": {
      "type": "object",
      "properties": {
        "deviceName": {
          "type": "string"
        },
        "ebs": {
          "$ref": "#/definitions/EbsInstanceBlockDevice"
        }
      }
    },
    "InstanceElement": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "dockerId": {
          "type": "string"
        },
        "host": {
          "$ref": "#/definitions/HostElement"
        },
        "serviceTemplateElement": {
          "$ref": "#/definitions/ServiceTemplateElement"
        },
        "podName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "workloadName": {
          "type": "string"
        },
        "ecsContainerDetails": {
          "$ref": "#/definitions/EcsContainerDetails"
        },
        "newInstance": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "elementType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "INFRAMAPPING",
            "SERVICE_TEMPLATE",
            "TAG",
            "SHELL",
            "HOST",
            "INSTANCE",
            "STANDARD",
            "PARAM",
            "PARTITION",
            "OTHER",
            "FORK",
            "CONTAINER_SERVICE",
            "CLUSTER",
            "AWS_LAMBDA_FUNCTION",
            "AMI_SERVICE_SETUP",
            "AMI_SERVICE_DEPLOY",
            "ECS_SERVICE_SETUP",
            "AMI_SWITCH_ROUTES",
            "PCF_SERVICE_SETUP",
            "PCF_SERVICE_DEPLOY",
            "PCF_ROUTE_SWAP_ROLLBACK",
            "PCF_INSTANCE",
            "SPOTINST_SERVICE_SETUP",
            "SPOTINST_SERVICE_DEPLOY",
            "ARTIFACT",
            "ARTIFACT_VARIABLE",
            "HELM_DEPLOY",
            "CLOUD_FORMATION_PROVISION",
            "CLOUD_FORMATION_ROLLBACK",
            "CLOUD_FORMATION_DEPROVISION",
            "TERRAFORM_PROVISION",
            "SHELL_SCRIPT_PROVISION",
            "K8S",
            "TERRAFORM_INHERIT_PLAN",
            "TERRAGRUNT_INHERIT_PLAN",
            "AZURE_VMSS_SETUP",
            "AZURE_WEBAPP_SETUP",
            "HELM_CHART",
            "MANIFEST_VARIABLE"
          ]
        }
      }
    },
    "InstanceIpv4Prefix": {
      "type": "object",
      "properties": {
        "ipv4Prefix": {
          "type": "string"
        }
      }
    },
    "InstanceIpv6Address": {
      "type": "object",
      "properties": {
        "ipv6Address": {
          "type": "string"
        }
      }
    },
    "InstanceIpv6Prefix": {
      "type": "object",
      "properties": {
        "ipv6Prefix": {
          "type": "string"
        }
      }
    },
    "InstanceMetadataOptionsResponse": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "httpTokens": {
          "type": "string"
        },
        "httpPutResponseHopLimit": {
          "type": "integer",
          "format": "int32"
        },
        "httpEndpoint": {
          "type": "string"
        }
      }
    },
    "InstanceNetworkInterface": {
      "type": "object",
      "properties": {
        "association": {
          "$ref": "#/definitions/InstanceNetworkInterfaceAssociation"
        },
        "attachment": {
          "$ref": "#/definitions/InstanceNetworkInterfaceAttachment"
        },
        "description": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupIdentifier"
          }
        },
        "ipv6Addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceIpv6Address"
          }
        },
        "macAddress": {
          "type": "string"
        },
        "networkInterfaceId": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "privateDnsName": {
          "type": "string"
        },
        "privateIpAddress": {
          "type": "string"
        },
        "privateIpAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstancePrivateIpAddress"
          }
        },
        "sourceDestCheck": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "subnetId": {
          "type": "string"
        },
        "vpcId": {
          "type": "string"
        },
        "interfaceType": {
          "type": "string"
        },
        "ipv4Prefixes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceIpv4Prefix"
          }
        },
        "ipv6Prefixes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceIpv6Prefix"
          }
        }
      }
    },
    "InstanceNetworkInterfaceAssociation": {
      "type": "object",
      "properties": {
        "carrierIp": {
          "type": "string"
        },
        "ipOwnerId": {
          "type": "string"
        },
        "publicDnsName": {
          "type": "string"
        },
        "publicIp": {
          "type": "string"
        }
      }
    },
    "InstanceNetworkInterfaceAttachment": {
      "type": "object",
      "properties": {
        "attachTime": {
          "type": "string",
          "format": "date-time"
        },
        "attachmentId": {
          "type": "string"
        },
        "deleteOnTermination": {
          "type": "boolean"
        },
        "deviceIndex": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "networkCardIndex": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InstancePrivateIpAddress": {
      "type": "object",
      "properties": {
        "association": {
          "$ref": "#/definitions/InstanceNetworkInterfaceAssociation"
        },
        "primary": {
          "type": "boolean"
        },
        "privateDnsName": {
          "type": "string"
        },
        "privateIpAddress": {
          "type": "string"
        }
      }
    },
    "InstanceState": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "InstanceStatusSummary": {
      "type": "object",
      "properties": {
        "instanceElement": {
          "$ref": "#/definitions/InstanceElement"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        }
      }
    },
    "LicenseConfiguration": {
      "type": "object",
      "properties": {
        "licenseConfigurationArn": {
          "type": "string"
        }
      }
    },
    "Monitoring": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        }
      }
    },
    "NameValuePair": {
      "type": "object",
      "required": ["value"],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueType": {
          "type": "string"
        }
      }
    },
    "PcfInstanceElement": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "applicationId": {
          "type": "string"
        },
        "instanceIndex": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "upsize": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "elementType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "INFRAMAPPING",
            "SERVICE_TEMPLATE",
            "TAG",
            "SHELL",
            "HOST",
            "INSTANCE",
            "STANDARD",
            "PARAM",
            "PARTITION",
            "OTHER",
            "FORK",
            "CONTAINER_SERVICE",
            "CLUSTER",
            "AWS_LAMBDA_FUNCTION",
            "AMI_SERVICE_SETUP",
            "AMI_SERVICE_DEPLOY",
            "ECS_SERVICE_SETUP",
            "AMI_SWITCH_ROUTES",
            "PCF_SERVICE_SETUP",
            "PCF_SERVICE_DEPLOY",
            "PCF_ROUTE_SWAP_ROLLBACK",
            "PCF_INSTANCE",
            "SPOTINST_SERVICE_SETUP",
            "SPOTINST_SERVICE_DEPLOY",
            "ARTIFACT",
            "ARTIFACT_VARIABLE",
            "HELM_DEPLOY",
            "CLOUD_FORMATION_PROVISION",
            "CLOUD_FORMATION_ROLLBACK",
            "CLOUD_FORMATION_DEPROVISION",
            "TERRAFORM_PROVISION",
            "SHELL_SCRIPT_PROVISION",
            "K8S",
            "TERRAFORM_INHERIT_PLAN",
            "TERRAGRUNT_INHERIT_PLAN",
            "AZURE_VMSS_SETUP",
            "AZURE_WEBAPP_SETUP",
            "HELM_CHART",
            "MANIFEST_VARIABLE"
          ]
        },
        "newInstance": {
          "type": "boolean"
        }
      }
    },
    "Placement": {
      "type": "object",
      "properties": {
        "availabilityZone": {
          "type": "string"
        },
        "affinity": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "partitionNumber": {
          "type": "integer",
          "format": "int32"
        },
        "hostId": {
          "type": "string"
        },
        "tenancy": {
          "type": "string"
        },
        "spreadDomain": {
          "type": "string"
        },
        "hostResourceGroupArn": {
          "type": "string"
        }
      }
    },
    "ProductCode": {
      "type": "object",
      "properties": {
        "productCodeId": {
          "type": "string"
        },
        "productCodeType": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseCVEnabledService": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CVEnabledService"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Service": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "artifactType": {
          "type": "string",
          "enum": [
            "JAR",
            "WAR",
            "TAR",
            "ZIP",
            "NUGET",
            "DOCKER",
            "RPM",
            "AWS_LAMBDA",
            "AWS_CODEDEPLOY",
            "PCF",
            "AMI",
            "AZURE_MACHINE_IMAGE",
            "AZURE_WEBAPP",
            "IIS",
            "OTHER",
            "IIS_APP",
            "IIS_VirtualDirectory"
          ]
        },
        "deploymentType": {
          "type": "string",
          "enum": [
            "SSH",
            "AWS_CODEDEPLOY",
            "ECS",
            "SPOTINST",
            "KUBERNETES",
            "HELM",
            "AWS_LAMBDA",
            "AMI",
            "WINRM",
            "PCF",
            "AZURE_VMSS",
            "AZURE_WEBAPP",
            "CUSTOM"
          ]
        },
        "serviceId": {
          "type": "string"
        },
        "configMapYaml": {
          "type": "string"
        },
        "helmValueYaml": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "appContainer": {
          "$ref": "#/definitions/AppContainer"
        },
        "configFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigFile"
          }
        },
        "serviceVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceVariable"
          }
        },
        "artifactStreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStream"
          }
        },
        "serviceCommands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCommand"
          }
        },
        "lastDeploymentActivity": {
          "$ref": "#/definitions/Activity"
        },
        "lastProdDeploymentActivity": {
          "$ref": "#/definitions/Activity"
        },
        "setup": {
          "$ref": "#/definitions/Setup"
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "helmVersion": {
          "type": "string",
          "enum": ["V2", "V3"]
        },
        "cfCliVersion": {
          "type": "string",
          "enum": ["V6", "V7"]
        },
        "accountId": {
          "type": "string"
        },
        "artifactStreamIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "artifactStreamBindings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStreamBinding"
          }
        },
        "sample": {
          "type": "boolean"
        },
        "tagLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTagLink"
          }
        },
        "deploymentTypeTemplateId": {
          "type": "string"
        },
        "customDeploymentName": {
          "type": "string"
        },
        "artifactFromManifest": {
          "type": "boolean"
        },
        "pcfV2": {
          "type": "boolean"
        },
        "k8sV2": {
          "type": "boolean"
        }
      }
    },
    "ServiceCommand": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "envIdVersionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EntityVersion"
          }
        },
        "defaultVersion": {
          "type": "integer",
          "format": "int32"
        },
        "targetToAllEnv": {
          "type": "boolean"
        },
        "accountId": {
          "type": "string"
        },
        "command": {
          "$ref": "#/definitions/Command"
        },
        "templateUuid": {
          "type": "string"
        },
        "templateVersion": {
          "type": "string"
        },
        "importedTemplateDetails": {
          "$ref": "#/definitions/ImportedTemplateDetails"
        },
        "templateMetadata": {
          "$ref": "#/definitions/TemplateMetadata"
        }
      }
    },
    "ServiceElement": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "elementType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "INFRAMAPPING",
            "SERVICE_TEMPLATE",
            "TAG",
            "SHELL",
            "HOST",
            "INSTANCE",
            "STANDARD",
            "PARAM",
            "PARTITION",
            "OTHER",
            "FORK",
            "CONTAINER_SERVICE",
            "CLUSTER",
            "AWS_LAMBDA_FUNCTION",
            "AMI_SERVICE_SETUP",
            "AMI_SERVICE_DEPLOY",
            "ECS_SERVICE_SETUP",
            "AMI_SWITCH_ROUTES",
            "PCF_SERVICE_SETUP",
            "PCF_SERVICE_DEPLOY",
            "PCF_ROUTE_SWAP_ROLLBACK",
            "PCF_INSTANCE",
            "SPOTINST_SERVICE_SETUP",
            "SPOTINST_SERVICE_DEPLOY",
            "ARTIFACT",
            "ARTIFACT_VARIABLE",
            "HELM_DEPLOY",
            "CLOUD_FORMATION_PROVISION",
            "CLOUD_FORMATION_ROLLBACK",
            "CLOUD_FORMATION_DEPROVISION",
            "TERRAFORM_PROVISION",
            "SHELL_SCRIPT_PROVISION",
            "K8S",
            "TERRAFORM_INHERIT_PLAN",
            "TERRAGRUNT_INHERIT_PLAN",
            "AZURE_VMSS_SETUP",
            "AZURE_WEBAPP_SETUP",
            "HELM_CHART",
            "MANIFEST_VARIABLE"
          ]
        }
      }
    },
    "ServiceTemplateElement": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "serviceElement": {
          "$ref": "#/definitions/ServiceElement"
        },
        "elementType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "INFRAMAPPING",
            "SERVICE_TEMPLATE",
            "TAG",
            "SHELL",
            "HOST",
            "INSTANCE",
            "STANDARD",
            "PARAM",
            "PARTITION",
            "OTHER",
            "FORK",
            "CONTAINER_SERVICE",
            "CLUSTER",
            "AWS_LAMBDA_FUNCTION",
            "AMI_SERVICE_SETUP",
            "AMI_SERVICE_DEPLOY",
            "ECS_SERVICE_SETUP",
            "AMI_SWITCH_ROUTES",
            "PCF_SERVICE_SETUP",
            "PCF_SERVICE_DEPLOY",
            "PCF_ROUTE_SWAP_ROLLBACK",
            "PCF_INSTANCE",
            "SPOTINST_SERVICE_SETUP",
            "SPOTINST_SERVICE_DEPLOY",
            "ARTIFACT",
            "ARTIFACT_VARIABLE",
            "HELM_DEPLOY",
            "CLOUD_FORMATION_PROVISION",
            "CLOUD_FORMATION_ROLLBACK",
            "CLOUD_FORMATION_DEPROVISION",
            "TERRAFORM_PROVISION",
            "SHELL_SCRIPT_PROVISION",
            "K8S",
            "TERRAFORM_INHERIT_PLAN",
            "TERRAGRUNT_INHERIT_PLAN",
            "AZURE_VMSS_SETUP",
            "AZURE_WEBAPP_SETUP",
            "HELM_CHART",
            "MANIFEST_VARIABLE"
          ]
        }
      }
    },
    "ServiceVariable": {
      "type": "object",
      "required": ["appId", "entityType", "lastUpdatedAt", "uuid"],
      "properties": {
        "templateId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "entityId": {
          "type": "string"
        },
        "parentServiceVariableId": {
          "type": "string"
        },
        "overriddenServiceVariable": {
          "$ref": "#/definitions/ServiceVariable"
        },
        "overrideType": {
          "type": "string",
          "enum": ["ALL", "INSTANCES", "CUSTOM"]
        },
        "instances": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expression": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": ["TEXT", "LB", "ENCRYPTED_TEXT", "ARTIFACT"]
        },
        "allowedList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encryptedValue": {
          "type": "string"
        },
        "secretTextName": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "encryptedBy": {
          "type": "string"
        },
        "artifactStreamSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStreamSummary"
          }
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "settingType": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        }
      }
    },
    "Setup": {
      "type": "object",
      "properties": {
        "setupStatus": {
          "type": "string",
          "enum": ["COMPLETE", "INCOMPLETE"]
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SetupAction"
          }
        }
      }
    },
    "SetupAction": {
      "type": "object",
      "properties": {
        "displayText": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "errorType": {
          "type": "string",
          "enum": ["INFO", "ERROR"]
        }
      }
    },
    "StateReason": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TemplateExpression": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "expression": {
          "type": "string"
        },
        "expressionAllowed": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "TemplateMetadata": {
      "type": "object",
      "discriminator": "type"
    },
    "TemplateReference": {
      "type": "object",
      "properties": {
        "templateUuid": {
          "type": "string"
        },
        "templateVersion": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TriggeredBy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Variable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "runtimeInput": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "fixed": {
          "type": "boolean"
        },
        "allowedValues": {
          "type": "string"
        },
        "allowedList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowMultipleValues": {
          "type": "boolean"
        },
        "artifactStreamSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStreamSummary"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "type": {
          "type": "string",
          "enum": ["TEXT", "NUMBER", "EMAIL", "ENTITY", "ARTIFACT", "MANIFEST"]
        }
      }
    },
    "RestResponseListService": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ProvisionStep": {
      "type": "object",
      "properties": {
        "step": {
          "type": "string"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "RestResponseListProvisionStep": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisionStep"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceGuardLimitDTO": {
      "type": "object",
      "properties": {
        "serviceGuardLimit": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CDModuleLicenseDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ModuleLicenseDTO"
        },
        {
          "type": "object",
          "properties": {
            "cdLicenseType": {
              "type": "string",
              "enum": ["SERVICES", "SERVICE_INSTANCES"]
            },
            "workloads": {
              "type": "integer",
              "format": "int32"
            },
            "serviceInstances": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "CEModuleLicenseDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ModuleLicenseDTO"
        },
        {
          "type": "object",
          "properties": {
            "spendLimit": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "CFModuleLicenseDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ModuleLicenseDTO"
        },
        {
          "type": "object",
          "properties": {
            "numberOfUsers": {
              "type": "integer",
              "format": "int32"
            },
            "numberOfClientMAUs": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      ]
    },
    "CIModuleLicenseDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ModuleLicenseDTO"
        },
        {
          "type": "object",
          "properties": {
            "numberOfCommitters": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "CVModuleLicenseDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ModuleLicenseDTO"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "ModuleLicenseDTO": {
      "type": "object",
      "discriminator": "moduleType",
      "properties": {
        "id": {
          "type": "string"
        },
        "accountIdentifier": {
          "type": "string"
        },
        "moduleType": {
          "type": "string",
          "enum": ["CD", "CI", "CV", "CF", "CE", "CORE", "PMS", "TEMPLATESERVICE"]
        },
        "edition": {
          "type": "string",
          "enum": ["COMMUNITY", "FREE", "TEAM", "ENTERPRISE"]
        },
        "licenseType": {
          "type": "string",
          "enum": ["TRIAL", "PAID"]
        },
        "status": {
          "type": "string",
          "enum": ["ACTIVE", "DELETED", "EXPIRED"]
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "expiryTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseModuleLicenseDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ModuleLicenseDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AccountLicenseDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "moduleLicenses": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ModuleLicenseDTO"
          }
        },
        "allModuleLicenses": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ModuleLicenseDTO"
            }
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseAccountLicenseDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AccountLicenseDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LicenseUpdateInfo": {
      "type": "object",
      "required": ["licenseInfo"],
      "properties": {
        "licenseInfo": {
          "$ref": "#/definitions/LicenseInfo"
        },
        "requiredInfoToComply": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      }
    },
    "AccountSalesContactsInfo": {
      "type": "object",
      "properties": {
        "salesContacts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseActivity": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Activity"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseActivity": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Activity"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Log": {
      "type": "object",
      "required": ["appId", "commandExecutionStatus", "lastUpdatedAt", "logLevel", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "activityId": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "commandUnitName": {
          "type": "string"
        },
        "logLine": {
          "type": "string"
        },
        "linesCount": {
          "type": "integer",
          "format": "int32"
        },
        "logLevel": {
          "type": "string",
          "enum": ["DEBUG", "INFO", "WARN", "ERROR", "FATAL"]
        },
        "commandExecutionStatus": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "RUNNING", "QUEUED", "SKIPPED"]
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseLog": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Log"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseThirdPartyApiCallLog": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThirdPartyApiCallLog"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ThirdPartyApiCallField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["JSON", "XML", "NUMBER", "URL", "TEXT", "TIMESTAMP"]
        }
      }
    },
    "ThirdPartyApiCallLog": {
      "type": "object",
      "properties": {
        "stateExecutionId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "delegateId": {
          "type": "string"
        },
        "delegateTaskId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "request": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThirdPartyApiCallField"
          }
        },
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThirdPartyApiCallField"
          }
        },
        "requestTimeStamp": {
          "type": "integer",
          "format": "int64"
        },
        "responseTimeStamp": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "uuid": {
          "type": "string"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        }
      }
    },
    "CommandUnitDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "commandExecutionStatus": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "RUNNING", "QUEUED", "SKIPPED"]
        },
        "commandUnitType": {
          "type": "string",
          "enum": [
            "COMMAND",
            "JENKINS",
            "GCB",
            "HELM",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "PCF_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_UPDATE_LISTENER",
            "PCF_RESIZE",
            "PCF_MAP_ROUTE",
            "PCF_BG_SWAP_ROUTE",
            "PCF_PLUGIN",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "KUBERNETES",
            "AWS_AMI_SWITCH_ROUTES",
            "AWS_ECS_UPDATE_LISTENER_BG",
            "AWS_ECS_UPDATE_ROUTE_53_DNS_WEIGHT",
            "AWS_ECS_SERVICE_SETUP",
            "AWS_ECS_RUN_TASK_DEPLOY",
            "AWS_ECS_SERVICE_SETUP_ROUTE53",
            "AWS_ECS_SERVICE_SETUP_ELB",
            "AWS_ECS_SERVICE_SETUP_DAEMON",
            "AWS_ECS_SERVICE_ROLLBACK_DAEMON",
            "AWS_ECS_SERVICE_DEPLOY",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_SWAP",
            "AZURE_APP_SERVICE_SLOT_SETUP",
            "AZURE_APP_SERVICE_SLOT_TRAFFIC_SHIFT",
            "AZURE_APP_SERVICE_SLOT_SWAP",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES",
            "AZURE_ARM_DEPLOYMENT",
            "AZURE_BLUEPRINT_DEPLOYMENT",
            "TERRAGRUNT_PROVISION"
          ]
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        }
      }
    },
    "RestResponseListCommandUnitDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandUnitDetails"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AlertFilter": {
      "type": "object",
      "properties": {
        "alertType": {
          "type": "string",
          "enum": [
            "ApprovalNeeded",
            "ManualInterventionNeeded",
            "NoActiveDelegates",
            "NoInstalledDelegates",
            "DelegatesDown",
            "DelegatesScalingGroupDownAlert",
            "DelegateProfileError",
            "NoEligibleDelegates",
            "PerpetualTaskAlert",
            "InvalidKMS",
            "GitSyncError",
            "GitConnectionError",
            "INVALID_SMTP_CONFIGURATION",
            "EMAIL_NOT_SENT_ALERT",
            "USERGROUP_SYNC_FAILED",
            "USAGE_LIMIT_EXCEEDED",
            "INSTANCE_USAGE_APPROACHING_LIMIT",
            "RESOURCE_USAGE_APPROACHING_LIMIT",
            "DEPLOYMENT_RATE_APPROACHING_LIMIT",
            "SETTING_ATTRIBUTE_VALIDATION_FAILED",
            "ARTIFACT_COLLECTION_FAILED",
            "CONTINUOUS_VERIFICATION_ALERT",
            "CONTINUOUS_VERIFICATION_DATA_COLLECTION_ALERT",
            "MANIFEST_COLLECTION_FAILED",
            "DEPLOYMENT_FREEZE_EVENT"
          ]
        },
        "conditions": {
          "$ref": "#/definitions/Conditions"
        }
      }
    },
    "AlertNotificationRule": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "accountId": {
          "type": "string"
        },
        "alertCategory": {
          "type": "string",
          "enum": ["All", "Setup", "Approval", "ManualIntervention", "ContinuousVerification"]
        },
        "alertFilter": {
          "$ref": "#/definitions/AlertFilter"
        },
        "userGroupsToNotify": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "CVAlertFilters": {
      "type": "object",
      "properties": {
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "envIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cvConfigIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alertMinThreshold": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "Conditions": {
      "type": "object",
      "properties": {
        "operator": {
          "type": "string",
          "enum": ["MATCHING", "NOT_MATCHING"]
        },
        "manualInterventionFilters": {
          "$ref": "#/definitions/ManualInterventionAlertFilters"
        },
        "cvAlertFilters": {
          "$ref": "#/definitions/CVAlertFilters"
        }
      }
    },
    "ManualInterventionAlertFilters": {
      "type": "object",
      "properties": {
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "envIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseListAlertNotificationRule": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertNotificationRule"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "NotificationRulesStatus": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "RestResponseNotificationRulesStatus": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/NotificationRulesStatus"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseAlertNotificationRule": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AlertNotificationRule"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AccountPermissions": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "LOGGED_IN",
              "DELEGATE",
              "NONE",
              "APP",
              "ALL_APP_ENTITIES",
              "ENV",
              "SERVICE",
              "WORKFLOW",
              "PIPELINE",
              "DEPLOYMENT",
              "APPLICATION_CREATE_DELETE",
              "USER_PERMISSION_MANAGEMENT",
              "ACCOUNT_MANAGEMENT",
              "PROVISIONER",
              "TEMPLATE_MANAGEMENT",
              "APP_TEMPLATE",
              "USER_PERMISSION_READ",
              "AUDIT_VIEWER",
              "TAG_MANAGEMENT",
              "CE_ADMIN",
              "CE_VIEWER",
              "MANAGE_CLOUD_PROVIDERS",
              "MANAGE_CONNECTORS",
              "MANAGE_APPLICATIONS",
              "MANAGE_APPLICATION_STACKS",
              "MANAGE_DELEGATES",
              "MANAGE_ALERT_NOTIFICATION_RULES",
              "MANAGE_DELEGATE_PROFILES",
              "MANAGE_CONFIG_AS_CODE",
              "MANAGE_SECRETS",
              "MANAGE_SECRET_MANAGERS",
              "MANAGE_SSH_AND_WINRM",
              "MANAGE_AUTHENTICATION_SETTINGS",
              "MANAGE_USER_AND_USER_GROUPS_AND_API_KEYS",
              "VIEW_USER_AND_USER_GROUPS_AND_API_KEYS",
              "MANAGE_IP_WHITELIST",
              "MANAGE_IP_WHITELISTING",
              "MANAGE_DEPLOYMENT_FREEZES",
              "ALLOW_DEPLOYMENTS_DURING_FREEZE",
              "MANAGE_PIPELINE_GOVERNANCE_STANDARDS",
              "MANAGE_API_KEYS",
              "MANAGE_TAGS",
              "MANAGE_ACCOUNT_DEFAULTS",
              "MANAGE_CUSTOM_DASHBOARDS",
              "CREATE_CUSTOM_DASHBOARDS",
              "MANAGE_RESTRICTED_ACCESS"
            ]
          }
        }
      }
    },
    "ApiKeyEntry": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroup"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "encryptedKey": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "decryptedKey": {
          "type": "string"
        },
        "hashOfKey": {
          "type": "string"
        },
        "sha256Hash": {
          "type": "string"
        }
      }
    },
    "AppPermission": {
      "type": "object",
      "properties": {
        "permissionType": {
          "type": "string",
          "enum": [
            "ACCOUNT",
            "LOGGED_IN",
            "DELEGATE",
            "NONE",
            "APP",
            "ALL_APP_ENTITIES",
            "ENV",
            "SERVICE",
            "WORKFLOW",
            "PIPELINE",
            "DEPLOYMENT",
            "APPLICATION_CREATE_DELETE",
            "USER_PERMISSION_MANAGEMENT",
            "ACCOUNT_MANAGEMENT",
            "PROVISIONER",
            "TEMPLATE_MANAGEMENT",
            "APP_TEMPLATE",
            "USER_PERMISSION_READ",
            "AUDIT_VIEWER",
            "TAG_MANAGEMENT",
            "CE_ADMIN",
            "CE_VIEWER",
            "MANAGE_CLOUD_PROVIDERS",
            "MANAGE_CONNECTORS",
            "MANAGE_APPLICATIONS",
            "MANAGE_APPLICATION_STACKS",
            "MANAGE_DELEGATES",
            "MANAGE_ALERT_NOTIFICATION_RULES",
            "MANAGE_DELEGATE_PROFILES",
            "MANAGE_CONFIG_AS_CODE",
            "MANAGE_SECRETS",
            "MANAGE_SECRET_MANAGERS",
            "MANAGE_SSH_AND_WINRM",
            "MANAGE_AUTHENTICATION_SETTINGS",
            "MANAGE_USER_AND_USER_GROUPS_AND_API_KEYS",
            "VIEW_USER_AND_USER_GROUPS_AND_API_KEYS",
            "MANAGE_IP_WHITELIST",
            "MANAGE_IP_WHITELISTING",
            "MANAGE_DEPLOYMENT_FREEZES",
            "ALLOW_DEPLOYMENTS_DURING_FREEZE",
            "MANAGE_PIPELINE_GOVERNANCE_STANDARDS",
            "MANAGE_API_KEYS",
            "MANAGE_TAGS",
            "MANAGE_ACCOUNT_DEFAULTS",
            "MANAGE_CUSTOM_DASHBOARDS",
            "CREATE_CUSTOM_DASHBOARDS",
            "MANAGE_RESTRICTED_ACCESS"
          ]
        },
        "appFilter": {
          "$ref": "#/definitions/GenericEntityFilter"
        },
        "entityFilter": {
          "$ref": "#/definitions/Filter"
        },
        "actions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ALL",
              "CREATE",
              "READ",
              "UPDATE",
              "DELETE",
              "EXECUTE",
              "EXECUTE_WORKFLOW",
              "EXECUTE_PIPELINE",
              "EXECUTE_WORKFLOW_ROLLBACK",
              "DEFAULT"
            ]
          }
        }
      }
    },
    "EnvFilter": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "filterTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Filter": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "ids": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GenericEntityFilter": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "filterType": {
          "type": "string"
        }
      }
    },
    "NotificationSettings": {
      "type": "object",
      "required": ["emailAddresses", "slackConfig"],
      "properties": {
        "useIndividualEmails": {
          "type": "boolean"
        },
        "sendMailToNewMembers": {
          "type": "boolean"
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "slackConfig": {
          "$ref": "#/definitions/SlackNotificationSetting"
        },
        "pagerDutyIntegrationKey": {
          "type": "string"
        },
        "microsoftTeamsWebhookUrl": {
          "type": "string"
        }
      }
    },
    "RateLimitProtection": {
      "type": "object",
      "properties": {
        "incorrectAttemptTimestamps": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "lastNotificationSentToUserAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastNotificationSentToSecOpsAt": {
          "type": "integer",
          "format": "int64"
        },
        "totalIncorrectAttempts": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseApiKeyEntry": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ApiKeyEntry"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SlackNotificationSetting": {
      "type": "object",
      "required": ["outgoingWebhookUrl"],
      "properties": {
        "name": {
          "type": "string"
        },
        "outgoingWebhookUrl": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "externalUserId": {
          "type": "string"
        },
        "givenName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "userGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroup"
          }
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "pendingAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "supportAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "lastLogin": {
          "type": "integer",
          "format": "int64"
        },
        "firstLogin": {
          "type": "boolean"
        },
        "password": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "token": {
          "type": "string"
        },
        "twoFactorJwtToken": {
          "type": "string"
        },
        "emailVerified": {
          "type": "boolean"
        },
        "passwordExpired": {
          "type": "boolean"
        },
        "userLocked": {
          "type": "boolean"
        },
        "statsFetchedOn": {
          "type": "integer",
          "format": "int64"
        },
        "lastAccountId": {
          "type": "string"
        },
        "defaultAccountId": {
          "type": "string"
        },
        "lastAppId": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "imported": {
          "type": "boolean"
        },
        "userLockoutInfo": {
          "$ref": "#/definitions/UserLockoutInfo"
        },
        "rateLimitProtection": {
          "$ref": "#/definitions/RateLimitProtection"
        },
        "twoFactorAuthenticationEnabled": {
          "type": "boolean"
        },
        "twoFactorAuthenticationMechanism": {
          "type": "string",
          "enum": ["TOTP"]
        },
        "oauthProvider": {
          "type": "string"
        },
        "reportedSegmentTracks": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "utmInfo": {
          "$ref": "#/definitions/UtmInfo"
        },
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserGroup": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "linkedSsoType": {
          "type": "string",
          "enum": ["SAML", "LDAP", "OAUTH"]
        },
        "linkedSsoId": {
          "type": "string"
        },
        "linkedSsoDisplayName": {
          "type": "string"
        },
        "ssoGroupId": {
          "type": "string"
        },
        "ssoGroupName": {
          "type": "string"
        },
        "importedByScim": {
          "type": "boolean"
        },
        "accountId": {
          "type": "string"
        },
        "memberIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "appPermissions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AppPermission"
          }
        },
        "accountPermissions": {
          "$ref": "#/definitions/AccountPermissions"
        },
        "notificationSettings": {
          "$ref": "#/definitions/NotificationSettings"
        },
        "ssoLinked": {
          "type": "boolean"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "UserLockoutInfo": {
      "type": "object",
      "properties": {
        "numberOfFailedLoginAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "userLockedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UtmInfo": {
      "type": "object",
      "properties": {
        "utmSource": {
          "type": "string"
        },
        "utmContent": {
          "type": "string"
        },
        "utmMedium": {
          "type": "string"
        },
        "utmTerm": {
          "type": "string"
        },
        "utmCampaign": {
          "type": "string"
        }
      }
    },
    "WorkflowFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/Filter"
        },
        {
          "type": "object",
          "properties": {
            "filterTypes": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "RestResponsePageResponseApiKeyEntry": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiKeyEntry"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapStringObject": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseAppContainer": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AppContainer"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseAppContainer": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppContainer"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ApiKeyInfo": {
      "type": "object",
      "properties": {
        "appKeyId": {
          "type": "string"
        },
        "apiKeyName": {
          "type": "string"
        }
      }
    },
    "Application": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Environment"
          }
        },
        "setup": {
          "$ref": "#/definitions/Setup"
        },
        "recentExecutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowExecution"
          }
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notification"
          }
        },
        "nextDeploymentOn": {
          "type": "integer",
          "format": "int64"
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "yamlGitConfig": {
          "$ref": "#/definitions/YamlGitConfig"
        },
        "defaults": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sample": {
          "type": "boolean"
        },
        "isManualTriggerAuthorized": {
          "type": "boolean"
        },
        "tagLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTagLink"
          }
        }
      }
    },
    "ApplicationManifest": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "accountId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "VALUES",
            "KUSTOMIZE_PATCHES",
            "K8S_MANIFEST",
            "PCF_OVERRIDE",
            "AZURE_APP_SERVICE_MANIFEST",
            "AZURE_APP_SETTINGS_OVERRIDE",
            "AZURE_CONN_STRINGS_OVERRIDE",
            "HELM_CHART_OVERRIDE",
            "OC_PARAMS"
          ]
        },
        "storeType": {
          "type": "string",
          "enum": [
            "Local",
            "Remote",
            "HelmSourceRepo",
            "HelmChartRepo",
            "KustomizeSourceRepo",
            "OC_TEMPLATES",
            "CUSTOM",
            "CUSTOM_OPENSHIFT_TEMPLATE",
            "VALUES_YAML_FROM_HELM_REPO"
          ]
        },
        "gitFileConfig": {
          "$ref": "#/definitions/GitFileConfig"
        },
        "helmChartConfig": {
          "$ref": "#/definitions/HelmChartConfig"
        },
        "kustomizeConfig": {
          "$ref": "#/definitions/KustomizeConfig"
        },
        "customSourceConfig": {
          "$ref": "#/definitions/CustomSourceConfig"
        },
        "helmCommandFlag": {
          "$ref": "#/definitions/HelmCommandFlagConfig"
        },
        "helmValuesYamlFilePaths": {
          "type": "string"
        },
        "pollForChanges": {
          "type": "boolean"
        },
        "serviceName": {
          "type": "string"
        },
        "collectionStatus": {
          "type": "string",
          "enum": ["UNSTABLE", "COLLECTING", "STABLE"]
        },
        "perpetualTaskId": {
          "type": "string"
        },
        "failedAttempts": {
          "type": "integer",
          "format": "int32"
        },
        "skipVersioningForAllK8sObjects": {
          "type": "boolean"
        },
        "validationMessage": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApplicationManifestSummary": {
      "type": "object",
      "properties": {
        "appManifestId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "lastCollectedManifest": {
          "$ref": "#/definitions/ManifestSummary"
        },
        "defaultManifest": {
          "$ref": "#/definitions/ManifestSummary"
        }
      }
    },
    "Artifact": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "artifactStreamId": {
          "type": "string"
        },
        "artifactSourceName": {
          "type": "string"
        },
        "artifactStreamName": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        },
        "serviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "artifactFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactFile"
          }
        },
        "artifactFileMetadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactFileMetadata"
          }
        },
        "status": {
          "type": "string",
          "enum": ["NEW", "RUNNING", "QUEUED", "WAITING", "READY", "APPROVED", "REJECTED", "ABORTED", "FAILED", "ERROR"]
        },
        "description": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "contentStatus": {
          "type": "string",
          "enum": ["METADATA_ONLY", "NOT_DOWNLOADED", "DOWNLOADING", "DOWNLOADED", "DELETED", "FAILED"]
        },
        "source": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "settingId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "artifactStreamType": {
          "type": "string"
        },
        "uiDisplayName": {
          "type": "string"
        },
        "buildIdentity": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "buildFullDisplayName": {
          "type": "string"
        },
        "artifactFileSize": {
          "type": "integer",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "buildNo": {
          "type": "string"
        },
        "artifactPath": {
          "type": "string"
        },
        "bucketName": {
          "type": "string"
        },
        "duplicate": {
          "type": "boolean"
        }
      }
    },
    "ArtifactFile": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "fileUuid": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "checksumType": {
          "type": "string",
          "enum": ["MD5", "SHA1", "SHA256"]
        },
        "checksum": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "ArtifactFileMetadata": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ArtifactStreamMetadata": {
      "type": "object",
      "properties": {
        "artifactStreamId": {
          "type": "string"
        },
        "runtimeValues": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ArtifactVariable": {
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "entityId": {
          "type": "string"
        },
        "overriddenArtifactVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactVariable"
          }
        },
        "artifactStreamSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStreamSummary"
          }
        },
        "displayInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "workflowIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uiDisplayName": {
          "type": "string"
        },
        "artifactStreamMetadata": {
          "$ref": "#/definitions/ArtifactStreamMetadata"
        },
        "lastDeployedArtifactInfo": {
          "$ref": "#/definitions/LastDeployedArtifactInformation"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "runtimeInput": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "fixed": {
          "type": "boolean"
        },
        "allowedValues": {
          "type": "string"
        },
        "allowedList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowMultipleValues": {
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "type": {
          "type": "string",
          "enum": ["TEXT", "NUMBER", "EMAIL", "ENTITY", "ARTIFACT", "MANIFEST"]
        }
      }
    },
    "AwsAmiInfrastructure": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "region": {
              "type": "string"
            },
            "autoScalingGroupName": {
              "type": "string"
            },
            "classicLoadBalancers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "targetGroupArns": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "hostNameConvention": {
              "type": "string"
            },
            "stageClassicLoadBalancers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stageTargetGroupArns": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "amiDeploymentType": {
              "type": "string",
              "enum": ["AWS_ASG", "SPOTINST"]
            },
            "spotinstElastiGroupJson": {
              "type": "string"
            },
            "spotinstCloudProvider": {
              "type": "string"
            },
            "asgIdentifiesWorkload": {
              "type": "boolean"
            },
            "useTrafficShift": {
              "type": "boolean"
            },
            "expressions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "AwsEcsInfrastructure": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "region": {
              "type": "string"
            },
            "vpcId": {
              "type": "string"
            },
            "subnetIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "securityGroupIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "assignPublicIp": {
              "type": "boolean"
            },
            "executionRole": {
              "type": "string"
            },
            "launchType": {
              "type": "string"
            },
            "clusterName": {
              "type": "string"
            },
            "expressions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "AwsInstanceFilter": {
      "type": "object",
      "properties": {
        "vpcIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        }
      }
    },
    "AwsInstanceInfrastructure": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "region": {
              "type": "string"
            },
            "hostConnectionAttrs": {
              "type": "string"
            },
            "loadBalancerId": {
              "type": "string"
            },
            "loadBalancerName": {
              "type": "string"
            },
            "usePublicDns": {
              "type": "boolean"
            },
            "hostConnectionType": {
              "type": "string"
            },
            "awsInstanceFilter": {
              "$ref": "#/definitions/AwsInstanceFilter"
            },
            "autoScalingGroupName": {
              "type": "string"
            },
            "setDesiredCapacity": {
              "type": "boolean"
            },
            "desiredCapacity": {
              "type": "integer",
              "format": "int32"
            },
            "hostNameConvention": {
              "type": "string"
            },
            "provisionInstances": {
              "type": "boolean"
            },
            "expressions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "AwsLambdaExecutionSummary": {
      "type": "object",
      "properties": {
        "functionMeta": {
          "$ref": "#/definitions/FunctionMeta"
        },
        "success": {
          "type": "boolean"
        }
      }
    },
    "AwsLambdaInfrastructure": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "region": {
              "type": "string"
            },
            "vpcId": {
              "type": "string"
            },
            "subnetIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "securityGroupIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "role": {
              "type": "string"
            },
            "expressions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "AzureInstanceInfrastructure": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroup": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AzureTag"
              }
            },
            "hostConnectionAttrs": {
              "type": "string"
            },
            "winRmConnectionAttributes": {
              "type": "string"
            },
            "usePublicDns": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "AzureKubernetesService": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "clusterName": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "releaseName": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroup": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AzureTag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "AzureVMSSInfra": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "baseVMSSName": {
              "type": "string"
            },
            "userName": {
              "type": "string"
            },
            "resourceGroupName": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "passwordSecretTextName": {
              "type": "string"
            },
            "hostConnectionAttrs": {
              "type": "string"
            },
            "vmssAuthType": {
              "type": "string",
              "enum": ["PASSWORD", "SSH_PUBLIC_KEY"]
            },
            "vmssDeploymentType": {
              "type": "string",
              "enum": ["NATIVE_VMSS", "SPOTINST"]
            }
          }
        }
      ]
    },
    "AzureWebAppInfra": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "subscriptionId": {
              "type": "string"
            },
            "resourceGroup": {
              "type": "string"
            },
            "expressions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "BasicOrchestrationWorkflow": {
      "allOf": [
        {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        {
          "type": "object",
          "properties": {
            "graph": {
              "$ref": "#/definitions/Graph"
            },
            "preDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisioners": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisionersReverse": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackWorkflowPhaseIdMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "workflowPhases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "postDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "failureStrategies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategy"
              }
            },
            "systemVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "derivedVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            }
          }
        }
      ]
    },
    "BlueGreenOrchestrationWorkflow": {
      "allOf": [
        {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        {
          "type": "object",
          "properties": {
            "graph": {
              "$ref": "#/definitions/Graph"
            },
            "preDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisioners": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisionersReverse": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackWorkflowPhaseIdMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "workflowPhases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "postDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "failureStrategies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategy"
              }
            },
            "systemVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "derivedVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            }
          }
        }
      ]
    },
    "BuildExecutionSummary": {
      "type": "object",
      "properties": {
        "artifactStreamId": {
          "type": "string"
        },
        "artifactSource": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        },
        "buildUrl": {
          "type": "string"
        },
        "buildName": {
          "type": "string"
        },
        "metadata": {
          "type": "string"
        }
      }
    },
    "BuildWorkflow": {
      "allOf": [
        {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        {
          "type": "object",
          "properties": {
            "graph": {
              "$ref": "#/definitions/Graph"
            },
            "preDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisioners": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisionersReverse": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackWorkflowPhaseIdMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "workflowPhases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "postDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "failureStrategies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategy"
              }
            },
            "systemVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "derivedVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            }
          }
        }
      ]
    },
    "CanaryOrchestrationWorkflow": {
      "allOf": [
        {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        {
          "type": "object",
          "properties": {
            "graph": {
              "$ref": "#/definitions/Graph"
            },
            "preDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisioners": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisionersReverse": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackWorkflowPhaseIdMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "workflowPhases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "postDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "failureStrategies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategy"
              }
            },
            "systemVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "derivedVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            }
          }
        }
      ]
    },
    "CodeDeployInfrastructure": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "region": {
              "type": "string"
            },
            "applicationName": {
              "type": "string"
            },
            "deploymentGroup": {
              "type": "string"
            },
            "deploymentConfig": {
              "type": "string"
            },
            "hostNameConvention": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ConcurrencyStrategy": {
      "type": "object",
      "required": ["holdingScope", "resourceUnit", "strategy", "unitType"],
      "properties": {
        "unitType": {
          "type": "string",
          "enum": ["INFRA", "CUSTOM", "NONE"]
        },
        "holdingScope": {
          "type": "string",
          "enum": ["PIPELINE", "WORKFLOW", "PHASE", "PHASE_SECTION", "NEXT_STEP"]
        },
        "strategy": {
          "type": "string",
          "enum": ["ASAP", "FIFO"]
        },
        "resourceUnit": {
          "type": "string"
        },
        "notificationGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notifyTriggeredByUser": {
          "type": "boolean"
        }
      }
    },
    "ContainerInfo": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "containerId": {
          "type": "string"
        },
        "ec2Instance": {
          "$ref": "#/definitions/Instance"
        },
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE"]
        },
        "podName": {
          "type": "string"
        },
        "workloadName": {
          "type": "string"
        },
        "newContainer": {
          "type": "boolean"
        },
        "ecsContainerDetails": {
          "$ref": "#/definitions/EcsContainerDetails"
        },
        "containerTasksReachable": {
          "type": "boolean"
        },
        "releaseName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "CountsByStatuses": {
      "type": "object",
      "properties": {
        "success": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "inprogress": {
          "type": "integer",
          "format": "int32"
        },
        "queued": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CustomInfrastructure": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "infraVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NameValuePair"
              }
            },
            "deploymentTypeTemplateVersion": {
              "type": "string"
            },
            "customDeploymentName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomOrchestrationWorkflow": {
      "allOf": [
        {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        {
          "type": "object",
          "properties": {
            "graph": {
              "$ref": "#/definitions/Graph"
            }
          }
        }
      ]
    },
    "CustomSourceConfig": {
      "type": "object",
      "properties": {
        "script": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "delegateSelectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DelegateMetaInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        }
      }
    },
    "DirectKubernetesInfrastructure": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "clusterName": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "releaseName": {
              "type": "string"
            },
            "expressions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "EcsBlueGreenOrchestrationWorkflow": {
      "allOf": [
        {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        {
          "type": "object",
          "properties": {
            "graph": {
              "$ref": "#/definitions/Graph"
            },
            "preDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisioners": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisionersReverse": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackWorkflowPhaseIdMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "workflowPhases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "postDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "failureStrategies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategy"
              }
            },
            "systemVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "derivedVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "ecsBGType": {
              "type": "string"
            }
          }
        }
      ]
    },
    "EnvSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "environmentType": {
          "type": "string",
          "enum": ["PROD", "NON_PROD", "ALL"]
        }
      }
    },
    "Environment": {
      "type": "object",
      "required": ["appId", "environmentType", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "configMapYaml": {
          "type": "string"
        },
        "helmValueYaml": {
          "type": "string"
        },
        "configMapYamlByServiceTemplateId": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "helmValueYamlByServiceTemplateId": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "environmentType": {
          "type": "string",
          "enum": ["PROD", "NON_PROD", "ALL"]
        },
        "serviceTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplate"
          }
        },
        "configFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigFile"
          }
        },
        "setup": {
          "$ref": "#/definitions/Setup"
        },
        "infrastructureDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfrastructureDefinition"
          }
        },
        "infraDefinitionsCount": {
          "type": "integer",
          "format": "int32"
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "accountId": {
          "type": "string"
        },
        "sample": {
          "type": "boolean"
        },
        "tagLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTagLink"
          }
        }
      }
    },
    "ExecutionArgs": {
      "type": "object",
      "properties": {
        "workflowType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        },
        "serviceId": {
          "type": "string"
        },
        "commandName": {
          "type": "string"
        },
        "executionStrategy": {
          "type": "string",
          "enum": ["SERIAL", "PARALLEL"]
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "artifactIdNames": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "orchestrationId": {
          "type": "string"
        },
        "serviceInstances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceInstance"
          }
        },
        "serviceInstanceIdNames": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "executionCredential": {
          "$ref": "#/definitions/ExecutionCredential"
        },
        "errorStrategy": {
          "type": "string",
          "enum": ["CONTINUE", "FAIL", "PAUSE", "RETRY"]
        },
        "triggeredFromPipeline": {
          "type": "boolean"
        },
        "pipelineId": {
          "type": "string"
        },
        "pipelinePhaseElementId": {
          "type": "string"
        },
        "pipelinePhaseParallelIndex": {
          "type": "integer",
          "format": "int32"
        },
        "stageName": {
          "type": "string"
        },
        "workflowVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "notes": {
          "type": "string"
        },
        "triggeredBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdByType": {
          "type": "string",
          "enum": ["USER", "API_KEY", "TRIGGER"]
        },
        "triggeringApiKeyId": {
          "type": "string"
        },
        "excludeHostsWithSameArtifact": {
          "type": "boolean"
        },
        "notifyTriggeredUserOnly": {
          "type": "boolean"
        },
        "artifactVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactVariable"
          }
        },
        "targetToSpecificHosts": {
          "type": "boolean"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "continueWithDefaultValues": {
          "type": "boolean"
        },
        "helmCharts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HelmChart"
          }
        },
        "manifestVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManifestVariable"
          }
        },
        "helmChartIdNames": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ExecutionCredential": {
      "type": "object",
      "properties": {
        "executionType": {
          "type": "string",
          "enum": ["SSH"]
        }
      }
    },
    "ExecutionDataValue": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      }
    },
    "FailureCriteria": {
      "type": "object",
      "properties": {
        "failureThresholdPercentage": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "FailureStrategy": {
      "type": "object",
      "required": ["failureTypes"],
      "properties": {
        "failureTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EXPIRED",
              "DELEGATE_PROVISIONING",
              "CONNECTIVITY",
              "AUTHENTICATION",
              "VERIFICATION_FAILURE",
              "APPLICATION_ERROR",
              "AUTHORIZATION_ERROR",
              "TIMEOUT_ERROR"
            ]
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "executionScope": {
          "type": "string",
          "enum": ["WORKFLOW", "WORKFLOW_PHASE"]
        },
        "repairActionCode": {
          "type": "string",
          "enum": [
            "MANUAL_INTERVENTION",
            "ROLLBACK_WORKFLOW",
            "ROLLBACK_PROVISIONER_AFTER_PHASES",
            "ROLLBACK_PHASE",
            "IGNORE",
            "RETRY",
            "END_EXECUTION",
            "CONTINUE_WITH_DEFAULTS",
            "ABORT_WORKFLOW_EXECUTION"
          ]
        },
        "retryCount": {
          "type": "integer",
          "format": "int32"
        },
        "retryIntervals": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "repairActionCodeAfterRetry": {
          "type": "string",
          "enum": [
            "MANUAL_INTERVENTION",
            "ROLLBACK_WORKFLOW",
            "ROLLBACK_PROVISIONER_AFTER_PHASES",
            "ROLLBACK_PHASE",
            "IGNORE",
            "RETRY",
            "END_EXECUTION",
            "CONTINUE_WITH_DEFAULTS",
            "ABORT_WORKFLOW_EXECUTION"
          ]
        },
        "failureCriteria": {
          "$ref": "#/definitions/FailureCriteria"
        },
        "specificSteps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "manualInterventionTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "actionAfterTimeout": {
          "type": "string",
          "enum": [
            "ABORT",
            "ABORT_ALL",
            "PAUSE",
            "PAUSE_FOR_INPUTS",
            "PAUSE_ALL",
            "RESUME",
            "RESUME_ALL",
            "RETRY",
            "IGNORE",
            "WAITING_FOR_MANUAL_INTERVENTION",
            "MARK_FAILED",
            "MARK_SUCCESS",
            "ROLLBACK",
            "ROLLBACK_PROVISIONER_AFTER_PHASES",
            "NEXT_STEP",
            "END_EXECUTION",
            "ROLLBACK_DONE",
            "MARK_EXPIRED",
            "CONTINUE_WITH_DEFAULTS",
            "CONTINUE_PIPELINE_STAGE"
          ]
        }
      }
    },
    "FunctionMeta": {
      "type": "object",
      "properties": {
        "functionName": {
          "type": "string"
        },
        "functionArn": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "GitFileConfig": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string"
        },
        "commitId": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "repoName": {
          "type": "string"
        },
        "filePathList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceSpecFilePath": {
          "type": "string"
        },
        "taskSpecFilePath": {
          "type": "string"
        },
        "useBranch": {
          "type": "boolean"
        },
        "useInlineServiceDefinition": {
          "type": "boolean"
        },
        "connectorName": {
          "type": "string"
        }
      }
    },
    "GoogleKubernetesEngine": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "clusterName": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "releaseName": {
              "type": "string"
            },
            "expressions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "HelmChart": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "applicationManifestId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "appVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "HelmChartConfig": {
      "type": "object",
      "properties": {
        "connectorId": {
          "type": "string"
        },
        "chartName": {
          "type": "string"
        },
        "chartVersion": {
          "type": "string"
        },
        "chartUrl": {
          "type": "string"
        },
        "connectorName": {
          "type": "string"
        },
        "basePath": {
          "type": "string"
        }
      }
    },
    "HelmChartInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "repoUrl": {
          "type": "string"
        }
      }
    },
    "HelmCommandFlagConfig": {
      "type": "object",
      "required": ["valueMap"],
      "properties": {
        "valueMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "HelmExecutionSummary": {
      "type": "object",
      "properties": {
        "helmChartInfo": {
          "$ref": "#/definitions/HelmChartInfo"
        },
        "releaseName": {
          "type": "string"
        },
        "containerInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerInfo"
          }
        }
      }
    },
    "Host": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "envId": {
          "type": "string"
        },
        "serviceTemplateId": {
          "type": "string"
        },
        "infraMappingId": {
          "type": "string"
        },
        "infraDefinitionId": {
          "type": "string"
        },
        "computeProviderId": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "publicDns": {
          "type": "string"
        },
        "hostConnAttr": {
          "type": "string"
        },
        "bastionConnAttr": {
          "type": "string"
        },
        "winrmConnAttr": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "ec2Instance": {
          "$ref": "#/definitions/Instance"
        }
      }
    },
    "InfraMappingInfrastructureProvider": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "cloudProviderId": {
          "type": "string"
        }
      }
    },
    "InfrastructureDefinition": {
      "type": "object",
      "required": ["appId", "cloudProviderType", "deploymentType", "envId", "infrastructure", "lastUpdatedAt"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "appId": {
          "type": "string"
        },
        "provisionerId": {
          "type": "string"
        },
        "cloudProviderType": {
          "type": "string",
          "enum": ["PHYSICAL_DATA_CENTER", "AWS", "AZURE", "GCP", "KUBERNETES_CLUSTER", "PCF", "CUSTOM"]
        },
        "deploymentType": {
          "type": "string",
          "enum": [
            "SSH",
            "AWS_CODEDEPLOY",
            "ECS",
            "SPOTINST",
            "KUBERNETES",
            "HELM",
            "AWS_LAMBDA",
            "AMI",
            "WINRM",
            "PCF",
            "AZURE_VMSS",
            "AZURE_WEBAPP",
            "CUSTOM"
          ]
        },
        "infrastructure": {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        "scopedToServices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "envId": {
          "type": "string"
        },
        "sample": {
          "type": "boolean"
        },
        "accountId": {
          "type": "string"
        },
        "deploymentTypeTemplateId": {
          "type": "string"
        },
        "customDeploymentName": {
          "type": "string"
        }
      }
    },
    "InfrastructureMapping": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "accountId": {
          "type": "string"
        },
        "infraMappingType": {
          "type": "string"
        },
        "computeProviderType": {
          "type": "string"
        },
        "computeProviderSettingId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "deploymentType": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "serviceTemplateId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "computeProviderName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "autoPopulate": {
          "type": "boolean"
        },
        "provisionerId": {
          "type": "string"
        },
        "blueprints": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "infrastructureDefinitionId": {
          "type": "string"
        },
        "sample": {
          "type": "boolean"
        },
        "customDeploymentTemplateId": {
          "type": "string"
        },
        "settingType": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        },
        "hostConnectionAttrs": {
          "type": "string"
        }
      }
    },
    "InstanceExecutionHistory": {
      "type": "object",
      "properties": {
        "intanceCount": {
          "type": "integer",
          "format": "int32"
        },
        "stateName": {
          "type": "string"
        },
        "errorCode": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "JIRA_STEP_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION"
          ]
        },
        "executionInterruptType": {
          "type": "string",
          "enum": [
            "ABORT",
            "ABORT_ALL",
            "PAUSE",
            "PAUSE_FOR_INPUTS",
            "PAUSE_ALL",
            "RESUME",
            "RESUME_ALL",
            "RETRY",
            "IGNORE",
            "WAITING_FOR_MANUAL_INTERVENTION",
            "MARK_FAILED",
            "MARK_SUCCESS",
            "ROLLBACK",
            "ROLLBACK_PROVISIONER_AFTER_PHASES",
            "NEXT_STEP",
            "END_EXECUTION",
            "ROLLBACK_DONE",
            "MARK_EXPIRED",
            "CONTINUE_WITH_DEFAULTS",
            "CONTINUE_PIPELINE_STAGE"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "message": {
          "type": "string"
        }
      }
    },
    "KustomizeConfig": {
      "type": "object",
      "properties": {
        "pluginRootDir": {
          "type": "string"
        },
        "kustomizeDirPath": {
          "type": "string"
        }
      }
    },
    "LastDeployedArtifactInformation": {
      "type": "object",
      "properties": {
        "artifact": {
          "$ref": "#/definitions/Artifact"
        },
        "executionStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "envId": {
          "type": "string"
        },
        "executionId": {
          "type": "string"
        },
        "executionEntityId": {
          "type": "string"
        },
        "executionEntityType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        },
        "executionEntityName": {
          "type": "string"
        }
      }
    },
    "LastDeployedHelmChartInformation": {
      "type": "object",
      "properties": {
        "helmchart": {
          "$ref": "#/definitions/HelmChart"
        },
        "executionStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "envId": {
          "type": "string"
        },
        "executionId": {
          "type": "string"
        },
        "executionEntityId": {
          "type": "string"
        },
        "executionEntityType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        },
        "executionEntityName": {
          "type": "string"
        }
      }
    },
    "ManifestFile": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "fileName": {
          "type": "string"
        },
        "fileContent": {
          "type": "string"
        },
        "applicationManifestId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ManifestSummary": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "versionNo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "appManifestName": {
          "type": "string"
        }
      }
    },
    "ManifestVariable": {
      "type": "object",
      "properties": {
        "workflowIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "applicationManifestSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationManifestSummary"
          }
        },
        "lastDeployedHelmChartInfo": {
          "$ref": "#/definitions/LastDeployedHelmChartInformation"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "runtimeInput": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "fixed": {
          "type": "boolean"
        },
        "allowedValues": {
          "type": "string"
        },
        "allowedList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowMultipleValues": {
          "type": "boolean"
        },
        "artifactStreamSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStreamSummary"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "type": {
          "type": "string",
          "enum": ["TEXT", "NUMBER", "EMAIL", "ENTITY", "ARTIFACT", "MANIFEST"]
        }
      }
    },
    "MultiServiceOrchestrationWorkflow": {
      "allOf": [
        {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        {
          "type": "object",
          "properties": {
            "graph": {
              "$ref": "#/definitions/Graph"
            },
            "preDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisioners": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisionersReverse": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackWorkflowPhaseIdMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "workflowPhases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "postDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "failureStrategies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategy"
              }
            },
            "systemVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "derivedVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            }
          }
        }
      ]
    },
    "Notification": {
      "type": "object",
      "required": ["actionable", "appId", "complete", "lastUpdatedAt", "notificationType", "uuid"],
      "properties": {
        "environmentId": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "accountId": {
          "type": "string"
        },
        "eventType": {
          "type": "string",
          "enum": [
            "USER_INVITED_FROM_EXISTING_ACCOUNT",
            "COMPLETE_USER_REGISTRATION",
            "FIRST_DELEGATE_REGISTERED",
            "FIRST_WORKFLOW_CREATED",
            "FIRST_DEPLOYMENT_EXECUTED",
            "FIRST_VERIFIED_DEPLOYMENT",
            "FIRST_ROLLED_BACK_DEPLOYMENT",
            "SETUP_CV_24X7",
            "SETUP_2FA",
            "SETUP_SSO",
            "SETUP_IP_WHITELISTING",
            "SETUP_RBAC",
            "TRIAL_TO_PAID",
            "TRIAL_TO_COMMUNITY",
            "COMMUNITY_TO_PAID",
            "COMMUNITY_TO_ESSENTIALS",
            "ESSENTIALS_TO_PAID",
            "PAID_TO_ESSENTIALS",
            "TRIAL_TO_ESSENTIALS",
            "CV_META_DATA",
            "OPEN_ALERT",
            "CLOSE_ALERT",
            "NEW_TRIAL_SIGNUP",
            "LICENSE_UPDATE",
            "DEPLOYMENT_VERIFIED",
            "JOIN_ACCOUNT_REQUEST",
            "SERVICE_GUARD_SETUP",
            "DEPLOYMENT_EVENT",
            "INSTANCE_EVENT",
            "CUSTOM",
            "TECH_STACK",
            "ACCOUNT_ENTITY_CHANGE",
            "BLACKOUT_WINDOW_UPDATED",
            "SECRET_MANAGER_TYPE",
            "USER_INVITE_ACCEPTED_FOR_TRIAL_ACCOUNT"
          ]
        },
        "notificationType": {
          "type": "string",
          "enum": ["APPROVAL", "CHANGE", "FAILURE", "INFORMATION"]
        },
        "complete": {
          "type": "boolean"
        },
        "actionable": {
          "type": "boolean"
        },
        "notificationTemplateId": {
          "type": "string"
        },
        "notificationTemplateVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "NotificationGroup": {
      "type": "object",
      "required": ["addressesByChannelType", "appId", "lastUpdatedAt", "name", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "editable": {
          "type": "boolean"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "defaultNotificationGroupForAccount": {
          "type": "boolean"
        },
        "addressesByChannelType": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "NotificationRule": {
      "type": "object",
      "required": ["notificationGroups", "userGroupExpression", "userGroupIds"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ABORTED",
              "DISCONTINUING",
              "ERROR",
              "FAILED",
              "NEW",
              "PAUSED",
              "PAUSING",
              "QUEUED",
              "RESUMED",
              "RUNNING",
              "SCHEDULED",
              "STARTING",
              "SUCCESS",
              "WAITING",
              "SKIPPED",
              "ABORTING",
              "REJECTED",
              "EXPIRED",
              "PREPARING"
            ]
          }
        },
        "executionScope": {
          "type": "string",
          "enum": ["WORKFLOW", "WORKFLOW_PHASE"]
        },
        "notificationGroupAsExpression": {
          "type": "boolean"
        },
        "userGroupAsExpression": {
          "type": "boolean"
        },
        "notificationGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationGroup"
          },
          "maxItems": 2147483647,
          "minItems": 1
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userGroupExpression": {
          "type": "string"
        },
        "batchNotifications": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "OrchestrationWorkflow": {
      "type": "object",
      "discriminator": "orchestrationWorkflowType",
      "properties": {
        "concurrencyStrategy": {
          "$ref": "#/definitions/ConcurrencyStrategy"
        },
        "orchestrationWorkflowType": {
          "type": "string",
          "enum": ["BUILD", "BASIC", "CANARY", "MULTI_SERVICE", "BLUE_GREEN", "ROLLING", "CUSTOM"]
        },
        "valid": {
          "type": "boolean"
        },
        "validationMessage": {
          "type": "string"
        },
        "linkedTemplateUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredEntityTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          }
        },
        "userVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "infraMappingIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "infraDefinitionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notificationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationRule"
          }
        }
      }
    },
    "ParallelInfo": {
      "type": "object",
      "properties": {
        "groupIndex": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PcfInfraStructure": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "organization": {
              "type": "string"
            },
            "space": {
              "type": "string"
            },
            "tempRouteMap": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "routeMaps": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "Permission": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string",
          "enum": [
            "APPLICATION",
            "SERVICE",
            "CONFIGURATION",
            "CONFIGURATION_OVERRIDE",
            "WORKFLOW",
            "ENVIRONMENT",
            "ROLE",
            "DEPLOYMENT",
            "ARTIFACT",
            "CLOUD",
            "USER",
            "CD",
            "PIPELINE",
            "SETTING",
            "LIMIT",
            "APP_STACK",
            "NOTIFICATION_GROUP",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "WHITE_LIST",
            "SSO",
            "API_KEY",
            "PROVISIONER",
            "PREFERENCE",
            "TEMPLATE",
            "CUSTOM_DASHBOARD",
            "BUDGET",
            "GCP_RESOURCE",
            "CLUSTERRECORD",
            "K8S_LABEL",
            "K8S_EVENT_YAML_DIFF",
            "K8S_RECOMMENDATION",
            "CE_ANOMALIES",
            "CE_CLUSTER",
            "CE_CONNECTOR",
            "CE_BATCH",
            "LINKED_ACCOUNT"
          ]
        },
        "action": {
          "type": "string",
          "enum": [
            "ALL",
            "CREATE",
            "READ",
            "UPDATE",
            "DELETE",
            "EXECUTE",
            "EXECUTE_WORKFLOW",
            "EXECUTE_PIPELINE",
            "EXECUTE_WORKFLOW_ROLLBACK",
            "DEFAULT"
          ]
        },
        "envId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "environmentType": {
          "type": "string",
          "enum": ["PROD", "NON_PROD", "ALL"]
        },
        "permissionScope": {
          "type": "string",
          "enum": [
            "ACCOUNT",
            "LOGGED_IN",
            "DELEGATE",
            "NONE",
            "APP",
            "ALL_APP_ENTITIES",
            "ENV",
            "SERVICE",
            "WORKFLOW",
            "PIPELINE",
            "DEPLOYMENT",
            "APPLICATION_CREATE_DELETE",
            "USER_PERMISSION_MANAGEMENT",
            "ACCOUNT_MANAGEMENT",
            "PROVISIONER",
            "TEMPLATE_MANAGEMENT",
            "APP_TEMPLATE",
            "USER_PERMISSION_READ",
            "AUDIT_VIEWER",
            "TAG_MANAGEMENT",
            "CE_ADMIN",
            "CE_VIEWER",
            "MANAGE_CLOUD_PROVIDERS",
            "MANAGE_CONNECTORS",
            "MANAGE_APPLICATIONS",
            "MANAGE_APPLICATION_STACKS",
            "MANAGE_DELEGATES",
            "MANAGE_ALERT_NOTIFICATION_RULES",
            "MANAGE_DELEGATE_PROFILES",
            "MANAGE_CONFIG_AS_CODE",
            "MANAGE_SECRETS",
            "MANAGE_SECRET_MANAGERS",
            "MANAGE_SSH_AND_WINRM",
            "MANAGE_AUTHENTICATION_SETTINGS",
            "MANAGE_USER_AND_USER_GROUPS_AND_API_KEYS",
            "VIEW_USER_AND_USER_GROUPS_AND_API_KEYS",
            "MANAGE_IP_WHITELIST",
            "MANAGE_IP_WHITELISTING",
            "MANAGE_DEPLOYMENT_FREEZES",
            "ALLOW_DEPLOYMENTS_DURING_FREEZE",
            "MANAGE_PIPELINE_GOVERNANCE_STANDARDS",
            "MANAGE_API_KEYS",
            "MANAGE_TAGS",
            "MANAGE_ACCOUNT_DEFAULTS",
            "MANAGE_CUSTOM_DASHBOARDS",
            "CREATE_CUSTOM_DASHBOARDS",
            "MANAGE_RESTRICTED_ACCESS"
          ]
        }
      }
    },
    "PhaseStep": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phaseStepType": {
          "type": "string",
          "enum": [
            "SELECT_NODE",
            "INFRASTRUCTURE_NODE",
            "PROVISION_NODE",
            "DISABLE_SERVICE",
            "DEPLOY_SERVICE",
            "ENABLE_SERVICE",
            "VERIFY_SERVICE",
            "WRAP_UP",
            "PRE_DEPLOYMENT",
            "ROLLBACK_PROVISIONERS",
            "POST_DEPLOYMENT",
            "STOP_SERVICE",
            "DE_PROVISION_NODE",
            "CLUSTER_SETUP",
            "CONTAINER_SETUP",
            "CONTAINER_DEPLOY",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROUTE_UPDATE",
            "PCF_SWICH_ROUTES",
            "START_SERVICE",
            "DEPLOY_AWSCODEDEPLOY",
            "PREPARE_STEPS",
            "DEPLOY_AWS_LAMBDA",
            "COLLECT_ARTIFACT",
            "AMI_AUTOSCALING_GROUP_SETUP",
            "AMI_DEPLOY_AUTOSCALING_GROUP",
            "AMI_SWITCH_AUTOSCALING_GROUP_ROUTES",
            "ECS_UPDATE_LISTENER_BG",
            "ECS_UPDATE_ROUTE_53_DNS_WEIGHT",
            "HELM_DEPLOY",
            "ROUTE_UPDATE",
            "K8S_PHASE_STEP",
            "PROVISION_INFRASTRUCTURE",
            "ROLLBACK_PROVISION_INFRASTRUCTURE",
            "SPOTINST_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE",
            "STAGE_EXECUTION",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROLLBACK",
            "CUSTOM_DEPLOYMENT_PHASE_STEP",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_TRAFFIC_SHIFT",
            "AZURE_WEBAPP_SLOT_ROLLBACK"
          ]
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphNode"
          }
        },
        "stepsInParallel": {
          "type": "boolean"
        },
        "failureStrategies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureStrategy"
          }
        },
        "stepSkipStrategies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StepSkipStrategy"
          }
        },
        "rollback": {
          "type": "boolean"
        },
        "phaseStepNameForRollback": {
          "type": "string"
        },
        "statusForRollback": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "artifactNeeded": {
          "type": "boolean"
        },
        "valid": {
          "type": "boolean"
        },
        "validationMessage": {
          "type": "string"
        },
        "waitInterval": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PhysicalInfra": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "hostNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "hosts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Host"
              }
            },
            "loadBalancerId": {
              "type": "string"
            },
            "loadBalancerName": {
              "type": "string"
            },
            "hostConnectionAttrs": {
              "type": "string"
            },
            "expressions": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PhysicalInfraWinrm": {
      "allOf": [
        {
          "$ref": "#/definitions/InfraMappingInfrastructureProvider"
        },
        {
          "type": "object",
          "properties": {
            "hostNames": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "hosts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Host"
              }
            },
            "loadBalancerId": {
              "type": "string"
            },
            "loadBalancerName": {
              "type": "string"
            },
            "winRmConnectionAttributes": {
              "type": "string"
            }
          }
        }
      ]
    },
    "Pipeline": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "name", "uuid"],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "pipelineStages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineStage"
          }
        },
        "stateEtaMap": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "workflowExecutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowExecution"
          }
        },
        "valid": {
          "type": "boolean"
        },
        "validationMessage": {
          "type": "string"
        },
        "templatized": {
          "type": "boolean"
        },
        "hasSshInfraMapping": {
          "type": "boolean"
        },
        "failureStrategies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureStrategy"
          }
        },
        "pipelineVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "envIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workflowIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "envParameterized": {
          "type": "boolean"
        },
        "deploymentTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SSH",
              "AWS_CODEDEPLOY",
              "ECS",
              "SPOTINST",
              "KUBERNETES",
              "HELM",
              "AWS_LAMBDA",
              "AMI",
              "WINRM",
              "PCF",
              "AZURE_VMSS",
              "AZURE_WEBAPP",
              "CUSTOM"
            ]
          }
        },
        "envSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvSummary"
          }
        },
        "hasBuildWorkflow": {
          "type": "boolean"
        },
        "infraMappingIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "infraDefinitionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "accountId": {
          "type": "string"
        },
        "sample": {
          "type": "boolean"
        },
        "tagLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTagLink"
          }
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PipelineExecution": {
      "type": "object",
      "required": ["appId", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "pipelineId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "stateMachineId": {
          "type": "string"
        },
        "pipeline": {
          "$ref": "#/definitions/Pipeline"
        },
        "pipelineStageExecutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineStageExecution"
          }
        },
        "appName": {
          "type": "string"
        },
        "workflowType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "name": {
          "type": "string"
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "endTs": {
          "type": "integer",
          "format": "int64"
        },
        "estimatedTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PipelineStage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "parallel": {
          "type": "boolean"
        },
        "pipelineStageElements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineStageElement"
          }
        },
        "valid": {
          "type": "boolean"
        },
        "validationMessage": {
          "type": "string"
        },
        "looped": {
          "type": "boolean"
        },
        "loopedVarName": {
          "type": "string"
        }
      }
    },
    "PipelineStageElement": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "parallelIndex": {
          "type": "integer",
          "format": "int32"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "workflowVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "runtimeInputsConfig": {
          "$ref": "#/definitions/RuntimeInputsConfig"
        },
        "disable": {
          "type": "boolean"
        },
        "disableAssertion": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        },
        "validationMessage": {
          "type": "string"
        }
      }
    },
    "PipelineStageExecution": {
      "type": "object",
      "properties": {
        "pipelineStageElementId": {
          "type": "string"
        },
        "stateUuid": {
          "type": "string"
        },
        "stateName": {
          "type": "string"
        },
        "stateType": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "expiryTs": {
          "type": "integer",
          "format": "int64"
        },
        "endTs": {
          "type": "integer",
          "format": "int64"
        },
        "estimatedTime": {
          "type": "integer",
          "format": "int64"
        },
        "workflowExecutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowExecution"
          }
        },
        "stateExecutionData": {
          "$ref": "#/definitions/StateExecutionData"
        },
        "message": {
          "type": "string"
        },
        "looped": {
          "type": "boolean"
        },
        "waitingForInputs": {
          "type": "boolean"
        },
        "parallelInfo": {
          "$ref": "#/definitions/ParallelInfo"
        },
        "triggeredBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "disableAssertionInspection": {
          "$ref": "#/definitions/StateInspection"
        },
        "skipCondition": {
          "type": "string"
        },
        "needsInputButNotReceivedYet": {
          "type": "boolean"
        }
      }
    },
    "PipelineSummary": {
      "type": "object",
      "properties": {
        "pipelineId": {
          "type": "string"
        },
        "pipelineName": {
          "type": "string"
        }
      }
    },
    "RestResponseApplication": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Application"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Role": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        },
        "roleType": {
          "type": "string",
          "enum": ["ACCOUNT_ADMIN", "APPLICATION_ADMIN", "PROD_SUPPORT", "NON_PROD_SUPPORT", "CUSTOM"]
        },
        "allApps": {
          "type": "boolean"
        }
      }
    },
    "RollbackWorkflowExecutionInfo": {
      "type": "object",
      "properties": {
        "rollbackType": {
          "type": "string",
          "enum": ["MANUAL", "AUTO"]
        },
        "rollbackStateExecutionId": {
          "type": "string"
        },
        "rollbackStartTs": {
          "type": "integer",
          "format": "int64"
        },
        "rollbackDuration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RollingOrchestrationWorkflow": {
      "allOf": [
        {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        {
          "type": "object",
          "properties": {
            "graph": {
              "$ref": "#/definitions/Graph"
            },
            "preDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisioners": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackProvisionersReverse": {
              "$ref": "#/definitions/PhaseStep"
            },
            "rollbackWorkflowPhaseIdMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "workflowPhases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowPhase"
              }
            },
            "postDeploymentSteps": {
              "$ref": "#/definitions/PhaseStep"
            },
            "failureStrategies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FailureStrategy"
              }
            },
            "systemVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            },
            "derivedVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Variable"
              }
            }
          }
        }
      ]
    },
    "RuntimeInputsConfig": {
      "type": "object",
      "properties": {
        "runtimeInputVariables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeout": {
          "type": "integer",
          "format": "int64"
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeoutAction": {
          "type": "string",
          "enum": [
            "MANUAL_INTERVENTION",
            "ROLLBACK_WORKFLOW",
            "ROLLBACK_PROVISIONER_AFTER_PHASES",
            "ROLLBACK_PHASE",
            "IGNORE",
            "RETRY",
            "END_EXECUTION",
            "CONTINUE_WITH_DEFAULTS",
            "ABORT_WORKFLOW_EXECUTION"
          ]
        }
      }
    },
    "ServiceInstance": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "envId": {
          "type": "string"
        },
        "serviceTemplateId": {
          "type": "string"
        },
        "serviceTemplateName": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "hostId": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "publicDns": {
          "type": "string"
        },
        "infraMappingId": {
          "type": "string"
        },
        "infraMappingType": {
          "type": "string"
        },
        "artifactStreamId": {
          "type": "string"
        },
        "artifactStreamName": {
          "type": "string"
        },
        "artifactId": {
          "type": "string"
        },
        "artifactName": {
          "type": "string"
        },
        "artifactDeployedOn": {
          "type": "integer",
          "format": "int64"
        },
        "artifactDeploymentStatus": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "artifactDeploymentActivityId": {
          "type": "string"
        },
        "lastActivityId": {
          "type": "string"
        },
        "lastActivityStatus": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "lastActivityCreatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "commandName": {
          "type": "string"
        },
        "commandType": {
          "type": "string"
        },
        "lastDeployedOn": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ServiceTemplate": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "serviceConfigFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigFile"
          }
        },
        "serviceVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceVariable"
          }
        },
        "serviceArtifactType": {
          "type": "string",
          "enum": [
            "JAR",
            "WAR",
            "TAR",
            "ZIP",
            "NUGET",
            "DOCKER",
            "RPM",
            "AWS_LAMBDA",
            "AWS_CODEDEPLOY",
            "PCF",
            "AMI",
            "AZURE_MACHINE_IMAGE",
            "AZURE_WEBAPP",
            "IIS",
            "OTHER",
            "IIS_APP",
            "IIS_VirtualDirectory"
          ]
        },
        "configFilesOverrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigFile"
          }
        },
        "serviceVariablesOverrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceVariable"
          }
        },
        "configMapYamlOverride": {
          "type": "string"
        },
        "helmValueYamlOverride": {
          "type": "string"
        },
        "infrastructureMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfrastructureMapping"
          }
        },
        "valuesOverrideAppManifest": {
          "$ref": "#/definitions/ApplicationManifest"
        },
        "helmChartOverride": {
          "$ref": "#/definitions/ApplicationManifest"
        },
        "valuesOverrideManifestFile": {
          "$ref": "#/definitions/ManifestFile"
        },
        "kustomizePatchesOverrideAppManifest": {
          "$ref": "#/definitions/ApplicationManifest"
        },
        "kustomizePatchesOverrideManifestFile": {
          "$ref": "#/definitions/ManifestFile"
        },
        "ocParamsOverrideAppManifest": {
          "$ref": "#/definitions/ApplicationManifest"
        },
        "ocParamsOverrideFile": {
          "$ref": "#/definitions/ManifestFile"
        },
        "appSettingOverrideManifest": {
          "$ref": "#/definitions/ApplicationManifest"
        },
        "connStringsOverrideManifest": {
          "$ref": "#/definitions/ApplicationManifest"
        },
        "appSettingsOverrideManifestFile": {
          "$ref": "#/definitions/ManifestFile"
        },
        "connStringsOverrideManifestFile": {
          "$ref": "#/definitions/ManifestFile"
        },
        "defaultServiceTemplate": {
          "type": "boolean"
        }
      }
    },
    "State": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "requiredContextElementType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "INFRAMAPPING",
            "SERVICE_TEMPLATE",
            "TAG",
            "SHELL",
            "HOST",
            "INSTANCE",
            "STANDARD",
            "PARAM",
            "PARTITION",
            "OTHER",
            "FORK",
            "CONTAINER_SERVICE",
            "CLUSTER",
            "AWS_LAMBDA_FUNCTION",
            "AMI_SERVICE_SETUP",
            "AMI_SERVICE_DEPLOY",
            "ECS_SERVICE_SETUP",
            "AMI_SWITCH_ROUTES",
            "PCF_SERVICE_SETUP",
            "PCF_SERVICE_DEPLOY",
            "PCF_ROUTE_SWAP_ROLLBACK",
            "PCF_INSTANCE",
            "SPOTINST_SERVICE_SETUP",
            "SPOTINST_SERVICE_DEPLOY",
            "ARTIFACT",
            "ARTIFACT_VARIABLE",
            "HELM_DEPLOY",
            "CLOUD_FORMATION_PROVISION",
            "CLOUD_FORMATION_ROLLBACK",
            "CLOUD_FORMATION_DEPROVISION",
            "TERRAFORM_PROVISION",
            "SHELL_SCRIPT_PROVISION",
            "K8S",
            "TERRAFORM_INHERIT_PLAN",
            "TERRAGRUNT_INHERIT_PLAN",
            "AZURE_VMSS_SETUP",
            "AZURE_WEBAPP_SETUP",
            "HELM_CHART",
            "MANIFEST_VARIABLE"
          ]
        },
        "stateType": {
          "type": "string"
        },
        "rollback": {
          "type": "boolean"
        },
        "waitInterval": {
          "type": "integer",
          "format": "int32"
        },
        "timeoutMillis": {
          "type": "integer",
          "format": "int32"
        },
        "ignoreFailure": {
          "type": "boolean"
        },
        "templateExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateExpression"
          }
        },
        "executeWithPreviousSteps": {
          "type": "boolean"
        },
        "templateUuid": {
          "type": "string"
        },
        "templateVersion": {
          "type": "string"
        },
        "templateVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "patternsForRequiredContextElementType": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredExecutionArgumentTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          }
        },
        "selectionLogsTrackingForTasksEnabled": {
          "type": "boolean"
        }
      }
    },
    "StateExecutionData": {
      "type": "object",
      "properties": {
        "stateName": {
          "type": "string"
        },
        "stateType": {
          "type": "string"
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "endTs": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "errorMsg": {
          "type": "string"
        },
        "waitInterval": {
          "type": "integer",
          "format": "int32"
        },
        "element": {
          "$ref": "#/definitions/ContextElement"
        },
        "stateParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "delegateMetaInfo": {
          "$ref": "#/definitions/DelegateMetaInfo"
        },
        "templateVariable": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "executionSummary": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ExecutionDataValue"
          }
        },
        "executionDetails": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ExecutionDataValue"
          }
        }
      }
    },
    "StateInspection": {
      "type": "object",
      "properties": {
        "stateExecutionInstanceId": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StateInspectionData"
          }
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "StateInspectionData": {
      "type": "object"
    },
    "StateMachine": {
      "type": "object",
      "required": ["appId"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "originId": {
          "type": "string"
        },
        "originVersion": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "orchestrationWorkflow": {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        "valid": {
          "type": "boolean"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/State"
          }
        },
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Transition"
          }
        },
        "childStateMachines": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StateMachine"
          }
        },
        "initialStateName": {
          "type": "string"
        },
        "cachedStatesMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/State"
          }
        },
        "cachedTransitionFlowMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/State"
              }
            }
          }
        },
        "initialState": {
          "$ref": "#/definitions/State"
        },
        "statesMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/State"
          }
        },
        "transitionFlowMap": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/State"
              }
            }
          }
        }
      }
    },
    "StatusInstanceBreakdown": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32"
        },
        "instanceExecutionHistories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceExecutionHistory"
          }
        }
      }
    },
    "StepSkipStrategy": {
      "type": "object",
      "required": ["assertionExpression", "scope"],
      "properties": {
        "scope": {
          "type": "string",
          "enum": ["ALL_STEPS", "SPECIFIC_STEPS"]
        },
        "stepIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assertionExpression": {
          "type": "string"
        },
        "phaseStep": {
          "$ref": "#/definitions/PhaseStep"
        }
      }
    },
    "Transition": {
      "type": "object",
      "properties": {
        "fromState": {
          "$ref": "#/definitions/State"
        },
        "toState": {
          "$ref": "#/definitions/State"
        },
        "transitionType": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ABORT", "REPEAT", "FORK", "CONDITIONAL"]
        }
      }
    },
    "WorkflowExecution": {
      "type": "object",
      "required": ["appId", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdByType": {
          "type": "string",
          "enum": ["USER", "API_KEY", "TRIGGER"]
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "stateMachineId": {
          "type": "string"
        },
        "stateMachine": {
          "$ref": "#/definitions/StateMachine"
        },
        "envId": {
          "type": "string"
        },
        "envIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workflowIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cloudProviderIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "infraMappingIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "infraDefinitionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appName": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "envType": {
          "type": "string",
          "enum": ["PROD", "NON_PROD", "ALL"]
        },
        "workflowType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "graph": {
          "$ref": "#/definitions/Graph"
        },
        "executionNode": {
          "$ref": "#/definitions/GraphNode"
        },
        "pipelineExecution": {
          "$ref": "#/definitions/PipelineExecution"
        },
        "pipelineExecutionId": {
          "type": "string"
        },
        "stageName": {
          "type": "string"
        },
        "errorStrategy": {
          "type": "string",
          "enum": ["CONTINUE", "FAIL", "PAUSE", "RETRY"]
        },
        "name": {
          "type": "string"
        },
        "releaseNo": {
          "type": "string"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "breakdown": {
          "$ref": "#/definitions/CountsByStatuses"
        },
        "executionArgs": {
          "$ref": "#/definitions/ExecutionArgs"
        },
        "serviceExecutionSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementExecutionSummary"
          }
        },
        "statusInstanceBreakdownMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StatusInstanceBreakdown"
          }
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "rollbackStartTs": {
          "type": "integer",
          "format": "int64"
        },
        "endTs": {
          "type": "integer",
          "format": "int64"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "rollbackDuration": {
          "type": "integer",
          "format": "int64"
        },
        "triggeredBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "pipelineSummary": {
          "$ref": "#/definitions/PipelineSummary"
        },
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvSummary"
          }
        },
        "deployedEnvironments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvSummary"
          }
        },
        "deployedServices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deployedCloudProviders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "buildExecutionSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildExecutionSummary"
          }
        },
        "orchestrationType": {
          "type": "string",
          "enum": ["BUILD", "BASIC", "CANARY", "MULTI_SERVICE", "BLUE_GREEN", "ROLLING", "CUSTOM"]
        },
        "deploymentTriggerId": {
          "type": "string"
        },
        "triggeringApiKeyInfo": {
          "$ref": "#/definitions/ApiKeyInfo"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "rollbackArtifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "helmCharts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HelmChart"
          }
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "onDemandRollback": {
          "type": "boolean"
        },
        "useSweepingOutputs": {
          "type": "boolean"
        },
        "originalExecution": {
          "$ref": "#/definitions/WorkflowExecutionInfo"
        },
        "helmExecutionSummary": {
          "$ref": "#/definitions/HelmExecutionSummary"
        },
        "awsLambdaExecutionSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsLambdaExecutionSummary"
          }
        },
        "concurrencyStrategy": {
          "$ref": "#/definitions/ConcurrencyStrategy"
        },
        "pipelineResumeId": {
          "type": "string"
        },
        "latestPipelineResume": {
          "type": "boolean"
        },
        "cdPageCandidate": {
          "type": "boolean"
        },
        "nextIteration": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "message": {
          "type": "string"
        },
        "failureDetails": {
          "type": "string"
        },
        "canOverrideFreeze": {
          "type": "boolean"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "rollbackProvisionerAfterPhases": {
          "type": "boolean"
        },
        "baseline": {
          "type": "boolean"
        }
      }
    },
    "WorkflowExecutionInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "executionId": {
          "type": "string"
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "rollbackWorkflowExecutionInfo": {
          "$ref": "#/definitions/RollbackWorkflowExecutionInfo"
        },
        "accountId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        }
      }
    },
    "WorkflowPhase": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "daemonSet": {
          "type": "boolean"
        },
        "statefulSet": {
          "type": "boolean"
        },
        "infraMappingId": {
          "type": "string"
        },
        "infraMappingName": {
          "type": "string"
        },
        "infraDefinitionId": {
          "type": "string"
        },
        "infraDefinitionName": {
          "type": "string"
        },
        "deploymentType": {
          "type": "string",
          "enum": [
            "SSH",
            "AWS_CODEDEPLOY",
            "ECS",
            "SPOTINST",
            "KUBERNETES",
            "HELM",
            "AWS_LAMBDA",
            "AMI",
            "WINRM",
            "PCF",
            "AZURE_VMSS",
            "AZURE_WEBAPP",
            "CUSTOM"
          ]
        },
        "srvTemplatised": {
          "type": "boolean"
        },
        "infraTemplatised": {
          "type": "boolean"
        },
        "computeProviderId": {
          "type": "string"
        },
        "provisionNodes": {
          "type": "boolean"
        },
        "rollback": {
          "type": "boolean"
        },
        "phaseNameForRollback": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        },
        "validationMessage": {
          "type": "string"
        },
        "templateExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateExpression"
          }
        },
        "variableOverrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "phaseSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhaseStep"
          }
        }
      }
    },
    "YamlGitConfig": {
      "type": "object",
      "required": ["entityType"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "appId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "branchName": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sshSettingId": {
          "type": "string"
        },
        "keyAuth": {
          "type": "boolean"
        },
        "gitConnectorId": {
          "type": "string"
        },
        "encryptedPassword": {
          "type": "string"
        },
        "syncMode": {
          "type": "string",
          "enum": ["GIT_TO_HARNESS", "HARNESS_TO_GIT", "BOTH", "NONE"]
        },
        "enabled": {
          "type": "boolean"
        },
        "webhookToken": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "entityName": {
          "type": "string"
        },
        "settingType": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        }
      }
    },
    "RestResponsePageResponseApplication": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Application"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "NewRelicApplication": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseListNewRelicApplication": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRelicApplication"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseVerificationNodeDataSetupResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/VerificationNodeDataSetupResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "VerificationLoadResponse": {
      "type": "object",
      "properties": {
        "loadResponse": {
          "type": "object"
        },
        "totalHits": {
          "type": "integer",
          "format": "int64"
        },
        "totalHitsThreshold": {
          "type": "integer",
          "format": "int64"
        },
        "loadPresent": {
          "type": "boolean"
        }
      }
    },
    "VerificationNodeDataSetupResponse": {
      "type": "object",
      "properties": {
        "providerReachable": {
          "type": "boolean"
        },
        "loadResponse": {
          "$ref": "#/definitions/VerificationLoadResponse"
        },
        "dataForNode": {
          "type": "object"
        },
        "configurationCorrect": {
          "type": "boolean"
        }
      }
    },
    "AWS": {
      "type": "object",
      "properties": {
        "ec2Instance": {
          "$ref": "#/definitions/Instance"
        },
        "ip": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "publicDns": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "taskArn": {
          "type": "string"
        },
        "dockerId": {
          "type": "string"
        },
        "completeDockerId": {
          "type": "string"
        },
        "containerId": {
          "type": "string"
        },
        "containerInstanceId": {
          "type": "string"
        },
        "containerInstanceArn": {
          "type": "string"
        },
        "ecsServiceName": {
          "type": "string"
        }
      }
    },
    "AZURE_VMSS": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "publicDns": {
          "type": "string"
        }
      }
    },
    "AZURE_WEBAPP": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        },
        "instanceType": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "instanceHostName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "deploySlot": {
          "type": "string"
        },
        "deploySlotId": {
          "type": "string"
        },
        "appServicePlanId": {
          "type": "string"
        }
      }
    },
    "AppdynamicsSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "applicationId": {
          "type": "integer",
          "format": "int64"
        },
        "tierId": {
          "type": "integer",
          "format": "int64"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "InstanceDetails": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "workloadName": {
          "type": "string"
        },
        "newInstance": {
          "type": "boolean"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "serviceTemplateName": {
          "type": "string"
        },
        "serviceTemplateId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "pcf": {
          "$ref": "#/definitions/PCF"
        },
        "aws": {
          "$ref": "#/definitions/AWS"
        },
        "physicalHost": {
          "$ref": "#/definitions/PHYSICAL_HOST"
        },
        "k8s": {
          "$ref": "#/definitions/K8s"
        },
        "azureVmss": {
          "$ref": "#/definitions/AZURE_VMSS"
        },
        "azureWebapp": {
          "$ref": "#/definitions/AZURE_WEBAPP"
        },
        "instanceType": {
          "type": "string",
          "enum": ["PCF", "AWS", "K8s", "PHYSICAL_HOST", "AZURE_VMSS", "AZURE_WEBAPP"]
        }
      }
    },
    "K8s": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "podName": {
          "type": "string"
        },
        "dockerId": {
          "type": "string"
        }
      }
    },
    "PCF": {
      "type": "object",
      "properties": {
        "applicationId": {
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "instanceIndex": {
          "type": "string"
        }
      }
    },
    "PHYSICAL_HOST": {
      "type": "object",
      "properties": {
        "publicDns": {
          "type": "string"
        },
        "instanceId": {
          "type": "string"
        }
      }
    },
    "AppdynamicsTier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "agentType": {
          "type": "string"
        },
        "externalTiers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AppdynamicsTier"
          }
        },
        "dependencyPath": {
          "type": "string"
        }
      }
    },
    "RestResponseSetAppdynamicsTier": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AppdynamicsTier"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseManifestFile": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ManifestFile"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseApplicationManifest": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationManifest"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseApplicationManifest": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ApplicationManifest"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DirectoryNode": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["FOLDER", "YAML", "FILE"]
        },
        "name": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "shortClassName": {
          "type": "string"
        },
        "restName": {
          "type": "string"
        },
        "directoryPath": {
          "$ref": "#/definitions/DirectoryPath"
        }
      }
    },
    "DirectoryPath": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "RestResponseDirectoryNode": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DirectoryNode"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListManifestFile": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManifestFile"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseArtifact": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Artifact"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseArtifact": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseArtifactStream": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ArtifactStream"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseArtifactStream": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStream"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapStringString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListArtifactStreamSummary": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStreamSummary"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ApiKeyAuditDetails": {
      "type": "object",
      "properties": {
        "apiKeyId": {
          "type": "string"
        },
        "apiKeyName": {
          "type": "string"
        }
      }
    },
    "AuditHeader": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "remoteUser": {
          "$ref": "#/definitions/User"
        },
        "application": {
          "$ref": "#/definitions/Application"
        },
        "component": {
          "$ref": "#/definitions/Service"
        },
        "environment": {
          "$ref": "#/definitions/Environment"
        },
        "url": {
          "type": "string"
        },
        "resourcePath": {
          "type": "string"
        },
        "queryParams": {
          "type": "string"
        },
        "requestMethod": {
          "type": "string",
          "enum": ["OPTIONS", "HEAD", "GET", "PATCH", "POST", "PUT", "DELETE"]
        },
        "headerString": {
          "type": "string"
        },
        "responseType": {
          "type": "string",
          "enum": ["SUCCESS", "FAILED", "COMPLETED_WITH_ERRORS"]
        },
        "responseStatusCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorCode": {
          "type": "string"
        },
        "remoteHostName": {
          "type": "string"
        },
        "remoteHostPort": {
          "type": "integer",
          "format": "int32"
        },
        "remoteIpAddress": {
          "type": "string"
        },
        "localHostName": {
          "type": "string"
        },
        "localIpAddress": {
          "type": "string"
        },
        "requestPayloadUuid": {
          "type": "string"
        },
        "responsePayloadUuid": {
          "type": "string"
        },
        "requestTime": {
          "type": "integer",
          "format": "int64"
        },
        "responseTime": {
          "type": "integer",
          "format": "int64"
        },
        "failureStatusMsg": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "accountId": {
          "type": "string"
        },
        "gitAuditDetails": {
          "$ref": "#/definitions/GitAuditDetails"
        },
        "entityAuditRecords": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityAuditRecord"
          }
        },
        "apiKeyAuditDetails": {
          "$ref": "#/definitions/ApiKeyAuditDetails"
        }
      }
    },
    "EntityAuditRecord": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "operationType": {
          "type": "string"
        },
        "entityOldYamlRecordId": {
          "type": "string"
        },
        "entityNewYamlRecordId": {
          "type": "string"
        },
        "yamlPath": {
          "type": "string"
        },
        "yamlError": {
          "type": "string"
        },
        "failure": {
          "type": "boolean"
        },
        "appId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "affectedResourceId": {
          "type": "string"
        },
        "affectedResourceName": {
          "type": "string"
        },
        "affectedResourceType": {
          "type": "string"
        },
        "affectedResourceOperation": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GitAuditDetails": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "gitCommitId": {
          "type": "string"
        },
        "repoUrl": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseAuditHeader": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditHeader"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AuditHeaderYamlResponse": {
      "type": "object",
      "properties": {
        "auditHeaderId": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "oldYaml": {
          "type": "string"
        },
        "oldYamlPath": {
          "type": "string"
        },
        "newYaml": {
          "type": "string"
        },
        "newYamlPath": {
          "type": "string"
        }
      }
    },
    "RestResponseAuditHeaderYamlResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AuditHeaderYamlResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListNameValuePair": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AzureImageGallery": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "resourceGroupName": {
          "type": "string"
        },
        "regionName": {
          "type": "string"
        }
      }
    },
    "RestResponseListAzureImageGallery": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureImageGallery"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AzureImageDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "resourceGroupName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "osType": {
          "type": "string"
        },
        "galleryName": {
          "type": "string"
        }
      }
    },
    "RestResponseListAzureImageDefinition": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureImageDefinition"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AzureResourceGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        }
      }
    },
    "RestResponseListAzureResourceGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureResourceGroup"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AzureContainerRegistry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "resourceGroup": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "loginServer": {
          "type": "string"
        }
      }
    },
    "RestResponseListAzureContainerRegistry": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureContainerRegistry"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AzureKubernetesCluster": {
      "allOf": [
        {
          "$ref": "#/definitions/Cluster"
        },
        {
          "type": "object",
          "properties": {
            "resourceGroup": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "RestResponseListAzureKubernetesCluster": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureKubernetesCluster"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AlertThreshold": {
      "type": "object",
      "properties": {
        "percentage": {
          "type": "number",
          "format": "double"
        },
        "basedOn": {
          "type": "string",
          "enum": ["ACTUAL_COST", "FORECASTED_COST"]
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "slackWebhooks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alertsSent": {
          "type": "integer",
          "format": "int32"
        },
        "crossedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApplicationBudgetScope": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetScope"
        },
        {
          "type": "object",
          "properties": {
            "applicationIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "environmentType": {
              "type": "string",
              "enum": ["PROD", "NON_PROD", "ALL"]
            }
          }
        }
      ]
    },
    "Budget": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/BudgetScope"
        },
        "type": {
          "type": "string",
          "enum": ["SPECIFIED_AMOUNT", "PREVIOUS_MONTH_SPEND", "PREVIOUS_PERIOD_SPEND"]
        },
        "budgetAmount": {
          "type": "number",
          "format": "double"
        },
        "period": {
          "type": "string",
          "enum": ["DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "YEARLY"]
        },
        "growthRate": {
          "type": "number",
          "format": "double"
        },
        "actualCost": {
          "type": "number",
          "format": "double"
        },
        "forecastCost": {
          "type": "number",
          "format": "double"
        },
        "lastMonthCost": {
          "type": "number",
          "format": "double"
        },
        "alertThresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertThreshold"
          }
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notifyOnSlack": {
          "type": "boolean"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BudgetScope": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "entityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "budgetScopeType": {
          "type": "string"
        }
      }
    },
    "ClusterBudgetScope": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetScope"
        },
        {
          "type": "object",
          "properties": {
            "clusterIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PerspectiveBudgetScope": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetScope"
        },
        {
          "type": "object",
          "properties": {
            "viewId": {
              "type": "string"
            },
            "viewName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "RestResponseBudget": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Budget"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListBudget": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Budget"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "BugsnagSetupTestData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "orgId": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "releaseStage": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "browserApplication": {
          "type": "boolean"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "BugsnagApplication": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "RestResponseSetBugsnagApplication": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/BugsnagApplication"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "BuildDetails": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "artifactPath": {
          "type": "string"
        },
        "buildUrl": {
          "type": "string"
        },
        "buildDisplayName": {
          "type": "string"
        },
        "buildFullDisplayName": {
          "type": "string"
        },
        "artifactFileSize": {
          "type": "string"
        },
        "uiDisplayName": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["FAILURE", "UNSTABLE", "SUCCESS"]
        },
        "buildParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "artifactFileMetadataList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactFileMetadata"
          }
        }
      }
    },
    "RestResponseListBuildDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildDetails"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AzureDevopsProject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RestResponseListAzureDevopsProject": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevopsProject"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AzureArtifactsFeed": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/AzureDevopsProject"
        }
      }
    },
    "RestResponseListAzureArtifactsFeed": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureArtifactsFeed"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AzureArtifactsPackage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "protocolType": {
          "type": "string"
        }
      }
    },
    "RestResponseListAzureArtifactsPackage": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureArtifactsPackage"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "JobDetails": {
      "type": "object",
      "properties": {
        "jobName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobParameter"
          }
        },
        "folder": {
          "type": "boolean"
        }
      }
    },
    "JobParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultValue": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "RestResponseSetJobDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/JobDetails"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseJobDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/JobDetails"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CECommunications": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["WEEKLY_REPORT"]
        },
        "enabled": {
          "type": "boolean"
        },
        "selfEnabled": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseListCECommunications": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CECommunications"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CEReportSchedule": {
      "type": "object",
      "required": ["viewsId"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "viewsId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "userCron": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 50,
          "minItems": 0
        },
        "accountId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "userCronTimeZone": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "nextExecution": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CESlackWebhook": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "webhookUrl": {
          "type": "string"
        },
        "sendCostReport": {
          "type": "boolean"
        },
        "sendAnomalyAlerts": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseCESlackWebhook": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CESlackWebhook"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CVActivityLog": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "cvConfigId": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "dataCollectionMinute": {
          "type": "integer",
          "format": "int64"
        },
        "log": {
          "type": "string"
        },
        "logLevel": {
          "type": "string",
          "enum": ["INFO", "WARN", "ERROR"]
        },
        "timestampParams": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "accountId": {
          "type": "string"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "ansiLog": {
          "type": "string"
        }
      }
    },
    "RestResponseListCVActivityLog": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CVActivityLog"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListCVConfiguration": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CVConfiguration"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LogsCVConfiguration": {
      "type": "object",
      "required": [
        "accountId",
        "analysisTolerance",
        "appId",
        "connectorId",
        "envId",
        "lastUpdatedAt",
        "name",
        "serviceId",
        "stateType",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "analysisTolerance": {
          "type": "string",
          "enum": ["LOW", "MEDIUM", "HIGH"]
        },
        "customThresholdRefId": {
          "type": "string"
        },
        "enabled24x7": {
          "type": "boolean"
        },
        "comparisonStrategy": {
          "type": "string",
          "enum": ["COMPARE_WITH_PREVIOUS", "COMPARE_WITH_CURRENT", "PREDICTIVE"]
        },
        "contextId": {
          "type": "string"
        },
        "alertEnabled": {
          "type": "boolean"
        },
        "alertThreshold": {
          "type": "number",
          "format": "double"
        },
        "numOfOccurrencesForAlert": {
          "type": "integer",
          "format": "int32"
        },
        "snoozeStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "snoozeEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "connectorName": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "baselineStartMinute": {
          "type": "integer",
          "format": "int64"
        },
        "baselineEndMinute": {
          "type": "integer",
          "format": "int64"
        },
        "alertPriority": {
          "type": "string",
          "enum": ["BASELINE", "P5", "P4", "P3", "P2", "P1", "P0"]
        },
        "is247LogsV2": {
          "type": "boolean"
        },
        "workflowConfig": {
          "type": "boolean"
        }
      }
    },
    "RestResponseCVConfiguration": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CVConfiguration"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CgEventConfig": {
      "type": "object",
      "required": ["appId", "config", "lastUpdatedAt", "uuid"],
      "properties": {
        "name": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/WebHookEventConfig"
        },
        "rule": {
          "$ref": "#/definitions/CgEventRule"
        },
        "accountId": {
          "type": "string"
        },
        "delegateSelectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "summary": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "CgEventRule": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["PIPELINE", "WORKFLOW", "ALL"]
        },
        "pipelineRule": {
          "$ref": "#/definitions/PipelineRule"
        },
        "workflowRule": {
          "$ref": "#/definitions/WorkflowRule"
        }
      }
    },
    "KeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PipelineRule": {
      "type": "object",
      "properties": {
        "allEvents": {
          "type": "boolean"
        },
        "allPipelines": {
          "type": "boolean"
        },
        "pipelineIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseListCgEventConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CgEventConfig"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "WebHookEventConfig": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          }
        },
        "useProxy": {
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "socketTimeoutMillis": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WorkflowRule": {
      "type": "object",
      "properties": {
        "allEvents": {
          "type": "boolean"
        },
        "allWorkflows": {
          "type": "boolean"
        },
        "workflowIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseCgEventConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CgEventConfig"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CloudWatchMetric": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "dimension": {
          "type": "string"
        },
        "dimensionDisplay": {
          "type": "string"
        },
        "metricType": {
          "type": "string"
        },
        "enabledDefault": {
          "type": "boolean"
        },
        "statistics": {
          "type": "string"
        },
        "unit": {
          "type": "string",
          "enum": [
            "Seconds",
            "Microseconds",
            "Milliseconds",
            "Bytes",
            "Kilobytes",
            "Megabytes",
            "Gigabytes",
            "Terabytes",
            "Bits",
            "Kilobits",
            "Megabits",
            "Gigabits",
            "Terabits",
            "Percent",
            "Count",
            "BytesSecond",
            "KilobytesSecond",
            "MegabytesSecond",
            "GigabytesSecond",
            "TerabytesSecond",
            "BitsSecond",
            "KilobitsSecond",
            "MegabitsSecond",
            "GigabitsSecond",
            "TerabitsSecond",
            "CountSecond",
            "None"
          ]
        }
      }
    },
    "CloudWatchSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "region": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "loadBalancerMetricsByLBName": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CloudWatchMetric"
            }
          }
        },
        "ecsMetrics": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CloudWatchMetric"
            }
          }
        },
        "lambdaFunctionsMetrics": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CloudWatchMetric"
            }
          }
        },
        "ec2Metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudWatchMetric"
          }
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "RestResponseListCloudWatchMetric": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudWatchMetric"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Cluster": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "clusterType": {
          "type": "string"
        },
        "cloudProviderId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "ClusterRecord": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "cluster": {
          "$ref": "#/definitions/Cluster"
        },
        "perpetualTaskIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "deactivated": {
          "type": "boolean"
        }
      }
    },
    "DirectKubernetesCluster": {
      "allOf": [
        {
          "$ref": "#/definitions/Cluster"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "EcsCluster": {
      "allOf": [
        {
          "$ref": "#/definitions/Cluster"
        },
        {
          "type": "object",
          "properties": {
            "region": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GcpKubernetesCluster": {
      "allOf": [
        {
          "$ref": "#/definitions/Cluster"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "RestResponseClusterRecord": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ClusterRecord"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListClusterRecord": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterRecord"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseConfigFile": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ConfigFile"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseConfigFile": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigFile"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ContinuousVerificationExecutionMetaData": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "workflowStartTs": {
          "type": "integer",
          "format": "int64"
        },
        "pipelineStartTs": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "applicationId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "pipelineId": {
          "type": "string"
        },
        "pipelineExecutionId": {
          "type": "string"
        },
        "phaseId": {
          "type": "string"
        },
        "artifactName": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "phaseName": {
          "type": "string"
        },
        "stateStartTs": {
          "type": "integer",
          "format": "int64"
        },
        "pipelineName": {
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "noData": {
          "type": "boolean"
        },
        "manualOverride": {
          "type": "boolean"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseLinkedHashMapLongLinkedHashMapStringLinkedHashMapStringLinkedHashMapStringLinkedHashMapStringListContinuousVerificationExecutionMetaData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ContinuousVerificationExecutionMetaData"
                    }
                  }
                }
              }
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseContinuousVerificationExecutionMetaData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContinuousVerificationExecutionMetaData"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HeatMap": {
      "type": "object",
      "properties": {
        "cvConfiguration": {
          "$ref": "#/definitions/CVConfiguration"
        },
        "riskLevelSummary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HeatMapUnit"
          }
        },
        "observedTimeSeries": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeSeriesDataPoint"
              }
            }
          }
        },
        "predictedTimeSeries": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeSeriesDataPoint"
              }
            }
          }
        }
      }
    },
    "HeatMapUnit": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "highRisk": {
          "type": "integer",
          "format": "int32"
        },
        "mediumRisk": {
          "type": "integer",
          "format": "int32"
        },
        "lowRisk": {
          "type": "integer",
          "format": "int32"
        },
        "na": {
          "type": "integer",
          "format": "int32"
        },
        "overallScore": {
          "type": "number",
          "format": "double"
        },
        "scoreList": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "keyTransactionScore": {
          "type": "number",
          "format": "double"
        },
        "keyTransactionScoreList": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "RestResponseListHeatMap": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HeatMap"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesDataPoint": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "risk": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CVDeploymentData": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "pipelineExecutionId": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "pipelineName": {
          "type": "string"
        }
      }
    },
    "RestResponseListCVDeploymentData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CVDeploymentData"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListWorkflowExecution": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowExecution"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseSortedSetTransactionTimeSeries": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TransactionTimeSeries"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesOfMetric": {
      "type": "object",
      "properties": {
        "risk": {
          "type": "integer",
          "format": "int32"
        },
        "metricName": {
          "type": "string"
        },
        "metricType": {
          "type": "string"
        },
        "metricDeeplinkUrl": {
          "type": "string"
        },
        "lastSeenTime": {
          "type": "integer",
          "format": "int64"
        },
        "timeSeries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesDataPoint"
          }
        },
        "risksForTimeSeries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesRisk"
          }
        },
        "longTermPattern": {
          "type": "boolean"
        }
      }
    },
    "TimeSeriesRisk": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "risk": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TransactionTimeSeries": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "transactionName": {
          "type": "string"
        },
        "metricTimeSeries": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TimeSeriesOfMetric"
          }
        }
      }
    },
    "RestResponseServiceGuardTimeSeries": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServiceGuardTimeSeries"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceGuardTimeSeries": {
      "type": "object",
      "properties": {
        "timeSeriesSet": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TransactionTimeSeries"
          }
        },
        "transactionsInAnalysis": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TimeSeriesFilter": {
      "type": "object",
      "properties": {
        "cvConfigId": {
          "type": "string"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "historyStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "txnNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "metricNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LogMLAnalysisSummary": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "analysisSummaryMessage": {
          "type": "string"
        },
        "baseLineExecutionId": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "highRiskClusters": {
          "type": "integer",
          "format": "int32"
        },
        "mediumRiskClusters": {
          "type": "integer",
          "format": "int32"
        },
        "lowRiskClusters": {
          "type": "integer",
          "format": "int32"
        },
        "controlClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogMLClusterSummary"
          }
        },
        "testClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogMLClusterSummary"
          }
        },
        "unknownClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogMLClusterSummary"
          }
        },
        "ignoreClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogMLClusterSummary"
          }
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "analysisComparisonStrategy": {
          "type": "string",
          "enum": ["COMPARE_WITH_PREVIOUS", "COMPARE_WITH_CURRENT", "PREDICTIVE"]
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int32"
        },
        "progress": {
          "type": "integer",
          "format": "int32"
        },
        "timeDuration": {
          "type": "integer",
          "format": "int32"
        },
        "newVersionNodes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "previousVersionNodes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "baselineStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "baselineEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "emptyResult": {
          "type": "boolean"
        }
      }
    },
    "LogMLClusterSummary": {
      "type": "object",
      "properties": {
        "hostSummary": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LogMLHostSummary"
          }
        },
        "logText": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "priority": {
          "type": "string",
          "enum": ["BASELINE", "P5", "P4", "P3", "P2", "P1", "P0"]
        },
        "clusterLabel": {
          "type": "integer",
          "format": "int32"
        },
        "logMLFeedbackType": {
          "type": "string",
          "enum": [
            "IGNORE_SERVICE",
            "IGNORE_WORKFLOW",
            "IGNORE_WORKFLOW_EXECUTION",
            "IGNORE_ALWAYS",
            "DISMISS",
            "PRIORITIZE",
            "THUMBS_UP",
            "THUMBS_DOWN",
            "UNDO_IGNORE"
          ]
        },
        "logMLFeedbackId": {
          "type": "string"
        },
        "jiraLink": {
          "type": "string"
        },
        "feedbackSummary": {
          "$ref": "#/definitions/LogMLFeedbackSummary"
        }
      }
    },
    "LogMLFeedbackSummary": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "string",
          "enum": ["BASELINE", "P5", "P4", "P3", "P2", "P1", "P0"]
        },
        "logMLFeedbackId": {
          "type": "string"
        },
        "jiraLink": {
          "type": "string"
        },
        "feedbackNote": {
          "type": "string"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "LogMLHostSummary": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "unexpectedFreq": {
          "type": "boolean"
        },
        "frequencies": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "frequencyMap": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "xcordinate": {
          "type": "number",
          "format": "double"
        },
        "ycordinate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RestResponseLogMLAnalysisSummary": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/LogMLAnalysisSummary"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapStringDouble": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseLong": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "integer",
          "format": "int64"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "APMFetchConfig": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        }
      }
    },
    "APMSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "fetchConfig": {
          "$ref": "#/definitions/APMFetchConfig"
        },
        "apmMetricCollectionInfo": {
          "$ref": "#/definitions/MetricCollectionInfo"
        },
        "host": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "MetricCollectionInfo": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "metricType": {
          "type": "string",
          "enum": ["INFRA", "VALUE", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "VALUE_LOWER"]
        },
        "tag": {
          "type": "string"
        },
        "collectionUrl": {
          "type": "string"
        },
        "baselineCollectionUrl": {
          "type": "string"
        },
        "collectionBody": {
          "type": "string"
        },
        "responseType": {
          "type": "string",
          "enum": ["JSON"]
        },
        "responseMapping": {
          "$ref": "#/definitions/ResponseMapping"
        },
        "method": {
          "type": "string",
          "enum": ["POST", "GET"]
        }
      }
    },
    "ResponseMapping": {
      "type": "object",
      "properties": {
        "logMessageJsonPath": {
          "type": "string"
        },
        "hostJsonPath": {
          "type": "string"
        },
        "hostRegex": {
          "type": "string"
        },
        "timestampJsonPath": {
          "type": "string"
        },
        "timestampFormat": {
          "type": "string"
        }
      }
    },
    "CVCertifiedDetailsForWorkflowState": {
      "type": "object",
      "properties": {
        "workflowName": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string"
        },
        "pipelineName": {
          "type": "string"
        },
        "pipelineExecutionId": {
          "type": "string"
        },
        "phaseName": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "executionDetails": {
          "$ref": "#/definitions/StateExecutionInstance"
        }
      }
    },
    "ExecutionEventAdvisor": {
      "type": "object"
    },
    "ExecutionInterruptEffect": {
      "type": "object",
      "properties": {
        "interruptId": {
          "type": "string"
        },
        "tookEffectAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LoopParams": {
      "type": "object"
    },
    "RestResponseListCVCertifiedDetailsForWorkflowState": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CVCertifiedDetailsForWorkflowState"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "StateExecutionInstance": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "childStateMachineId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "stateName": {
          "type": "string"
        },
        "stateType": {
          "type": "string"
        },
        "contextElement": {
          "$ref": "#/definitions/ContextElement"
        },
        "contextTransition": {
          "type": "boolean"
        },
        "rollback": {
          "type": "boolean"
        },
        "waitingForInputs": {
          "type": "boolean"
        },
        "actionOnTimeout": {
          "type": "string",
          "enum": [
            "MANUAL_INTERVENTION",
            "ROLLBACK_WORKFLOW",
            "ROLLBACK_PROVISIONER_AFTER_PHASES",
            "ROLLBACK_PHASE",
            "IGNORE",
            "RETRY",
            "END_EXECUTION",
            "CONTINUE_WITH_DEFAULTS",
            "ABORT_WORKFLOW_EXECUTION"
          ]
        },
        "continued": {
          "type": "boolean"
        },
        "waitingForManualIntervention": {
          "type": "boolean"
        },
        "actionAfterManualInterventionTimeout": {
          "type": "string",
          "enum": [
            "ABORT",
            "ABORT_ALL",
            "PAUSE",
            "PAUSE_FOR_INPUTS",
            "PAUSE_ALL",
            "RESUME",
            "RESUME_ALL",
            "RETRY",
            "IGNORE",
            "WAITING_FOR_MANUAL_INTERVENTION",
            "MARK_FAILED",
            "MARK_SUCCESS",
            "ROLLBACK",
            "ROLLBACK_PROVISIONER_AFTER_PHASES",
            "NEXT_STEP",
            "END_EXECUTION",
            "ROLLBACK_DONE",
            "MARK_EXPIRED",
            "CONTINUE_WITH_DEFAULTS",
            "CONTINUE_PIPELINE_STAGE"
          ]
        },
        "delegateTaskId": {
          "type": "string"
        },
        "delegateTasksDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateTaskDetails"
          }
        },
        "selectionLogsTrackingForTasksEnabled": {
          "type": "boolean"
        },
        "rollbackPhaseName": {
          "type": "string"
        },
        "parentLoopedState": {
          "type": "boolean"
        },
        "loopedStateParams": {
          "$ref": "#/definitions/LoopParams"
        },
        "contextElements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContextElement"
          }
        },
        "stateExecutionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/StateExecutionData"
          }
        },
        "stateExecutionDataHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateExecutionData"
          }
        },
        "dedicatedInterruptCount": {
          "type": "integer",
          "format": "int32"
        },
        "interruptHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionInterruptEffect"
          }
        },
        "executionEventAdvisors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionEventAdvisor"
          }
        },
        "notifyElements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContextElement"
          }
        },
        "callback": {
          "$ref": "#/definitions/StateMachineExecutionCallback"
        },
        "executionName": {
          "type": "string"
        },
        "executionType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        },
        "executionUuid": {
          "type": "string"
        },
        "parentInstanceId": {
          "type": "string"
        },
        "subGraphFilterId": {
          "type": "string"
        },
        "prevInstanceId": {
          "type": "string"
        },
        "nextInstanceId": {
          "type": "string"
        },
        "cloneInstanceId": {
          "type": "string"
        },
        "notifyId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "stateParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "endTs": {
          "type": "integer",
          "format": "int64"
        },
        "expiryTs": {
          "type": "integer",
          "format": "int64"
        },
        "stateTimeout": {
          "type": "integer",
          "format": "int64"
        },
        "retry": {
          "type": "boolean"
        },
        "retryCount": {
          "type": "integer",
          "format": "int32"
        },
        "hasInspection": {
          "type": "boolean"
        },
        "workflowId": {
          "type": "string"
        },
        "pipelineStageElementId": {
          "type": "string"
        },
        "pipelineStageParallelIndex": {
          "type": "integer",
          "format": "int32"
        },
        "stageName": {
          "type": "string"
        },
        "phaseSubWorkflowId": {
          "type": "string"
        },
        "stepId": {
          "type": "string"
        },
        "orchestrationWorkflowType": {
          "type": "string",
          "enum": ["BUILD", "BASIC", "CANARY", "MULTI_SERVICE", "BLUE_GREEN", "ROLLING", "CUSTOM"]
        },
        "rollbackProvisionerAfterPhases": {
          "type": "boolean"
        }
      }
    },
    "StateMachineExecutionCallback": {
      "type": "object"
    },
    "Store": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "VerificationDataAnalysisResponse": {
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "stateExecutionData": {
          "$ref": "#/definitions/VerificationStateAnalysisExecutionData"
        }
      }
    },
    "VerificationStateAnalysisExecutionData": {
      "type": "object",
      "properties": {
        "wingsPersistence": {
          "$ref": "#/definitions/WingsPersistence"
        },
        "correlationId": {
          "type": "string"
        },
        "stateExecutionInstanceId": {
          "type": "string"
        },
        "baselineExecutionId": {
          "type": "string"
        },
        "serverConfigId": {
          "type": "string"
        },
        "canaryNewHostNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "lastExecutionNodes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        },
        "progressPercentage": {
          "type": "integer",
          "format": "int32"
        },
        "comparisonStrategy": {
          "type": "string",
          "enum": ["COMPARE_WITH_PREVIOUS", "COMPARE_WITH_CURRENT", "PREDICTIVE"]
        },
        "remainingMinutes": {
          "type": "integer",
          "format": "int64"
        },
        "customThresholdRefId": {
          "type": "string"
        },
        "stateName": {
          "type": "string"
        },
        "stateType": {
          "type": "string"
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "endTs": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "errorMsg": {
          "type": "string"
        },
        "waitInterval": {
          "type": "integer",
          "format": "int32"
        },
        "element": {
          "$ref": "#/definitions/ContextElement"
        },
        "stateParams": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "delegateMetaInfo": {
          "$ref": "#/definitions/DelegateMetaInfo"
        },
        "templateVariable": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "WingsPersistence": {
      "type": "object",
      "properties": {
        "classStores": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Store"
          }
        }
      }
    },
    "AdditionalMetadata": {
      "type": "object",
      "properties": {
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "DataCollectionInfoV2": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "applicationId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "hosts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "cvConfigId": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "cvTaskId": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "encryptedDataDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncryptedDataDetail"
          }
        },
        "dataCollectionStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "shouldSendHeartbeat": {
          "type": "boolean"
        }
      }
    },
    "EncryptedDataDetail": {
      "type": "object",
      "properties": {
        "encryptedData": {
          "$ref": "#/definitions/EncryptedRecordData"
        },
        "encryptionConfig": {
          "$ref": "#/definitions/EncryptionConfig"
        },
        "fieldName": {
          "type": "string"
        },
        "identifier": {
          "$ref": "#/definitions/SecretUniqueIdentifier"
        }
      }
    },
    "EncryptedDataParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "EncryptedRecordData": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EncryptedDataParams"
          }
        },
        "encryptionKey": {
          "type": "string"
        },
        "encryptedValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kmsId": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "backupEncryptedValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backupEncryptionKey": {
          "type": "string"
        },
        "backupKmsId": {
          "type": "string"
        },
        "backupEncryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "base64Encoded": {
          "type": "boolean"
        },
        "additionalMetadata": {
          "$ref": "#/definitions/AdditionalMetadata"
        }
      }
    },
    "EncryptionConfig": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "name": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": ["KMS", "VAULT", "CUSTOM", "SSH"]
        },
        "uuid": {
          "type": "string"
        },
        "numOfEncryptedValue": {
          "type": "integer",
          "format": "int32"
        },
        "encryptionServiceUrl": {
          "type": "string"
        },
        "validationCriteria": {
          "type": "string"
        },
        "globalKms": {
          "type": "boolean"
        }
      }
    },
    "SecretUniqueIdentifier": {
      "type": "object",
      "properties": {
        "kmsId": {
          "type": "string"
        }
      }
    },
    "RestResponseStateExecutionData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/StateExecutionData"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "EntitySummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "EntitySummaryStats": {
      "type": "object",
      "properties": {
        "entitySummary": {
          "$ref": "#/definitions/EntitySummary"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InstanceSummaryStats": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "countMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/EntitySummaryStats"
            }
          }
        }
      }
    },
    "RestResponseInstanceSummaryStats": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/InstanceSummaryStats"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CurrentActiveInstances": {
      "type": "object",
      "properties": {
        "environment": {
          "$ref": "#/definitions/EntitySummary"
        },
        "instanceCount": {
          "type": "integer",
          "format": "int64"
        },
        "artifact": {
          "$ref": "#/definitions/ArtifactSummary"
        },
        "manifest": {
          "$ref": "#/definitions/ManifestSummary"
        },
        "serviceInfra": {
          "$ref": "#/definitions/EntitySummary"
        },
        "workflow": {
          "$ref": "#/definitions/EntitySummary"
        },
        "lastWorkflowExecutionDate": {
          "type": "string",
          "format": "date-time"
        },
        "deployedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastWorkflowExecution": {
          "$ref": "#/definitions/EntitySummary"
        },
        "onDemandRollbackAvailable": {
          "type": "boolean"
        }
      }
    },
    "DeploymentHistory": {
      "type": "object",
      "properties": {
        "artifact": {
          "$ref": "#/definitions/ArtifactSummary"
        },
        "manifest": {
          "$ref": "#/definitions/ManifestSummary"
        },
        "deployedAt": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "triggeredBy": {
          "$ref": "#/definitions/EntitySummary"
        },
        "pipeline": {
          "$ref": "#/definitions/EntitySummary"
        },
        "workflow": {
          "$ref": "#/definitions/EntitySummary"
        },
        "instanceCount": {
          "type": "integer",
          "format": "int64"
        },
        "inframappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySummary"
          }
        },
        "envs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySummary"
          }
        },
        "rolledBack": {
          "type": "boolean"
        }
      }
    },
    "RestResponseServiceInstanceDashboard": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServiceInstanceDashboard"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceInstanceDashboard": {
      "type": "object",
      "properties": {
        "serviceSummary": {
          "$ref": "#/definitions/EntitySummary"
        },
        "currentActiveInstancesList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrentActiveInstances"
          }
        },
        "deploymentHistoryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentHistory"
          }
        }
      }
    },
    "CompareEnvironmentAggregationResponseInfo": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "count": {
          "type": "string"
        },
        "envInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ServiceInfoResponseSummary"
            }
          }
        }
      }
    },
    "RestResponsePageResponseCompareEnvironmentAggregationResponseInfo": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompareEnvironmentAggregationResponseInfo"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceInfoResponseSummary": {
      "type": "object",
      "properties": {
        "lastArtifactBuildNum": {
          "type": "string"
        },
        "lastWorkflowExecutionId": {
          "type": "string"
        },
        "lastWorkflowExecutionName": {
          "type": "string"
        },
        "infraMappingId": {
          "type": "string"
        },
        "infraMappingName": {
          "type": "string"
        }
      }
    },
    "ContainerInstanceKey": {
      "type": "object",
      "properties": {
        "containerId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "HostInstanceKey": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "infraMappingId": {
          "type": "string"
        }
      }
    },
    "InstanceInfo": {
      "type": "object"
    },
    "PcfInstanceKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "PodInstanceKey": {
      "type": "object",
      "properties": {
        "podName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "RestResponseInstance": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Instance"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "EnvironmentSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "prod": {
          "type": "boolean"
        }
      }
    },
    "InstanceStats": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "entitySummaryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitySummary"
          }
        },
        "invocationCount": {
          "$ref": "#/definitions/InvocationCount"
        }
      }
    },
    "InstanceStatsByArtifact": {
      "type": "object",
      "properties": {
        "entitySummary": {
          "$ref": "#/definitions/ArtifactSummary"
        },
        "instanceStats": {
          "$ref": "#/definitions/InstanceStats"
        }
      }
    },
    "InstanceStatsByEnvironment": {
      "type": "object",
      "properties": {
        "environmentSummary": {
          "$ref": "#/definitions/EnvironmentSummary"
        },
        "instanceStatsByArtifactList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceStatsByArtifact"
          }
        },
        "infraMappingSyncStatusList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SyncStatus"
          }
        },
        "hasSyncIssues": {
          "type": "boolean"
        }
      }
    },
    "InstanceStatsByService": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "serviceSummary": {
          "$ref": "#/definitions/ServiceSummary"
        },
        "instanceStatsByEnvList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceStatsByEnvironment"
          }
        }
      }
    },
    "InvocationCount": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "enum": ["LAST_30_DAYS", "SINCE_LAST_DEPLOYED"]
        },
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "from": {
          "type": "integer",
          "format": "int64"
        },
        "to": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseListInstanceStatsByService": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceStatsByService"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "appSummary": {
          "$ref": "#/definitions/EntitySummary"
        }
      }
    },
    "SyncStatus": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "envId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "infraMappingId": {
          "type": "string"
        },
        "infraMappingName": {
          "type": "string"
        },
        "lastSyncedAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastSuccessfullySyncedAt": {
          "type": "integer",
          "format": "int64"
        },
        "syncFailureReason": {
          "type": "string"
        }
      }
    },
    "RestResponseListInstanceStatsByEnvironment": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceStatsByEnvironment"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "InstanceSummaryStatsByService": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "prodCount": {
          "type": "integer",
          "format": "int64"
        },
        "nonprodCount": {
          "type": "integer",
          "format": "int64"
        },
        "serviceSummary": {
          "$ref": "#/definitions/ServiceSummary"
        },
        "invocationCount": {
          "$ref": "#/definitions/InvocationCount"
        }
      }
    },
    "RestResponsePageResponseInstanceSummaryStatsByService": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceSummaryStatsByService"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListBoolean": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "boolean"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Aggregate": {
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "entityDeleted": {
          "type": "boolean"
        },
        "invocationCount": {
          "type": "integer",
          "format": "int64"
        },
        "invocationCountKey": {
          "type": "string",
          "enum": ["LAST_30_DAYS", "SINCE_LAST_DEPLOYED"]
        }
      }
    },
    "DataPoint": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "aggregateInvocationCountList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Aggregate"
          }
        },
        "totalInvocationCount": {
          "type": "integer",
          "format": "int64"
        },
        "invocationCountKey": {
          "type": "string",
          "enum": ["LAST_30_DAYS", "SINCE_LAST_DEPLOYED"]
        }
      }
    },
    "InstanceTimeline": {
      "type": "object",
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPoint"
          }
        },
        "localPercentile": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RestResponseInstanceTimeline": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/InstanceTimeline"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListTimeRange": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeRange"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeRange": {
      "type": "object",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "timeZone": {
          "type": "string",
          "readOnly": true
        },
        "durationBased": {
          "type": "boolean",
          "readOnly": true
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "endTime": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "freezeOccurrence": {
          "type": "string",
          "readOnly": true,
          "enum": ["DAILY", "WEEKLY", "MONTHLY", "ANNUAL"]
        },
        "expires": {
          "type": "boolean",
          "readOnly": true
        },
        "label": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataDogSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "datadogServiceName": {
          "type": "string"
        },
        "dockerMetrics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ecsMetrics": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "customMetricsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/Metric"
            }
          }
        },
        "metrics": {
          "type": "string"
        },
        "hostNameField": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "customMetrics": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/Metric"
            }
          }
        },
        "deploymentType": {
          "type": "string"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "Metric": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "mlMetricType": {
          "type": "string",
          "enum": ["INFRA", "VALUE", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "VALUE_LOWER"]
        },
        "displayName": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseListMetric": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metric"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseDelegateConfiguration": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateConfiguration"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Delegate": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "sizeDetails": {
          "$ref": "#/definitions/DelegateSizeDetails"
        },
        "owner": {
          "$ref": "#/definitions/DelegateEntityOwner"
        },
        "ng": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": ["ENABLED", "WAITING_FOR_APPROVAL", "DISABLED", "DELETED"]
        },
        "description": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "delegateGroupName": {
          "type": "string"
        },
        "delegateGroupId": {
          "type": "string"
        },
        "delegateName": {
          "type": "string"
        },
        "delegateProfileId": {
          "type": "string"
        },
        "lastHeartBeat": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "string"
        },
        "sequenceNum": {
          "type": "string"
        },
        "delegateType": {
          "type": "string"
        },
        "delegateRandomToken": {
          "type": "string"
        },
        "keepAlivePacket": {
          "type": "boolean"
        },
        "polllingModeEnabled": {
          "type": "boolean"
        },
        "proxy": {
          "type": "boolean"
        },
        "ceEnabled": {
          "type": "boolean"
        },
        "supportedTaskTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currentlyExecutingDelegateTasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useCdn": {
          "type": "boolean"
        },
        "useJreVersion": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "includeScopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateScope"
          }
        },
        "excludeScopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateScope"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "profileResult": {
          "type": "string"
        },
        "profileError": {
          "type": "boolean"
        },
        "profileExecutedAt": {
          "type": "integer",
          "format": "int64"
        },
        "sampleDelegate": {
          "type": "boolean"
        },
        "capabilitiesCheckNextIteration": {
          "type": "integer",
          "format": "int64"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskExpiryCheckNextIteration": {
          "type": "integer",
          "format": "int64"
        },
        "lastExpiredEventHeartbeatTime": {
          "type": "integer",
          "format": "int64"
        },
        "delegateTokenName": {
          "type": "string"
        }
      }
    },
    "DelegateEntityOwner": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        }
      }
    },
    "DelegateScope": {
      "type": "object",
      "required": ["lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "taskTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SCRIPT",
              "HTTP",
              "SPLUNK",
              "APPDYNAMICS",
              "INSTANA",
              "NEWRELIC",
              "STACKDRIVER",
              "DYNA_TRACE",
              "PROMETHEUS",
              "CLOUD_WATCH",
              "JENKINS",
              "COMMAND",
              "BAMBOO",
              "DOCKER",
              "ECR",
              "GCR",
              "GCS",
              "GCB",
              "GCP",
              "ACR",
              "NEXUS",
              "S3",
              "AZURE_ARTIFACTS",
              "AZURE_VMSS",
              "AZURE_APP_SERVICE",
              "AZURE_ARM",
              "ELK",
              "LOGZ",
              "SUMO",
              "ARTIFACTORY",
              "HOST_VALIDATION",
              "KMS",
              "GIT",
              "CONTAINER",
              "AMI",
              "HELM",
              "COLLABORATION_PROVIDER",
              "PCF",
              "SPOTINST",
              "APM",
              "LOG",
              "CLOUD_FORMATION",
              "TERRAFORM",
              "TERRAGRUNT",
              "AWS",
              "LDAP",
              "K8S",
              "SMB",
              "SFTP",
              "TRIGGER",
              "JIRA",
              "CONNECTIVITY_VALIDATION",
              "BUILD_SOURCE",
              "CUSTOM",
              "SHELL_SCRIPT_PROVISION",
              "SERVICENOW",
              "HELM_REPO_CONFIG_VALIDATION",
              "HELM_VALUES_FETCH_TASK",
              "GUARD_24x7",
              "CI",
              "SLACK",
              "ARTIFACT_COLLECT_NG",
              "K8S_NG",
              "CAPABILITY_VALIDATION",
              "JIRA_NG",
              "CVNG",
              "NOTIFICATION",
              "HTTP_NG",
              "SHELL_SCRIPT_NG",
              "GIT_NG",
              "BATCH_CAPABILITY_CHECK",
              "CUSTOM_MANIFEST_VALUES_FETCH_TASK",
              "CUSTOM_MANIFEST_FETCH_TASK",
              "TERRAFORM_NG",
              "CE",
              "SERVICENOW_NG"
            ]
          }
        },
        "environmentTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["PROD", "NON_PROD", "ALL"]
          }
        },
        "applications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceInfrastructures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "infrastructureDefinitions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "DelegateSizeDetails": {
      "type": "object",
      "properties": {
        "size": {
          "type": "string",
          "enum": ["EXTRA_SMALL", "LAPTOP", "SMALL", "MEDIUM", "LARGE"]
        },
        "label": {
          "type": "string"
        },
        "taskLimit": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "ram": {
          "type": "integer",
          "format": "int32"
        },
        "cpu": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RestResponseDelegate": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Delegate"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateRegisterResponse": {
      "type": "object",
      "properties": {
        "delegateId": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": ["SELF_DESTRUCT", "MIGRATE"]
        },
        "migrateUrl": {
          "type": "string"
        },
        "sequenceNum": {
          "type": "string"
        },
        "delegateRandomToken": {
          "type": "string"
        }
      }
    },
    "RestResponseDelegateRegisterResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateRegisterResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateParams": {
      "type": "object",
      "properties": {
        "delegateId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "sessionIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "delegateSize": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "delegateName": {
          "type": "string"
        },
        "delegateGroupName": {
          "type": "string"
        },
        "delegateGroupId": {
          "type": "string"
        },
        "delegateProfileId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "delegateType": {
          "type": "string"
        },
        "delegateRandomToken": {
          "type": "string"
        },
        "sequenceNum": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "lastHeartBeat": {
          "type": "integer",
          "format": "int64"
        },
        "ng": {
          "type": "boolean"
        },
        "sampleDelegate": {
          "type": "boolean"
        },
        "keepAlivePacket": {
          "type": "boolean"
        },
        "pollingModeEnabled": {
          "type": "boolean"
        },
        "proxy": {
          "type": "boolean"
        },
        "ceEnabled": {
          "type": "boolean"
        },
        "supportedTaskTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currentlyExecutingDelegateTasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delegateTokenName": {
          "type": "string"
        }
      }
    },
    "DelegateProfileParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "profileId": {
          "type": "string"
        },
        "profileLastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "scriptContent": {
          "type": "string"
        }
      }
    },
    "RestResponseDelegateProfileParams": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateProfileParams"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateConnectionHeartbeat": {
      "type": "object",
      "properties": {
        "delegateConnectionId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "DelegateTaskPackage": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "delegateTaskId": {
          "type": "string"
        },
        "delegateId": {
          "type": "string"
        },
        "logStreamingToken": {
          "type": "string"
        },
        "delegateCallbackToken": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/TaskData"
        },
        "encryptionConfigs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EncryptionConfig"
          }
        },
        "secretDetails": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/SecretDetail"
          }
        },
        "secrets": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "executionCapabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionCapability"
          }
        },
        "logStreamingAbstractions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Duration": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "integer",
          "format": "int64"
        },
        "units": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemporalUnit"
          }
        },
        "negative": {
          "type": "boolean"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "zero": {
          "type": "boolean"
        }
      }
    },
    "EncryptedRecord": {
      "type": "object",
      "properties": {
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "name": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EncryptedDataParams"
          }
        },
        "path": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "kmsId": {
          "type": "string"
        },
        "encryptionKey": {
          "type": "string"
        },
        "encryptedValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backupEncryptedValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backupEncryptionKey": {
          "type": "string"
        },
        "backupKmsId": {
          "type": "string"
        },
        "backupEncryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "base64Encoded": {
          "type": "boolean"
        },
        "additionalMetadata": {
          "$ref": "#/definitions/AdditionalMetadata"
        }
      }
    },
    "ExecutionCapability": {
      "type": "object",
      "properties": {
        "capabilityType": {
          "type": "string",
          "enum": [
            "SOCKET",
            "ALWAYS_TRUE",
            "PROCESS_EXECUTOR",
            "AWS_REGION",
            "SYSTEM_ENV",
            "HTTP",
            "HELM_INSTALL",
            "CHART_MUSEUM",
            "ALWAYS_FALSE",
            "SMTP",
            "WINRM_HOST_CONNECTION",
            "SSH_HOST_CONNECTION",
            "SFTP",
            "PCF_AUTO_SCALAR",
            "PCF_CONNECTIVITY",
            "PCF_INSTALL",
            "POWERSHELL",
            "HELM_COMMAND",
            "CLUSTER_MASTER_URL",
            "SHELL_CONNECTION",
            "GIT_CONNECTION",
            "KUSTOMIZE",
            "SMB",
            "SELECTORS",
            "GIT_CONNECTION_NG",
            "GIT_INSTALLATION",
            "LITE_ENGINE",
            "CI_VM"
          ]
        },
        "maxValidityPeriod": {
          "$ref": "#/definitions/Duration"
        },
        "periodUntilNextValidation": {
          "$ref": "#/definitions/Duration"
        }
      }
    },
    "SecretDetail": {
      "type": "object",
      "properties": {
        "configUuid": {
          "type": "string"
        },
        "encryptedRecord": {
          "$ref": "#/definitions/EncryptedRecord"
        }
      }
    },
    "TaskData": {
      "type": "object",
      "required": ["taskType"],
      "properties": {
        "parked": {
          "type": "boolean"
        },
        "async": {
          "type": "boolean"
        },
        "taskType": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "timeout": {
          "type": "integer",
          "format": "int64"
        },
        "expressionFunctorToken": {
          "type": "integer",
          "format": "int32"
        },
        "expressions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TemporalUnit": {
      "type": "object",
      "properties": {
        "timeBased": {
          "type": "boolean"
        },
        "dateBased": {
          "type": "boolean"
        },
        "durationEstimated": {
          "type": "boolean"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        }
      }
    },
    "DelegateConnectionResultDetail": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "delegateId": {
          "type": "string"
        },
        "criteria": {
          "type": "string"
        },
        "validated": {
          "type": "boolean"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DelegateScripts": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "doUpgrade": {
          "type": "boolean"
        },
        "stopScript": {
          "type": "string"
        },
        "startScript": {
          "type": "string"
        },
        "delegateScript": {
          "type": "string"
        },
        "setupProxyScript": {
          "type": "string"
        }
      }
    },
    "RestResponseDelegateScripts": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateScripts"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateTaskAbortEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/DelegateTaskEvent"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "DelegateTaskEvent": {
      "type": "object",
      "discriminator": "eventType",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "delegateTaskId": {
          "type": "string"
        },
        "sync": {
          "type": "boolean"
        }
      }
    },
    "DelegateTaskEventsResponse": {
      "type": "object",
      "properties": {
        "delegateTaskEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateTaskEvent"
          }
        }
      }
    },
    "DelegateHeartbeatResponse": {
      "type": "object",
      "properties": {
        "delegateId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "useCdn": {
          "type": "boolean"
        },
        "jreVersion": {
          "type": "string"
        },
        "delegateRandomToken": {
          "type": "string"
        },
        "sequenceNumber": {
          "type": "string"
        }
      }
    },
    "RestResponseDelegateHeartbeatResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateHeartbeatResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ConnectorHeartbeatDelegateResponse": {
      "type": "object",
      "properties": {
        "accountIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "connectorValidationResult": {
          "$ref": "#/definitions/ConnectorValidationResult"
        }
      }
    },
    "ConnectorValidationResult": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "PARTIAL", "UNKNOWN"]
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          }
        },
        "errorSummary": {
          "type": "string"
        },
        "testedAt": {
          "type": "integer",
          "format": "int64"
        },
        "delegateId": {
          "type": "string"
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StreamingOutput": {
      "type": "object"
    },
    "DelegateFile": {
      "type": "object",
      "properties": {
        "fileUuid": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileLength": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "checksumType": {
          "type": "string",
          "enum": ["MD5", "SHA1", "SHA256"]
        },
        "checksum": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "fileId": {
          "type": "string"
        },
        "bucket": {
          "type": "string",
          "enum": [
            "LOB",
            "ARTIFACTS",
            "AUDITS",
            "CONFIGS",
            "CUSTOM_MANIFEST",
            "LOGS",
            "PLATFORMS",
            "TERRAFORM_STATE",
            "PROFILE_RESULTS",
            "TERRAFORM_PLAN",
            "EXPORT_EXECUTIONS"
          ]
        },
        "entityId": {
          "type": "string"
        },
        "localFilePath": {
          "type": "string"
        },
        "delegateId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "length": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseDelegateFile": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateFile"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateProfile": {
      "type": "object",
      "required": ["lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "primary": {
          "type": "boolean"
        },
        "approvalRequired": {
          "type": "boolean"
        },
        "startupScript": {
          "type": "string"
        },
        "scopingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateProfileScopingRule"
          }
        },
        "selectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "identifier": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/DelegateEntityOwner"
        },
        "ng": {
          "type": "boolean"
        }
      }
    },
    "DelegateProfileScopingRule": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "scopingEntities": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "RestResponseDelegateProfile": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateProfile"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseDelegateProfile": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateProfile"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateProfileDetails": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "primary": {
          "type": "boolean"
        },
        "approvalRequired": {
          "type": "boolean"
        },
        "startupScript": {
          "type": "string"
        },
        "scopingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScopingRuleDetails"
          }
        },
        "selectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUserDetails"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUserDetails"
        },
        "identifier": {
          "type": "string"
        }
      }
    },
    "EmbeddedUserDetails": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "RestResponseDelegateProfileDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateProfileDetails"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ScopingRuleDetails": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "applicationId": {
          "type": "string"
        },
        "serviceIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "environmentTypeId": {
          "type": "string"
        },
        "environmentIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ScopingRules": {
      "type": "object",
      "properties": {
        "scopingRuleDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScopingRuleDetails"
          }
        }
      }
    },
    "RestResponsePageResponseDelegateProfileDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateProfileDetails"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseDelegateScope": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateScope"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseDelegateScope": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateScope"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateSelectionLogParams": {
      "type": "object",
      "properties": {
        "delegateId": {
          "type": "string"
        },
        "delegateType": {
          "type": "string"
        },
        "delegateName": {
          "type": "string"
        },
        "delegateHostName": {
          "type": "string"
        },
        "delegateProfileName": {
          "type": "string"
        },
        "conclusion": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "eventTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "profileScopingRulesDetails": {
          "$ref": "#/definitions/ProfileScopingRulesDetails"
        }
      }
    },
    "ProfileScopingRulesDetails": {
      "type": "object",
      "properties": {
        "profileId": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        },
        "scopingRulesDescriptions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseListDelegateSelectionLogParams": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateSelectionLogParams"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateSelectionLogResponse": {
      "type": "object",
      "properties": {
        "delegateSelectionLogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateSelectionLogParams"
          }
        },
        "taskSetupAbstractions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseDelegateSelectionLogResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateSelectionLogResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseDelegate": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Delegate"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateScalingGroup": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "delegates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateInner"
          }
        }
      }
    },
    "DelegateStatus": {
      "type": "object",
      "properties": {
        "publishedVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delegates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateInner"
          }
        },
        "scalingGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateScalingGroup"
          }
        }
      }
    },
    "RestResponseDelegateStatus": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateStatus"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseDouble": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "number",
          "format": "double"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CEDelegateStatus": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "found": {
          "type": "boolean"
        },
        "ceEnabled": {
          "type": "boolean"
        },
        "lastHeartBeat": {
          "type": "integer",
          "format": "int64"
        },
        "delegateName": {
          "type": "string"
        },
        "delegateType": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["ENABLED", "WAITING_FOR_APPROVAL", "DISABLED", "DELETED"]
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateConnectionDetails"
          }
        },
        "metricsServerCheck": {
          "$ref": "#/definitions/MetricsServerCheck"
        },
        "permissionRuleList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        }
      }
    },
    "MetricsServerCheck": {
      "type": "object",
      "properties": {
        "isInstalled": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "RestResponseCEDelegateStatus": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CEDelegateStatus"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Rule": {
      "type": "object",
      "properties": {
        "apiGroups": {
          "type": "string"
        },
        "resources": {
          "type": "string"
        },
        "verbs": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "RestResponseListDelegateSizeDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateSizeDetails"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateScopes": {
      "type": "object",
      "properties": {
        "includeScopeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludeScopeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DelegateTags": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DelegateSetupDetails": {
      "type": "object",
      "required": ["delegateType", "name"],
      "properties": {
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "enum": ["EXTRA_SMALL", "LAPTOP", "SMALL", "MEDIUM", "LARGE"]
        },
        "delegateConfigurationId": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "k8sConfigDetails": {
          "$ref": "#/definitions/K8sConfigDetails"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "delegateType": {
          "type": "string"
        },
        "tokenName": {
          "type": "string"
        }
      }
    },
    "K8sConfigDetails": {
      "type": "object",
      "properties": {
        "k8sPermissionType": {
          "type": "string",
          "enum": ["CLUSTER_ADMIN", "CLUSTER_VIEWER", "NAMESPACE_ADMIN"]
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "RestResponseDelegateSetupDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateSetupDetails"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseTaskSelectorMap": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TaskSelectorMap"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TaskSelectorMap": {
      "type": "object",
      "required": ["lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "taskGroup": {
          "type": "string",
          "enum": [
            "SCRIPT",
            "HTTP",
            "SPLUNK",
            "APPDYNAMICS",
            "INSTANA",
            "NEWRELIC",
            "STACKDRIVER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "CLOUD_WATCH",
            "JENKINS",
            "COMMAND",
            "BAMBOO",
            "DOCKER",
            "ECR",
            "GCR",
            "GCS",
            "GCB",
            "GCP",
            "ACR",
            "NEXUS",
            "S3",
            "AZURE_ARTIFACTS",
            "AZURE_VMSS",
            "AZURE_APP_SERVICE",
            "AZURE_ARM",
            "ELK",
            "LOGZ",
            "SUMO",
            "ARTIFACTORY",
            "HOST_VALIDATION",
            "KMS",
            "GIT",
            "CONTAINER",
            "AMI",
            "HELM",
            "COLLABORATION_PROVIDER",
            "PCF",
            "SPOTINST",
            "APM",
            "LOG",
            "CLOUD_FORMATION",
            "TERRAFORM",
            "TERRAGRUNT",
            "AWS",
            "LDAP",
            "K8S",
            "SMB",
            "SFTP",
            "TRIGGER",
            "JIRA",
            "CONNECTIVITY_VALIDATION",
            "BUILD_SOURCE",
            "CUSTOM",
            "SHELL_SCRIPT_PROVISION",
            "SERVICENOW",
            "HELM_REPO_CONFIG_VALIDATION",
            "HELM_VALUES_FETCH_TASK",
            "GUARD_24x7",
            "CI",
            "SLACK",
            "ARTIFACT_COLLECT_NG",
            "K8S_NG",
            "CAPABILITY_VALIDATION",
            "JIRA_NG",
            "CVNG",
            "NOTIFICATION",
            "HTTP_NG",
            "SHELL_SCRIPT_NG",
            "GIT_NG",
            "BATCH_CAPABILITY_CHECK",
            "CUSTOM_MANIFEST_VALUES_FETCH_TASK",
            "CUSTOM_MANIFEST_FETCH_TASK",
            "TERRAFORM_NG",
            "CE",
            "SERVICENOW_NG"
          ]
        },
        "selectors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseListTaskSelectorMap": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSelectorMap"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateHeartbeatDetails": {
      "type": "object",
      "properties": {
        "numberOfRegisteredDelegates": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfConnectedDelegates": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseDelegateHeartbeatDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DelegateHeartbeatDetails"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DelegateInitializationDetails": {
      "type": "object",
      "properties": {
        "delegateId": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "initialized": {
          "type": "boolean"
        },
        "profileError": {
          "type": "boolean"
        },
        "profileExecutedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseListDelegateInitializationDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DelegateInitializationDetails"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DynaTraceApplication": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "RestResponseListDynaTraceApplication": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DynaTraceApplication"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DynaTraceSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "serviceMethods": {
          "type": "string"
        },
        "serviceEntityId": {
          "type": "string"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "ElkSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "query": {
          "type": "string"
        },
        "indices": {
          "type": "string"
        },
        "messageField": {
          "type": "string"
        },
        "timeStampField": {
          "type": "string"
        },
        "timeStampFieldFormat": {
          "type": "string"
        },
        "queryType": {
          "type": "string",
          "enum": ["TERM", "MATCH", "MATCH_PHRASE"]
        },
        "hostNameField": {
          "type": "string"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "RestResponseObject": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ElkIndexTemplate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RestResponseMapStringElkIndexTemplate": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ElkIndexTemplate"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseEnvironment": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Environment"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "KubernetesPayload": {
      "type": "object",
      "properties": {
        "advancedConfig": {
          "type": "string"
        }
      }
    },
    "CloneMetadata": {
      "type": "object",
      "properties": {
        "targetAppId": {
          "type": "string"
        },
        "serviceMapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "workflow": {
          "$ref": "#/definitions/Workflow"
        },
        "environment": {
          "$ref": "#/definitions/Environment"
        }
      }
    },
    "Workflow": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "name", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "workflowType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        },
        "envId": {
          "type": "string"
        },
        "defaultVersion": {
          "type": "integer",
          "format": "int32"
        },
        "templatized": {
          "type": "boolean"
        },
        "templateExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateExpression"
          }
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "notes": {
          "type": "string"
        },
        "orchestration": {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        "orchestrationWorkflow": {
          "$ref": "#/definitions/OrchestrationWorkflow"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "workflowExecutions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowExecution"
          }
        },
        "serviceId": {
          "type": "string"
        },
        "infraMappingId": {
          "type": "string"
        },
        "infraDefinitionId": {
          "type": "string"
        },
        "creationFlags": {
          "$ref": "#/definitions/WorkflowCreationFlags"
        },
        "envTemplatized": {
          "type": "boolean"
        },
        "tagLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTagLink"
          }
        },
        "templatizedServiceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "linkedTemplateUuids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "linkedArtifactStreamIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deploymentTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SSH",
              "AWS_CODEDEPLOY",
              "ECS",
              "SPOTINST",
              "KUBERNETES",
              "HELM",
              "AWS_LAMBDA",
              "AMI",
              "WINRM",
              "PCF",
              "AZURE_VMSS",
              "AZURE_WEBAPP",
              "CUSTOM"
            ]
          }
        },
        "accountId": {
          "type": "string"
        },
        "sample": {
          "type": "boolean"
        }
      }
    },
    "WorkflowCreationFlags": {
      "type": "object",
      "properties": {
        "ecsBGType": {
          "type": "string"
        },
        "awsTrafficShiftType": {
          "type": "string"
        },
        "ecsBgDnsType": {
          "type": "boolean"
        },
        "awsTrafficShiftAlbType": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageResponseEnvironment": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Environment"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseWorkflowExecution": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/WorkflowExecution"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseWorkflowExecution": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowExecution"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "PipelineStageGroupedInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "pipelineStageElementNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parallelIndex": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseListPipelineStageGroupedInfo": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineStageGroupedInfo"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseRollbackConfirmation": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/RollbackConfirmation"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RollbackConfirmation": {
      "type": "object",
      "properties": {
        "validationMessage": {
          "type": "string"
        },
        "activeWorkflowExecution": {
          "$ref": "#/definitions/WorkflowExecution"
        },
        "workflowId": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        }
      }
    },
    "ExecutionInterrupt": {
      "type": "object",
      "required": ["appId", "executionInterruptType", "executionUuid", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "executionInterruptType": {
          "type": "string",
          "enum": [
            "ABORT",
            "ABORT_ALL",
            "PAUSE",
            "PAUSE_FOR_INPUTS",
            "PAUSE_ALL",
            "RESUME",
            "RESUME_ALL",
            "RETRY",
            "IGNORE",
            "WAITING_FOR_MANUAL_INTERVENTION",
            "MARK_FAILED",
            "MARK_SUCCESS",
            "ROLLBACK",
            "ROLLBACK_PROVISIONER_AFTER_PHASES",
            "NEXT_STEP",
            "END_EXECUTION",
            "ROLLBACK_DONE",
            "MARK_EXPIRED",
            "CONTINUE_WITH_DEFAULTS",
            "CONTINUE_PIPELINE_STAGE"
          ]
        },
        "seized": {
          "type": "boolean"
        },
        "envId": {
          "type": "string"
        },
        "executionUuid": {
          "type": "string"
        },
        "stateExecutionInstanceId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RestResponseExecutionInterrupt": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ExecutionInterrupt"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ApprovalDetails": {
      "type": "object",
      "properties": {
        "approvalId": {
          "type": "string"
        },
        "approvedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "comments": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": ["APPROVE", "REJECT"]
        },
        "approvalFromSlack": {
          "type": "boolean"
        },
        "approvalFromGraphQL": {
          "type": "boolean"
        },
        "approvalViaApiKey": {
          "type": "boolean"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        }
      }
    },
    "RequiredExecutionArgs": {
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          }
        },
        "defaultExecutionArgs": {
          "$ref": "#/definitions/ExecutionArgs"
        }
      }
    },
    "RestResponseRequiredExecutionArgs": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/RequiredExecutionArgs"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DeploymentMetadata": {
      "type": "object",
      "properties": {
        "artifactRequiredServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "artifactRequiredServiceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "envSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvSummary"
          }
        },
        "envIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deploymentTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SSH",
              "AWS_CODEDEPLOY",
              "ECS",
              "SPOTINST",
              "KUBERNETES",
              "HELM",
              "AWS_LAMBDA",
              "AMI",
              "WINRM",
              "PCF",
              "AZURE_VMSS",
              "AZURE_WEBAPP",
              "CUSTOM"
            ]
          }
        },
        "artifactVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactVariable"
          }
        },
        "manifestVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManifestVariable"
          }
        },
        "manifestRequiredServiceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseDeploymentMetadata": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DeploymentMetadata"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseGraphNode": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/GraphNode"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListStateExecutionData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateExecutionData"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListStateExecutionInterrupt": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateExecutionInterrupt"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "StateExecutionInterrupt": {
      "type": "object",
      "properties": {
        "interrupt": {
          "$ref": "#/definitions/ExecutionInterrupt"
        },
        "tookAffectAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RestResponseStateInspection": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/StateInspection"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListStateExecutionElement": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateExecutionElement"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "StateExecutionElement": {
      "type": "object",
      "properties": {
        "executionContextElementId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ABORTED",
            "DISCONTINUING",
            "ERROR",
            "FAILED",
            "NEW",
            "PAUSED",
            "PAUSING",
            "QUEUED",
            "RESUMED",
            "RUNNING",
            "SCHEDULED",
            "STARTING",
            "SUCCESS",
            "WAITING",
            "SKIPPED",
            "ABORTING",
            "REJECTED",
            "EXPIRED",
            "PREPARING"
          ]
        },
        "name": {
          "type": "string"
        },
        "progress": {
          "type": "integer",
          "format": "int32"
        },
        "runningSteps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseSetWorkflowExecutionBaseline": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/WorkflowExecutionBaseline"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "WorkflowExecutionBaseline": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "workflowId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "pipelineExecutionId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseWorkflowExecutionBaseline": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/WorkflowExecutionBaseline"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListArtifact": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ApprovalAuthorization": {
      "type": "object",
      "properties": {
        "authorized": {
          "type": "boolean"
        }
      }
    },
    "RestResponseApprovalAuthorization": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ApprovalAuthorization"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ConcurrentExecutionResponse": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "enum": ["BLOCKED", "ACTIVE", "FINISHED", "REJECTED"]
        },
        "unitType": {
          "type": "string",
          "enum": ["INFRA", "CUSTOM", "NONE"]
        },
        "executions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowExecution"
          }
        },
        "infrastructureDetails": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "RestResponseConcurrentExecutionResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ConcurrentExecutionResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapStringGraphGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/GraphGroup"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseWorkflowExecutionInfo": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/WorkflowExecutionInfo"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseWorkflowVariablesMetadata": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/WorkflowVariablesMetadata"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "WorkflowVariablesMetadata": {
      "type": "object",
      "properties": {
        "workflowVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "changed": {
          "type": "boolean"
        },
        "changedMessage": {
          "type": "string"
        }
      }
    },
    "ExpAnalysisInfo": {
      "type": "object",
      "properties": {
        "stateExecutionId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "expName": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "mismatch": {
          "type": "boolean"
        }
      }
    },
    "RestResponseListExpAnalysisInfo": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpAnalysisInfo"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ExperimentalMessageComparisonResult": {
      "type": "object",
      "properties": {
        "stateExecutionId": {
          "type": "string"
        },
        "cvConfigId": {
          "type": "string"
        },
        "logCollectionMinute": {
          "type": "integer",
          "format": "int32"
        },
        "numVotes": {
          "type": "integer",
          "format": "int32"
        },
        "message1": {
          "type": "string"
        },
        "message2": {
          "type": "string"
        },
        "prediction": {
          "type": "string"
        },
        "cluster_type": {
          "type": "string"
        },
        "similarity": {
          "type": "number",
          "format": "double"
        },
        "modelVersion": {
          "type": "string"
        },
        "userVotes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseListExperimentalMessageComparisonResult": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExperimentalMessageComparisonResult"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ExperimentalMetricAnalysis": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "experimentalRiskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "metricValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExperimentalMetricAnalysisValue"
          }
        },
        "displayName": {
          "type": "string"
        },
        "fullMetricName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "mismatch": {
          "type": "boolean"
        }
      }
    },
    "ExperimentalMetricAnalysisValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "alertType": {
          "type": "string"
        },
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "experimentalRiskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "testValue": {
          "type": "number",
          "format": "double"
        },
        "controlValue": {
          "type": "number",
          "format": "double"
        },
        "hostAnalysisValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExperimentalMetricHostAnalysisValue"
          }
        },
        "mismatch": {
          "type": "boolean"
        }
      }
    },
    "ExperimentalMetricHostAnalysisValue": {
      "type": "object",
      "properties": {
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "experimentalRiskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "testHostName": {
          "type": "string"
        },
        "controlHostName": {
          "type": "string"
        },
        "testValues": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "controlValues": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "anomalies": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "testStartIndex": {
          "type": "integer",
          "format": "int32"
        },
        "mismatch": {
          "type": "boolean"
        }
      }
    },
    "ExperimentalMetricRecord": {
      "type": "object",
      "properties": {
        "workflowExecutionId": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "cvConfigId": {
          "type": "string"
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int32"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "experimentalRiskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "mlAnalysisType": {
          "type": "string",
          "enum": ["COMPARATIVE", "PREDICTIVE", "TIMESERIES_24x7"]
        },
        "metricAnalysis": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExperimentalMetricAnalysis"
          }
        },
        "baseLineExecutionId": {
          "type": "string"
        },
        "mismatch": {
          "type": "boolean"
        },
        "experimentStatus": {
          "type": "string",
          "enum": ["UNDETERMINED", "SUCCESS", "FAILURE"]
        }
      }
    },
    "RestResponseExperimentalMetricRecord": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ExperimentalMetricRecord"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ExperimentPerformance": {
      "type": "object"
    },
    "RestResponseExperimentPerformance": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ExperimentPerformance"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseExpAnalysisInfo": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpAnalysisInfo"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ExportExecutionsRequestSummary": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["QUEUED", "READY", "FAILED", "EXPIRED"]
        },
        "totalExecutions": {
          "type": "integer",
          "format": "int64"
        },
        "triggeredAt": {
          "type": "string",
          "format": "date-time"
        },
        "statusLink": {
          "type": "string"
        },
        "downloadLink": {
          "type": "string"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "RestResponseExportExecutionsRequestSummary": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ExportExecutionsRequestSummary"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ExportExecutionsUserParams": {
      "type": "object",
      "properties": {
        "outputFormat": {
          "type": "string",
          "enum": ["JSON"]
        },
        "notifyOnlyTriggeringUser": {
          "type": "boolean"
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdByType": {
          "type": "string",
          "enum": ["USER", "API_KEY", "TRIGGER"]
        }
      }
    },
    "ExportExecutionsRequestLimitChecks": {
      "type": "object",
      "properties": {
        "queuedRequests": {
          "$ref": "#/definitions/LimitCheck"
        },
        "executionCount": {
          "$ref": "#/definitions/LimitCheck"
        }
      }
    },
    "LimitCheck": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseExportExecutionsRequestLimitChecks": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ExportExecutionsRequestLimitChecks"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ExecutionStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "FeatureFlag": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseFeatureFlag": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/FeatureFlag"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListFeatureFlag": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureFlag"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "FeatureUsageComplianceReport": {
      "type": "object",
      "properties": {
        "featureName": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "FeaturesUsageComplianceReport": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "targetAccountType": {
          "type": "string"
        },
        "featureUsageComplianceReports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureUsageComplianceReport"
          }
        }
      }
    },
    "RestResponseFeaturesUsageComplianceReport": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/FeaturesUsageComplianceReport"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseFeatureRestrictions": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "GcpBillingAccount": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "organizationSettingId": {
          "type": "string"
        },
        "gcpBillingAccountId": {
          "type": "string"
        },
        "gcpBillingAccountName": {
          "type": "string"
        },
        "exportEnabled": {
          "type": "boolean"
        },
        "bqProjectId": {
          "type": "string"
        },
        "bqDatasetId": {
          "type": "string"
        },
        "bqDataSetRegion": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseGcpBillingAccount": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/GcpBillingAccount"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListGcpBillingAccount": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GcpBillingAccount"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "GcpOrganization": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "organizationName": {
          "type": "string"
        },
        "serviceAccountEmail": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseGcpOrganization": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/GcpOrganization"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "GitFileActivitySummary": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "commitId": {
          "type": "string"
        },
        "branchName": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "gitConnectorId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "commitMessage": {
          "type": "string"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "gitToHarness": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": ["QUEUED", "RUNNING", "COMPLETED", "FAILED", "COMPLETED_WITH_ERRORS", "SKIPPED"]
        },
        "fileProcessingSummary": {
          "$ref": "#/definitions/GitFileProcessingSummary"
        },
        "connectorName": {
          "type": "string"
        },
        "repositoryInfo": {
          "$ref": "#/definitions/GitRepositoryInfo"
        }
      }
    },
    "GitFileProcessingSummary": {
      "type": "object",
      "properties": {
        "failureCount": {
          "type": "integer",
          "format": "int64"
        },
        "successCount": {
          "type": "integer",
          "format": "int64"
        },
        "totalCount": {
          "type": "integer",
          "format": "int64"
        },
        "skippedCount": {
          "type": "integer",
          "format": "int64"
        },
        "queuedCount": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GitRepositoryInfo": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "displayUrl": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": ["GITHUB", "BITBUCKET", "GITLAB", "UNKNOWN"]
        }
      }
    },
    "RestResponsePageResponseGitFileActivitySummary": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitFileActivitySummary"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "GitSyncError": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "yamlFilePath": {
          "type": "string"
        },
        "changeType": {
          "type": "string"
        },
        "failureReason": {
          "type": "string"
        },
        "yamlContent": {
          "type": "string"
        },
        "gitCommitId": {
          "type": "string"
        },
        "nextIteration": {
          "type": "integer",
          "format": "int64"
        },
        "fullSyncPath": {
          "type": "boolean"
        },
        "lastAttemptedYaml": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["ACTIVE", "DISCARDED", "EXPIRED", "RESOLVED", "OVERRIDDEN"]
        },
        "gitConnectorId": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "gitConnectorName": {
          "type": "string"
        },
        "repositoryInfo": {
          "$ref": "#/definitions/GitRepositoryInfo"
        },
        "branchName": {
          "type": "string"
        },
        "yamlGitConfigId": {
          "type": "string"
        },
        "commitTime": {
          "type": "integer",
          "format": "int64"
        },
        "additionalErrorDetails": {
          "$ref": "#/definitions/GitSyncErrorDetails"
        },
        "gitSyncDirection": {
          "type": "string"
        },
        "userDoesNotHavePermForFile": {
          "type": "boolean"
        }
      }
    },
    "GitSyncErrorDetails": {
      "type": "object"
    },
    "RestResponsePageResponseGitSyncError": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitSyncError"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "GitProcessingError": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "gitConnectorId": {
          "type": "string"
        },
        "branchName": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "connectorName": {
          "type": "string"
        },
        "repositoryInfo": {
          "$ref": "#/definitions/GitRepositoryInfo"
        }
      }
    },
    "RestResponsePageResponseGitProcessingError": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitProcessingError"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "GitFileActivity": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "fileContent": {
          "type": "string"
        },
        "commitId": {
          "type": "string"
        },
        "processingCommitId": {
          "type": "string"
        },
        "changeType": {
          "type": "string",
          "enum": ["ADD", "RENAME", "MODIFY", "DELETE", "NONE"]
        },
        "errorMessage": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILED", "DISCARDED", "EXPIRED", "SKIPPED", "QUEUED"]
        },
        "triggeredBy": {
          "type": "string",
          "enum": ["USER", "GIT", "FULL_SYNC"]
        },
        "changeFromAnotherCommit": {
          "type": "boolean"
        },
        "commitMessage": {
          "type": "string"
        },
        "processingCommitMessage": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "gitConnectorId": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "branchName": {
          "type": "string"
        },
        "connectorName": {
          "type": "string"
        },
        "repositoryInfo": {
          "$ref": "#/definitions/GitRepositoryInfo"
        },
        "userDoesNotHavePermForFile": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageResponseGitFileActivity": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitFileActivity"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ChangeSetDTO": {
      "type": "object",
      "properties": {
        "gitDetail": {
          "$ref": "#/definitions/GitDetail"
        },
        "status": {
          "type": "string",
          "enum": ["QUEUED", "RUNNING", "FAILED", "COMPLETED", "SKIPPED"]
        },
        "changeSetId": {
          "type": "string"
        },
        "gitToHarness": {
          "type": "boolean"
        },
        "changesetInformation": {
          "$ref": "#/definitions/ChangesetInformation"
        }
      }
    },
    "ChangesetInformation": {
      "type": "object"
    },
    "GitDetail": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "repositoryUrl": {
          "type": "string"
        },
        "branchName": {
          "type": "string"
        },
        "yamlGitConfigId": {
          "type": "string"
        },
        "gitConnectorId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "gitCommitId": {
          "type": "string"
        },
        "connectorName": {
          "type": "string"
        },
        "repositoryInfo": {
          "$ref": "#/definitions/GitRepositoryInfo"
        }
      }
    },
    "RestResponseListChangeSetDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangeSetDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "GitToHarnessErrorCommitStats": {
      "type": "object",
      "properties": {
        "gitCommitId": {
          "type": "string"
        },
        "failedCount": {
          "type": "integer",
          "format": "int32"
        },
        "commitTime": {
          "type": "integer",
          "format": "int64"
        },
        "gitConnectorId": {
          "type": "string"
        },
        "branchName": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "gitConnectorName": {
          "type": "string"
        },
        "commitMessage": {
          "type": "string"
        },
        "errorsForSummaryView": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitSyncError"
          }
        },
        "repositoryInfo": {
          "$ref": "#/definitions/GitRepositoryInfo"
        }
      }
    },
    "RestResponsePageResponseGitToHarnessErrorCommitStats": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitToHarnessErrorCommitStats"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseInteger": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "integer",
          "format": "int32"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListGitDetail": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitDetail"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AccessTokenBean": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "tokenValue": {
          "type": "string"
        },
        "expirationTimeMillis": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseAccessTokenBean": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AccessTokenBean"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseSampleAppStatus": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SampleAppStatus"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SampleAppEntityStatus": {
      "type": "object",
      "properties": {
        "entityName": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "health": {
          "type": "string",
          "enum": ["GOOD", "BAD"]
        }
      }
    },
    "SampleAppStatus": {
      "type": "object",
      "properties": {
        "deploymentType": {
          "type": "string"
        },
        "health": {
          "type": "string",
          "enum": ["GOOD", "BAD"]
        },
        "statusList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleAppEntityStatus"
          }
        }
      }
    },
    "HarnessTag": {
      "type": "object",
      "required": ["lastUpdatedAt"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "tagType": {
          "type": "string",
          "enum": ["USER", "HARNESS"]
        },
        "allowedValues": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "inUseValues": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseHarnessTag": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/HarnessTag"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseHarnessTag": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTag"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseHarnessTagLink": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTagLink"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HarnessUserGroup": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "memberIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "accountIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "groupType": {
          "type": "string",
          "enum": ["DEFAULT", "RESTRICTED"]
        }
      }
    },
    "RestResponseListHarnessUserGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessUserGroup"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HarnessSupportUserDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        }
      }
    },
    "RestResponseListHarnessSupportUserDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessSupportUserDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseHarnessUserGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/HarnessUserGroup"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HarnessUserGroupDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "emailIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "accountIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseHost": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Host"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseHost": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Host"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListAccount": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListUser": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseUser": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/User"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AccountSettingsResponse": {
      "type": "object",
      "properties": {
        "authenticationMechanism": {
          "type": "string",
          "enum": ["USER_PASSWORD", "SAML", "LDAP", "OAUTH"]
        },
        "allowedDomains": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "oauthProviderTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": ["AZURE", "BITBUCKET", "GITHUB", "GITLAB", "GOOGLE", "LINKEDIN"]
          }
        }
      }
    },
    "RestResponseAccountSettingsResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AccountSettingsResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "OauthUserInfo": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "utmInfo": {
          "$ref": "#/definitions/UtmInfo"
        },
        "freemiumProducts": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["CD", "CE", "CI"]
          }
        },
        "freemiumAssistedOption": {
          "type": "boolean"
        }
      }
    },
    "LdapIdentificationInfo": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OauthIdentificationInfo": {
      "type": "object",
      "properties": {
        "providers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": ["AZURE", "BITBUCKET", "GITHUB", "GITLAB", "GOOGLE", "LINKEDIN"]
          }
        }
      }
    },
    "RestResponseRestrictedSwitchAccountInfo": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/RestrictedSwitchAccountInfo"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestrictedSwitchAccountInfo": {
      "type": "object",
      "properties": {
        "skipReAuthentication": {
          "type": "boolean"
        },
        "authenticationMechanism": {
          "type": "string",
          "enum": ["USER_PASSWORD", "SAML", "LDAP", "OAUTH"]
        },
        "ldapIdentificationInfo": {
          "$ref": "#/definitions/LdapIdentificationInfo"
        },
        "oauthIdentificationInfo": {
          "$ref": "#/definitions/OauthIdentificationInfo"
        },
        "samlIdentificationInfo": {
          "$ref": "#/definitions/SamlIdentificationInfo"
        },
        "whitelistedDomains": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "harnessSupportGroupUser": {
          "type": "boolean"
        },
        "twoFactorAuthEnabledForAccount": {
          "type": "boolean"
        }
      }
    },
    "SamlIdentificationInfo": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string"
        },
        "metaDataFile": {
          "type": "string"
        }
      }
    },
    "LogoutResponse": {
      "type": "object",
      "properties": {
        "logoutUrl": {
          "type": "string"
        }
      }
    },
    "RestResponseLogoutResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/LogoutResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AwsSubnet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RestResponseListAwsSubnet": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsSubnet"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseInfrastructureDefinition": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/InfrastructureDefinition"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseInfrastructureDefinition": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfrastructureDefinition"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AwsAsgGetRunningCountData": {
      "type": "object",
      "properties": {
        "asgMin": {
          "type": "integer",
          "format": "int32"
        },
        "asgMax": {
          "type": "integer",
          "format": "int32"
        },
        "asgDesired": {
          "type": "integer",
          "format": "int32"
        },
        "asgName": {
          "type": "string"
        }
      }
    },
    "RestResponseAwsAsgGetRunningCountData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AwsAsgGetRunningCountData"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapDeploymentTypeListSettingVariableTypes": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "HOST_CONNECTION_ATTRIBUTES",
                "BASTION_HOST_CONNECTION_ATTRIBUTES",
                "SMTP",
                "SFTP",
                "JENKINS",
                "BAMBOO",
                "STRING",
                "SPLUNK",
                "ELK",
                "LOGZ",
                "SUMO",
                "DATA_DOG",
                "APM_VERIFICATION",
                "BUG_SNAG",
                "LOG_VERIFICATION",
                "APP_DYNAMICS",
                "NEW_RELIC",
                "DYNA_TRACE",
                "INSTANA",
                "DATA_DOG_LOG",
                "CLOUD_WATCH",
                "SCALYR",
                "ELB",
                "SLACK",
                "AWS",
                "GCS",
                "GCP",
                "AZURE",
                "PCF",
                "DIRECT",
                "KUBERNETES_CLUSTER",
                "DOCKER",
                "ECR",
                "GCR",
                "ACR",
                "PHYSICAL_DATA_CENTER",
                "KUBERNETES",
                "NEXUS",
                "ARTIFACTORY",
                "SMB",
                "AMAZON_S3",
                "GIT",
                "SSH_SESSION_CONFIG",
                "SERVICE_VARIABLE",
                "CONFIG_FILE",
                "KMS",
                "GCP_KMS",
                "JIRA",
                "SERVICENOW",
                "SECRET_TEXT",
                "YAML_GIT_SYNC",
                "VAULT",
                "VAULT_SSH",
                "AWS_SECRETS_MANAGER",
                "CYBERARK",
                "WINRM_CONNECTION_ATTRIBUTES",
                "WINRM_SESSION_CONFIG",
                "PROMETHEUS",
                "INFRASTRUCTURE_MAPPING",
                "HTTP_HELM_REPO",
                "AMAZON_S3_HELM_REPO",
                "GCS_HELM_REPO",
                "SPOT_INST",
                "AZURE_ARTIFACTS_PAT",
                "CUSTOM",
                "CE_AWS",
                "CE_GCP",
                "CE_AZURE",
                "AZURE_VAULT",
                "KUBERNETES_CLUSTER_NG",
                "GIT_NG",
                "GCP_SECRETS_MANAGER",
                "TRIGGER"
              ]
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AwsVPC": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RestResponseListAwsVPC": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsVPC"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AwsSecurityGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RestResponseListAwsSecurityGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsSecurityGroup"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AwsRoute53HostedZoneData": {
      "type": "object",
      "properties": {
        "hostedZoneId": {
          "type": "string"
        },
        "hostedZoneName": {
          "type": "string"
        }
      }
    },
    "RestResponseListAwsRoute53HostedZoneData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsRoute53HostedZoneData"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ListInfraDefinitionParams": {
      "type": "object",
      "properties": {
        "deploymentTypeFromMetaData": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InfraDefinitionDetail": {
      "type": "object",
      "properties": {
        "infrastructureDefinition": {
          "$ref": "#/definitions/InfrastructureDefinition"
        },
        "derivedInfraMappingDetailList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfraMappingDetail"
          }
        },
        "countDerivedInfraMappings": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "InfraMappingDetail": {
      "type": "object",
      "properties": {
        "infrastructureMapping": {
          "$ref": "#/definitions/InfrastructureMapping"
        },
        "workflowExecutionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowExecution"
          }
        }
      }
    },
    "RestResponseInfraDefinitionDetail": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/InfraDefinitionDetail"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AwsLoadBalancerDetails": {
      "type": "object",
      "properties": {
        "arn": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "vpcId": {
          "type": "string"
        },
        "ipAddressType": {
          "type": "string"
        },
        "dnsname": {
          "type": "string"
        }
      }
    },
    "RestResponseListAwsLoadBalancerDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsLoadBalancerDetails"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ElastiGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "capacity": {
          "$ref": "#/definitions/ElastiGroupCapacity"
        }
      }
    },
    "ElastiGroupCapacity": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "format": "int32"
        },
        "maximum": {
          "type": "integer",
          "format": "int32"
        },
        "target": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseListElastiGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElastiGroup"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseSpotinstElastigroupRunningCountData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SpotinstElastigroupRunningCountData"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SpotinstElastigroupRunningCountData": {
      "type": "object",
      "properties": {
        "elastigroupMin": {
          "type": "integer",
          "format": "int32"
        },
        "elastigroupMax": {
          "type": "integer",
          "format": "int32"
        },
        "elastigroupTarget": {
          "type": "integer",
          "format": "int32"
        },
        "elastigroupName": {
          "type": "string"
        }
      }
    },
    "DeploymentSlotData": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RestResponseListDeploymentSlotData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentSlotData"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AwsElbListener": {
      "type": "object",
      "properties": {
        "listenerArn": {
          "type": "string"
        },
        "loadBalancerArn": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsElbListenerRuleData"
          }
        }
      }
    },
    "AwsElbListenerRuleData": {
      "type": "object",
      "properties": {
        "ruleArn": {
          "type": "string"
        },
        "rulePriority": {
          "type": "string"
        },
        "ruleTargetGroupArn": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "RestResponseListAwsElbListener": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsElbListener"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseVirtualMachineScaleSetData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/VirtualMachineScaleSetData"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "VirtualMachineScaleSetData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "virtualMachineAdministratorUsername": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseInfraDefinitionDetail": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfraDefinitionDetail"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HostValidationResponse": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        },
        "errorDescription": {
          "type": "string"
        }
      }
    },
    "RestResponseListHostValidationResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostValidationResponse"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HostValidationRequest": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "computeProviderSettingId": {
          "type": "string"
        },
        "deploymentType": {
          "type": "string"
        },
        "hostConnectionAttrs": {
          "type": "string"
        },
        "executionCredential": {
          "$ref": "#/definitions/ExecutionCredential"
        },
        "hostNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseInfrastructureMapping": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/InfrastructureMapping"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseInfrastructureMapping": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfrastructureMapping"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ARMInfrastructureProvisioner": {
      "allOf": [
        {
          "$ref": "#/definitions/InfrastructureProvisioner"
        },
        {
          "type": "object",
          "properties": {
            "resourceType": {
              "type": "string",
              "enum": ["ARM", "BLUEPRINT"]
            },
            "sourceType": {
              "type": "string",
              "enum": ["TEMPLATE_BODY", "GIT"]
            },
            "scopeType": {
              "type": "string",
              "enum": ["RESOURCE_GROUP", "SUBSCRIPTION", "MANAGEMENT_GROUP", "TENANT"]
            },
            "templateBody": {
              "type": "string"
            },
            "gitFileConfig": {
              "$ref": "#/definitions/GitFileConfig"
            }
          }
        }
      ]
    },
    "BlueprintProperty": {
      "type": "object",
      "required": ["value"],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueType": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        }
      }
    },
    "CloudFormationInfrastructureProvisioner": {
      "allOf": [
        {
          "$ref": "#/definitions/InfrastructureProvisioner"
        },
        {
          "type": "object",
          "properties": {
            "sourceType": {
              "type": "string"
            },
            "templateBody": {
              "type": "string"
            },
            "templateFilePath": {
              "type": "string"
            },
            "gitFileConfig": {
              "$ref": "#/definitions/GitFileConfig"
            }
          }
        }
      ]
    },
    "InfrastructureMappingBlueprint": {
      "type": "object",
      "required": ["cloudProviderType", "deploymentType", "properties"],
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "deploymentType": {
          "type": "string",
          "enum": [
            "SSH",
            "AWS_CODEDEPLOY",
            "ECS",
            "SPOTINST",
            "KUBERNETES",
            "HELM",
            "AWS_LAMBDA",
            "AMI",
            "WINRM",
            "PCF",
            "AZURE_VMSS",
            "AZURE_WEBAPP",
            "CUSTOM"
          ]
        },
        "cloudProviderType": {
          "type": "string",
          "enum": ["AWS", "GCP", "PHYSICAL_DATA_CENTER"]
        },
        "nodeFilteringType": {
          "type": "string",
          "enum": ["AWS_INSTANCE_FILTER", "AWS_AUTOSCALING_GROUP", "AWS_ECS_EC2", "AWS_ECS_FARGATE", "AWS_ASG_AMI"]
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintProperty"
          }
        }
      }
    },
    "InfrastructureProvisioner": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "discriminator": "infrastructureProvisionerType",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "infrastructureProvisionerType": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "mappingBlueprints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfrastructureMappingBlueprint"
          }
        },
        "accountId": {
          "type": "string"
        },
        "tagLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTagLink"
          }
        }
      }
    },
    "RestResponseInfrastructureProvisioner": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/InfrastructureProvisioner"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ShellScriptInfrastructureProvisioner": {
      "allOf": [
        {
          "$ref": "#/definitions/InfrastructureProvisioner"
        },
        {
          "type": "object",
          "properties": {
            "scriptBody": {
              "type": "string"
            }
          }
        }
      ]
    },
    "TerraformInfrastructureProvisioner": {
      "allOf": [
        {
          "$ref": "#/definitions/InfrastructureProvisioner"
        },
        {
          "type": "object",
          "required": ["path"],
          "properties": {
            "sourceRepoSettingId": {
              "type": "string"
            },
            "sourceRepoBranch": {
              "type": "string"
            },
            "commitId": {
              "type": "string"
            },
            "repoName": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "normalizedPath": {
              "type": "string"
            },
            "backendConfigs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NameValuePair"
              }
            },
            "environmentVariables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NameValuePair"
              }
            },
            "templatized": {
              "type": "boolean"
            },
            "workspaces": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "kmsId": {
              "type": "string"
            },
            "skipRefreshBeforeApplyingPlan": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "TerragruntInfrastructureProvisioner": {
      "allOf": [
        {
          "$ref": "#/definitions/InfrastructureProvisioner"
        },
        {
          "type": "object",
          "required": ["path"],
          "properties": {
            "sourceRepoSettingId": {
              "type": "string"
            },
            "sourceRepoBranch": {
              "type": "string"
            },
            "commitId": {
              "type": "string"
            },
            "repoName": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "normalizedPath": {
              "type": "string"
            },
            "templatized": {
              "type": "boolean"
            },
            "secretManagerId": {
              "type": "string"
            },
            "skipRefreshBeforeApplyingPlan": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "RestResponsePageResponseInfrastructureProvisioner": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfrastructureProvisioner"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapPairDeploymentTypeCloudProviderTypeMapStringString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "InfrastructureProvisionerDetails": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "infrastructureProvisionerType": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "services": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cloudFormationSourceType": {
          "type": "string"
        },
        "azureARMResourceType": {
          "type": "string",
          "enum": ["ARM", "BLUEPRINT"]
        },
        "tagLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTagLink"
          }
        }
      }
    },
    "RestResponsePageResponseInfrastructureProvisionerDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InfrastructureProvisionerDetails"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AwsCFTemplateParamsData": {
      "type": "object",
      "properties": {
        "paramKey": {
          "type": "string"
        },
        "paramType": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        }
      }
    },
    "RestResponseListAwsCFTemplateParamsData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AwsCFTemplateParamsData"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "InstanaApplicationParams": {
      "type": "object",
      "properties": {
        "hostTagFilter": {
          "type": "string"
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanaTagFilter"
          }
        }
      }
    },
    "InstanaInfraParams": {
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "query": {
          "type": "string"
        }
      }
    },
    "InstanaSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "infraParams": {
          "$ref": "#/definitions/InstanaInfraParams"
        },
        "applicationParams": {
          "$ref": "#/definitions/InstanaApplicationParams"
        },
        "tagFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanaTagFilter"
          }
        },
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "InstanaTagFilter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": ["EQUALS", "CONTAINS", "NOT_EQUAL", "NOT_CONTAIN", "NOT_EMPTY", "IS_EMPTY"]
        }
      }
    },
    "LogDataRecord": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "workflowId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "cvConfigId": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "clusterLabel": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64"
        },
        "supervisedLabel": {
          "type": "string"
        },
        "timesLabeled": {
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "logMessage": {
          "type": "string"
        },
        "logMD5Hash": {
          "type": "string"
        },
        "clusterLevel": {
          "type": "string",
          "enum": ["L0", "L1", "L2", "H0", "H1", "H2", "HF"]
        },
        "logCollectionMinute": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseListLogDataRecord": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogDataRecord"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CVFeedbackRecord": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "cvConfigId": {
          "type": "string"
        },
        "clusterLabel": {
          "type": "integer",
          "format": "int32"
        },
        "clusterType": {
          "type": "string",
          "enum": ["CONTROL", "TEST", "UNKNOWN", "IGNORE"]
        },
        "logMessage": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "supervisedLabel": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "enum": ["BASELINE", "P5", "P4", "P3", "P2", "P1", "P0"]
        },
        "jiraLink": {
          "type": "string"
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int64"
        },
        "actionTaken": {
          "type": "string",
          "enum": ["ADD_TO_BASELINE", "REMOVE_FROM_BASELINE", "UPDATE_PRIORITY"]
        },
        "feedbackNote": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "duplicate": {
          "type": "boolean"
        }
      }
    },
    "RestResponseMapPairStringStringInteger": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListLogLabel": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "NOISE",
              "CLEAN",
              "INFRA",
              "THIRD_PARTY",
              "IMPORTANT",
              "BACKGROUND",
              "JAVA_THROWABLE",
              "ERROR",
              "EXCEPTION",
              "RUNTIME",
              "HTTP",
              "UPSTREAM",
              "DOWNSTREAM",
              "DATABASE",
              "NETWORK",
              "APM",
              "LOGS",
              "JVM",
              "WARN"
            ]
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListCVFeedbackRecord": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CVFeedbackRecord"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapStringListCVFeedbackRecord": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CVFeedbackRecord"
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapStringListString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LabeledLogRecord": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "feedbackIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "logDataRecordIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "serviceId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "LogMLFeedbackRecord": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "serviceId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "clusterLabel": {
          "type": "integer",
          "format": "int32"
        },
        "clusterType": {
          "type": "string",
          "enum": ["CONTROL", "TEST", "UNKNOWN", "IGNORE"]
        },
        "logMLFeedbackType": {
          "type": "string",
          "enum": [
            "IGNORE_SERVICE",
            "IGNORE_WORKFLOW",
            "IGNORE_WORKFLOW_EXECUTION",
            "IGNORE_ALWAYS",
            "DISMISS",
            "PRIORITIZE",
            "THUMBS_UP",
            "THUMBS_DOWN",
            "UNDO_IGNORE"
          ]
        },
        "logMessage": {
          "type": "string"
        },
        "logMD5Hash": {
          "type": "string"
        },
        "cvConfigId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "supervisedLabel": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "enum": ["BASELINE", "P5", "P4", "P3", "P2", "P1", "P0"]
        },
        "jiraLink": {
          "type": "string"
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int64"
        },
        "actionTaken": {
          "type": "string",
          "enum": ["ADD_TO_BASELINE", "REMOVE_FROM_BASELINE", "UPDATE_PRIORITY"]
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "RestResponseListLogMLFeedbackRecord": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogMLFeedbackRecord"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapStringMapStringInstanceDetails": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/InstanceDetails"
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LogMLFeedback": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "clusterType": {
          "type": "string",
          "enum": ["CONTROL", "TEST", "UNKNOWN", "IGNORE"]
        },
        "clusterLabel": {
          "type": "integer",
          "format": "int32"
        },
        "logMLFeedbackType": {
          "type": "string",
          "enum": [
            "IGNORE_SERVICE",
            "IGNORE_WORKFLOW",
            "IGNORE_WORKFLOW_EXECUTION",
            "IGNORE_ALWAYS",
            "DISMISS",
            "PRIORITIZE",
            "THUMBS_UP",
            "THUMBS_DOWN",
            "UNDO_IGNORE"
          ]
        },
        "comment": {
          "type": "string"
        },
        "logMLFeedbackId": {
          "type": "string"
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int64"
        },
        "serviceId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        }
      }
    },
    "RestResponseMapFeedbackActionListFeedbackAction": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["ADD_TO_BASELINE", "REMOVE_FROM_BASELINE", "UPDATE_PRIORITY"]
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CVCollaborationProviderParameters": {
      "type": "object",
      "properties": {
        "collaborationProviderConfigId": {
          "type": "string"
        },
        "jiraTaskParameters": {
          "$ref": "#/definitions/JiraTaskParameters"
        },
        "cvFeedbackRecord": {
          "$ref": "#/definitions/CVFeedbackRecord"
        }
      }
    },
    "JiraConfig": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encryptedPassword": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "delegateSelectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "settingType": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        },
        "certValidationRequired": {
          "type": "boolean"
        }
      }
    },
    "JiraCustomFieldValue": {
      "type": "object",
      "properties": {
        "fieldType": {
          "type": "string"
        },
        "fieldValue": {
          "type": "string"
        }
      }
    },
    "JiraTaskParameters": {
      "type": "object",
      "properties": {
        "jiraConfig": {
          "$ref": "#/definitions/JiraConfig"
        },
        "jiraAction": {
          "type": "string",
          "enum": [
            "CREATE_TICKET",
            "UPDATE_TICKET",
            "AUTH",
            "GET_PROJECTS",
            "GET_FIELDS_OPTIONS",
            "GET_STATUSES",
            "GET_CREATE_METADATA",
            "FETCH_ISSUE",
            "FETCH_ISSUE_DATA",
            "CHECK_APPROVAL"
          ]
        },
        "project": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "issueType": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customFields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JiraCustomFieldValue"
          }
        },
        "issueId": {
          "type": "string"
        },
        "updateIssueIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "createmetaExpandParam": {
          "type": "string"
        },
        "encryptionDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncryptedDataDetail"
          }
        },
        "accountId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "activityId": {
          "type": "string"
        },
        "approvalId": {
          "type": "string"
        },
        "approvalField": {
          "type": "string"
        },
        "approvalValue": {
          "type": "string"
        },
        "rejectionField": {
          "type": "string"
        },
        "rejectionValue": {
          "type": "string"
        }
      }
    },
    "CustomLogSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "logCollectionInfo": {
          "$ref": "#/definitions/LogCollectionInfo"
        },
        "host": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "LogCollectionInfo": {
      "type": "object",
      "properties": {
        "collectionUrl": {
          "type": "string"
        },
        "collectionBody": {
          "type": "string"
        },
        "responseType": {
          "type": "string",
          "enum": ["JSON"]
        },
        "responseMapping": {
          "$ref": "#/definitions/ResponseMapping"
        },
        "method": {
          "type": "string",
          "enum": ["POST", "GET"]
        }
      }
    },
    "LoginSettings": {
      "type": "object",
      "required": ["accountId", "passwordExpirationPolicy", "passwordStrengthPolicy", "userLockoutPolicy", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "userLockoutPolicy": {
          "$ref": "#/definitions/UserLockoutPolicy"
        },
        "passwordExpirationPolicy": {
          "$ref": "#/definitions/PasswordExpirationPolicy"
        },
        "passwordStrengthPolicy": {
          "$ref": "#/definitions/PasswordStrengthPolicy"
        }
      }
    },
    "PasswordExpirationPolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "daysBeforePasswordExpires": {
          "type": "integer",
          "format": "int32"
        },
        "daysBeforeUserNotifiedOfPasswordExpiration": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PasswordStrengthPolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "minNumberOfCharacters": {
          "type": "integer",
          "format": "int32"
        },
        "minNumberOfUppercaseCharacters": {
          "type": "integer",
          "format": "int32"
        },
        "minNumberOfLowercaseCharacters": {
          "type": "integer",
          "format": "int32"
        },
        "minNumberOfSpecialCharacters": {
          "type": "integer",
          "format": "int32"
        },
        "minNumberOfDigits": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseLoginSettings": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/LoginSettings"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "UserLockoutPolicy": {
      "type": "object",
      "properties": {
        "enableLockoutPolicy": {
          "type": "boolean"
        },
        "numberOfFailedAttemptsBeforeLockout": {
          "type": "integer",
          "format": "int32"
        },
        "lockOutPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "notifyUser": {
          "type": "boolean"
        },
        "userGroupsToNotify": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroup"
          }
        }
      }
    },
    "NewRelicSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "newRelicAppId": {
          "type": "integer",
          "format": "int64"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "NewRelicApplicationInstance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseListNewRelicApplicationInstance": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRelicApplicationInstance"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "NewRelicMetric": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "RestResponseListNewRelicMetric": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRelicMetric"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseNewRelicApplication": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/NewRelicApplication"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseNotification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Notification"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseNotification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notification"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseNotificationGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationGroup"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseNotificationGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/NotificationGroup"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "PerpetualTaskScheduleConfig": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "perpetualTaskType": {
          "type": "string"
        },
        "timeIntervalInMillis": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponsePerpetualTaskScheduleConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PerpetualTaskScheduleConfig"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePipeline": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Pipeline"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponsePipeline": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pipeline"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListFailureStrategy": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FailureStrategy"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "null": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": ["ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING"]
        },
        "pojo": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        }
      }
    },
    "RestResponseListStencil": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Stencil"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Stencil": {
      "type": "object",
      "properties": {
        "stencilCategory": {
          "type": "string",
          "enum": [
            "BUILD",
            "CLOUD",
            "COLLABORATION",
            "COLLECTIONS",
            "COMMANDS",
            "COMMONS",
            "CONFIGURATIONS",
            "CONTAINERS",
            "CONTROLS",
            "COPY",
            "ENVIRONMENTS",
            "FLOW_CONTROLS",
            "KUBERNETES",
            "OTHERS",
            "PROVISIONERS",
            "SCRIPTS",
            "SUB_WORKFLOW",
            "VERIFICATIONS",
            "ECS",
            "SPOTINST",
            "STAGING_ORIGINAL_EXECUTION",
            "AZURE_VMSS",
            "AZURE_WEBAPP",
            "AZURE_ARM",
            "TERRAGRUNT_PROVISION"
          ]
        },
        "jsonSchema": {
          "$ref": "#/definitions/JsonNode"
        },
        "uiSchema": {
          "type": "object"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "RestResponseListEntityType": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "SERVICE",
              "PROVISIONER",
              "ENVIRONMENT",
              "HOST",
              "RELEASE",
              "ARTIFACT",
              "SSH_USER",
              "SSH_PASSWORD",
              "SSH_APP_ACCOUNT",
              "SSH_KEY_PASSPHRASE",
              "SSH_APP_ACCOUNT_PASSOWRD",
              "SIMPLE_DEPLOYMENT",
              "ORCHESTRATED_DEPLOYMENT",
              "PIPELINE",
              "WORKFLOW",
              "DEPLOYMENT",
              "INSTANCE",
              "APPLICATION",
              "COMMAND",
              "CONFIG",
              "SERVICE_TEMPLATE",
              "INFRASTRUCTURE_MAPPING",
              "INFRASTRUCTURE_DEFINITION",
              "USER",
              "ARTIFACT_STREAM",
              "APPDYNAMICS_CONFIGID",
              "APPDYNAMICS_APPID",
              "APPDYNAMICS_TIERID",
              "ELK_CONFIGID",
              "ELK_INDICES",
              "NEWRELIC_CONFIGID",
              "NEWRELIC_APPID",
              "SS_SSH_CONNECTION_ATTRIBUTE",
              "SS_WINRM_CONNECTION_ATTRIBUTE",
              "SUMOLOGIC_CONFIGID",
              "SPLUNK_CONFIGID",
              "NEWRELIC_MARKER_CONFIGID",
              "NEWRELIC_MARKER_APPID",
              "API_KEY",
              "ACCOUNT",
              "APPLICATION_MANIFEST",
              "USER_GROUP",
              "WHITELISTED_IP",
              "CF_AWS_CONFIG_ID",
              "VERIFICATION_CONFIGURATION",
              "HELM_GIT_CONFIG_ID",
              "NOTIFICATION_GROUP",
              "HELM_CHART_SPECIFICATION",
              "PCF_SERVICE_SPECIFICATION",
              "LAMBDA_SPECIFICATION",
              "USER_DATA_SPECIFICATION",
              "ECS_CONTAINER_SPECIFICATION",
              "ECS_SERVICE_SPECIFICATION",
              "K8S_CONTAINER_SPECIFICATION",
              "CONFIG_FILE",
              "SERVICE_COMMAND",
              "MANIFEST_FILE",
              "SERVICE_VARIABLE",
              "TRIGGER",
              "ROLE",
              "TEMPLATE",
              "TEMPLATE_FOLDER",
              "SETTING_ATTRIBUTE",
              "ENCRYPTED_RECORDS",
              "CV_CONFIGURATION",
              "TAG",
              "CUSTOM_DASHBOARD",
              "PIPELINE_GOVERNANCE_STANDARD",
              "WORKFLOW_EXECUTION",
              "SERVERLESS_INSTANCE",
              "USER_INVITE",
              "LOGIN_SETTINGS",
              "SSO_SETTINGS",
              "DELEGATE",
              "DELEGATE_SCOPE",
              "DELEGATE_PROFILE",
              "EXPORT_EXECUTIONS_REQUEST",
              "GCP_CONFIG",
              "GIT_CONFIG",
              "JENKINS_SERVER",
              "SECRETS_MANAGER",
              "HELM_CHART",
              "SECRET",
              "CONNECTOR",
              "CLOUD_PROVIDER",
              "GOVERNANCE_FREEZE_CONFIG",
              "GOVERNANCE_CONFIG",
              "EVENT_RULE"
            ]
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AccountPlugin": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "pluginCategories": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Artifact",
              "Verification",
              "Collaboration",
              "CloudProvider",
              "ConnectionAttributes",
              "LoadBalancer",
              "SourceRepo",
              "HelmRepo",
              "AzureArtifacts"
            ]
          }
        },
        "accountId": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/Version"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "RestResponseListAccountPlugin": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountPlugin"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Version": {
      "type": "object",
      "properties": {
        "preReleaseVersion": {
          "type": "string"
        },
        "buildMetadata": {
          "type": "string"
        },
        "patchVersion": {
          "type": "integer",
          "format": "int32"
        },
        "normalVersion": {
          "type": "string"
        },
        "majorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "minorVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseMapStringMapStringObject": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AccountAuditFilter": {
      "type": "object",
      "properties": {
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationAuditFilter": {
      "type": "object",
      "properties": {
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AuditPreference": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "preferenceType": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "lastNDays": {
          "type": "integer",
          "format": "int32"
        },
        "createdByUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operationTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeAccountLevelResources": {
          "type": "boolean"
        },
        "includeAppLevelResources": {
          "type": "boolean"
        },
        "accountAuditFilter": {
          "$ref": "#/definitions/AccountAuditFilter"
        },
        "applicationAuditFilter": {
          "$ref": "#/definitions/ApplicationAuditFilter"
        }
      }
    },
    "DeploymentPreference": {
      "allOf": [
        {
          "$ref": "#/definitions/Preference"
        },
        {
          "type": "object",
          "properties": {
            "appIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pipelineIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "workflowIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "serviceIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "envIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "status": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "startTime": {
              "type": "string"
            },
            "endTime": {
              "type": "string"
            },
            "includeIndirectExecutions": {
              "type": "boolean"
            },
            "harnessTagFilter": {
              "$ref": "#/definitions/HarnessTagFilter"
            },
            "uiDisplayTagString": {
              "type": "string"
            },
            "keywords": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "HarnessTagFilter": {
      "type": "object",
      "properties": {
        "matchAll": {
          "type": "boolean"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagFilterCondition"
          }
        }
      }
    },
    "Preference": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "discriminator": "preferenceType",
      "properties": {
        "name": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "preferenceType": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponsePageResponsePreference": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Preference"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TagFilterCondition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tagType": {
          "type": "string",
          "enum": ["USER", "HARNESS"]
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operator": {
          "type": "string",
          "enum": [
            "EQ",
            "NOT_EQ",
            "LT",
            "LT_EQ",
            "GE",
            "GT",
            "CONTAINS",
            "STARTS_WITH",
            "HAS",
            "IN",
            "NOT_IN",
            "EXISTS",
            "NOT_EXISTS",
            "HAS_ALL",
            "OR",
            "AND",
            "ELEMENT_MATCH"
          ]
        }
      }
    },
    "RestResponsePreference": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Preference"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AuditPreferenceResponse": {
      "type": "object",
      "properties": {
        "auditPreferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditPreference"
          }
        },
        "resourceLookupMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ResourceLookup"
          }
        }
      }
    },
    "ResourceLookup": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseAuditPreferenceResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AuditPreferenceResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeries": {
      "type": "object",
      "required": ["metricName", "metricType", "txnName", "url"],
      "properties": {
        "txnName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "metricType": {
          "type": "string"
        }
      }
    },
    "PrometheusSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "timeSeriesToAnalyze": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeries"
          }
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "ResourceConstraint": {
      "type": "object",
      "required": ["lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 1000
        },
        "strategy": {
          "type": "string",
          "enum": ["ASAP", "FIFO"]
        },
        "harnessOwned": {
          "type": "boolean"
        }
      }
    },
    "RestResponseResourceConstraint": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ResourceConstraint"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseResourceConstraint": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceConstraint"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ActiveScope": {
      "type": "object",
      "properties": {
        "releaseEntityType": {
          "type": "string"
        },
        "releaseEntityId": {
          "type": "string"
        },
        "releaseEntityName": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "permits": {
          "type": "integer",
          "format": "int32"
        },
        "acquiredAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResourceConstraintUsage": {
      "type": "object",
      "properties": {
        "resourceConstraintId": {
          "type": "string"
        },
        "activeScopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveScope"
          }
        }
      }
    },
    "RestResponseListResourceConstraintUsage": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceConstraintUsage"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseResourceLookup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceLookup"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseRole": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Role"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseRole": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseSSOConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SSOConfig"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SSOConfig": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "ssoSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SSOSettings"
          }
        },
        "authenticationMechanism": {
          "type": "string",
          "enum": ["USER_PASSWORD", "SAML", "LDAP", "OAUTH"]
        }
      }
    },
    "SSOSettings": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "type", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": ["SAML", "LDAP", "OAUTH"]
        },
        "displayName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "nextIteration": {
          "type": "integer",
          "format": "int64"
        },
        "nextIterations": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "OauthSettings": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "type", "uuid"],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "allowedProviders": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": ["AZURE", "BITBUCKET", "GITHUB", "GITLAB", "GOOGLE", "LINKEDIN"]
          }
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": ["SAML", "LDAP", "OAUTH"]
        },
        "url": {
          "type": "string"
        },
        "nextIteration": {
          "type": "integer",
          "format": "int64"
        },
        "nextIterations": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponseOauthSettings": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/OauthSettings"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LDAPTestAuthenticationRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "LdapGroupResponse": {
      "type": "object",
      "properties": {
        "dn": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "totalMembers": {
          "type": "integer",
          "format": "int32"
        },
        "selectable": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LdapUserResponse"
          }
        }
      }
    },
    "LdapUserResponse": {
      "type": "object",
      "properties": {
        "dn": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "RestResponseCollectionLdapGroupResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LdapGroupResponse"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LoginTypeResponse": {
      "type": "object",
      "properties": {
        "authenticationMechanism": {
          "type": "string",
          "enum": ["USER_PASSWORD", "SAML", "LDAP", "OAUTH"]
        },
        "showCaptcha": {
          "type": "boolean"
        },
        "defaultExperience": {
          "type": "string",
          "enum": ["NG", "CG"]
        },
        "oauthEnabled": {
          "type": "boolean"
        },
        "ssorequest": {
          "$ref": "#/definitions/SSORequest"
        }
      }
    },
    "RestResponseLoginTypeResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/LoginTypeResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SSORequest": {
      "type": "object",
      "properties": {
        "oauthProviderType": {
          "type": "string",
          "enum": ["AZURE", "BITBUCKET", "GITHUB", "GITLAB", "GOOGLE", "LINKEDIN"]
        },
        "idpRedirectUrl": {
          "type": "string"
        },
        "oauthProviderTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["AZURE", "BITBUCKET", "GITHUB", "GITLAB", "GOOGLE", "LINKEDIN"]
          }
        }
      }
    },
    "LdapConnectionSettings": {
      "type": "object",
      "required": ["host"],
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "sslEnabled": {
          "type": "boolean"
        },
        "referralsEnabled": {
          "type": "boolean"
        },
        "maxReferralHops": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "bindDN": {
          "type": "string"
        },
        "bindPassword": {
          "type": "string"
        },
        "connectTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "responseTimeout": {
          "type": "integer",
          "format": "int32"
        },
        "useRecursiveGroupMembershipSearch": {
          "type": "boolean"
        }
      }
    },
    "LdapGroupSettings": {
      "type": "object",
      "properties": {
        "baseDN": {
          "type": "string"
        },
        "searchFilter": {
          "type": "string"
        },
        "nameAttr": {
          "type": "string"
        },
        "descriptionAttr": {
          "type": "string"
        },
        "userMembershipAttr": {
          "type": "string"
        },
        "referencedUserAttr": {
          "type": "string"
        }
      }
    },
    "LdapSettings": {
      "type": "object",
      "required": ["appId", "connectionSettings", "lastUpdatedAt", "type", "uuid"],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "connectionSettings": {
          "$ref": "#/definitions/LdapConnectionSettings"
        },
        "userSettingsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LdapUserSettings"
          }
        },
        "groupSettingsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LdapGroupSettings"
          }
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": ["SAML", "LDAP", "OAUTH"]
        },
        "url": {
          "type": "string"
        },
        "nextIteration": {
          "type": "integer",
          "format": "int64"
        },
        "nextIterations": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "userSettings": {
          "$ref": "#/definitions/LdapUserSettings"
        },
        "groupSettings": {
          "$ref": "#/definitions/LdapGroupSettings"
        },
        "cronExpression": {
          "type": "string"
        }
      }
    },
    "LdapUserSettings": {
      "type": "object",
      "properties": {
        "baseDN": {
          "type": "string"
        },
        "searchFilter": {
          "type": "string"
        },
        "uidAttr": {
          "type": "string"
        },
        "emailAttr": {
          "type": "string"
        },
        "displayNameAttr": {
          "type": "string"
        },
        "groupMembershipAttr": {
          "type": "string"
        }
      }
    },
    "RestResponseLdapSettings": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/LdapSettings"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LdapTestResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE"]
        },
        "message": {
          "type": "string"
        }
      }
    },
    "RestResponseLdapTestResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/LdapTestResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LdapResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE"]
        },
        "message": {
          "type": "string"
        }
      }
    },
    "RestResponseLdapResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/LdapResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListLong": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CronExpressionRequest": {
      "type": "object",
      "properties": {
        "cronExpression": {
          "type": "string"
        }
      }
    },
    "Member": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "ref": {
          "type": "string",
          "format": "uri"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ScimGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/JsonNode"
        },
        "schemas": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Member"
          }
        }
      }
    },
    "AddOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchOperation"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/definitions/JsonNode"
            }
          }
        }
      ]
    },
    "OktaAddOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchOperation"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/definitions/JsonNode"
            }
          }
        }
      ]
    },
    "OktaRemoveOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchOperation"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/definitions/JsonNode"
            }
          }
        }
      ]
    },
    "OktaReplaceOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchOperation"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/definitions/JsonNode"
            }
          }
        }
      ]
    },
    "PatchOperation": {
      "type": "object",
      "discriminator": "op",
      "properties": {
        "path": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PatchRequest": {
      "type": "object",
      "required": ["Operations", "schemas"],
      "properties": {
        "Operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatchOperation"
          }
        },
        "id": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/JsonNode"
        },
        "schemas": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RemoveOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchOperation"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/definitions/JsonNode"
            }
          }
        }
      ]
    },
    "ReplaceOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/PatchOperation"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/definitions/JsonNode"
            }
          }
        }
      ]
    },
    "ScimUser": {
      "type": "object",
      "properties": {
        "schemas": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "userName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "emails": {
          "$ref": "#/definitions/JsonNode"
        },
        "roles": {
          "$ref": "#/definitions/JsonNode"
        },
        "name": {
          "$ref": "#/definitions/JsonNode"
        },
        "groups": {
          "$ref": "#/definitions/JsonNode"
        },
        "password": {
          "$ref": "#/definitions/JsonNode"
        },
        "id": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "meta": {
          "$ref": "#/definitions/JsonNode"
        }
      }
    },
    "RestResponseSearchResults": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SearchResults"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SearchResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "searchScore": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "SearchResults": {
      "type": "object",
      "properties": {
        "searchResults": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SearchResult"
            }
          }
        }
      }
    },
    "AdvancedSearchQuery": {
      "type": "object",
      "properties": {
        "searchQuery": {
          "type": "string"
        },
        "numResults": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "entities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LocalTime": {
      "type": "object",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseServerInfo": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServerInfo"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServerInfo": {
      "type": "object",
      "properties": {
        "zoneId": {
          "$ref": "#/definitions/ZoneId"
        }
      }
    },
    "ZoneId": {
      "type": "object",
      "properties": {
        "rules": {
          "$ref": "#/definitions/ZoneRules"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "ZoneOffset": {
      "type": "object",
      "properties": {
        "totalSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "rules": {
          "$ref": "#/definitions/ZoneRules"
        }
      }
    },
    "ZoneOffsetTransition": {
      "type": "object",
      "properties": {
        "offsetBefore": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "offsetAfter": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "dateTimeBefore": {
          "type": "string",
          "format": "date-time"
        },
        "instant": {
          "type": "integer",
          "format": "int64"
        },
        "gap": {
          "type": "boolean"
        },
        "overlap": {
          "type": "boolean"
        },
        "dateTimeAfter": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ZoneOffsetTransitionRule": {
      "type": "object",
      "properties": {
        "month": {
          "type": "string",
          "enum": [
            "JANUARY",
            "FEBRUARY",
            "MARCH",
            "APRIL",
            "MAY",
            "JUNE",
            "JULY",
            "AUGUST",
            "SEPTEMBER",
            "OCTOBER",
            "NOVEMBER",
            "DECEMBER"
          ]
        },
        "timeDefinition": {
          "type": "string",
          "enum": ["UTC", "WALL", "STANDARD"]
        },
        "standardOffset": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "offsetBefore": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "offsetAfter": {
          "$ref": "#/definitions/ZoneOffset"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]
        },
        "dayOfMonthIndicator": {
          "type": "integer",
          "format": "int32"
        },
        "localTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "midnightEndOfDay": {
          "type": "boolean"
        }
      }
    },
    "ZoneRules": {
      "type": "object",
      "properties": {
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneOffsetTransition"
          }
        },
        "fixedOffset": {
          "type": "boolean"
        },
        "transitionRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZoneOffsetTransitionRule"
          }
        }
      }
    },
    "AwsLambdaInstanceKey": {
      "type": "object",
      "properties": {
        "functionName": {
          "type": "string"
        },
        "functionVersion": {
          "type": "string"
        }
      }
    },
    "RestResponseServerlessInstance": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServerlessInstance"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServerlessInstance": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "instanceType": {
          "type": "string",
          "enum": ["AWS_LAMBDA"]
        },
        "lambdaInstanceKey": {
          "$ref": "#/definitions/AwsLambdaInstanceKey"
        },
        "envId": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "envType": {
          "type": "string",
          "enum": ["PROD", "NON_PROD", "ALL"]
        },
        "accountId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "computeProviderId": {
          "type": "string"
        },
        "computeProviderName": {
          "type": "string"
        },
        "infraMappingId": {
          "type": "string"
        },
        "infraMappingName": {
          "type": "string"
        },
        "infraMappingType": {
          "type": "string"
        },
        "lastPipelineExecutionId": {
          "type": "string"
        },
        "lastPipelineExecutionName": {
          "type": "string"
        },
        "lastDeployedAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastDeployedById": {
          "type": "string"
        },
        "lastDeployedByName": {
          "type": "string"
        },
        "lastWorkflowExecutionId": {
          "type": "string"
        },
        "lastWorkflowExecutionName": {
          "type": "string"
        },
        "lastArtifactSourceName": {
          "type": "string"
        },
        "lastArtifactStreamId": {
          "type": "string"
        },
        "lastArtifactBuildNum": {
          "type": "string"
        },
        "lastArtifactId": {
          "type": "string"
        },
        "lastArtifactName": {
          "type": "string"
        },
        "instanceInfo": {
          "$ref": "#/definitions/ServerlessInstanceInfo"
        },
        "deletedAt": {
          "type": "integer",
          "format": "int64"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "ServerlessInstanceInfo": {
      "type": "object",
      "properties": {
        "invocationCountMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/InvocationCount"
          }
        }
      }
    },
    "RestResponseServerlessInstanceTimeline": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServerlessInstanceTimeline"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServerlessInstanceTimeline": {
      "type": "object",
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPoint"
          }
        }
      }
    },
    "RestResponsePageResponseServiceInstance": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceInstance"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseService": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Service"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ContainerDefinition": {
      "type": "object",
      "properties": {
        "portMappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortMapping"
          }
        },
        "name": {
          "type": "string"
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cpu": {
          "type": "number",
          "format": "double"
        },
        "memory": {
          "type": "integer",
          "format": "int32"
        },
        "logConfiguration": {
          "$ref": "#/definitions/LogConfiguration"
        },
        "storageConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageConfiguration"
          }
        }
      }
    },
    "ContainerTask": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "deploymentType": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "advancedConfig": {
          "type": "string"
        },
        "containerDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerDefinition"
          }
        }
      }
    },
    "LogConfiguration": {
      "type": "object",
      "properties": {
        "logDriver": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogOption"
          }
        }
      }
    },
    "LogOption": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PortMapping": {
      "type": "object",
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32"
        },
        "hostPort": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseContainerTask": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ContainerTask"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "StorageConfiguration": {
      "type": "object",
      "properties": {
        "hostSourcePath": {
          "type": "string"
        },
        "containerPath": {
          "type": "string"
        },
        "readonly": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageResponseContainerTask": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerTask"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HelmChartSpecification": {
      "type": "object",
      "required": ["appId", "chartName", "chartUrl", "chartVersion", "lastUpdatedAt", "uuid"],
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "chartUrl": {
          "type": "string"
        },
        "chartName": {
          "type": "string"
        },
        "chartVersion": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponseHelmChartSpecification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/HelmChartSpecification"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseHelmChartSpecification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HelmChartSpecification"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "PcfServiceSpecification": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "manifestYaml", "serviceId", "uuid"],
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "manifestYaml": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponsePcfServiceSpecification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PcfServiceSpecification"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "EcsServiceSpecification": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "serviceId", "uuid"],
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceSpecJson": {
          "type": "string"
        },
        "schedulingStrategy": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponseEcsServiceSpecification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/EcsServiceSpecification"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DefaultSpecification": {
      "type": "object",
      "properties": {
        "runtime": {
          "type": "string"
        },
        "memorySize": {
          "type": "integer",
          "format": "int32"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FunctionSpecification": {
      "type": "object",
      "properties": {
        "runtime": {
          "type": "string"
        },
        "memorySize": {
          "type": "integer",
          "format": "int32"
        },
        "timeout": {
          "type": "integer",
          "format": "int32"
        },
        "functionName": {
          "type": "string"
        },
        "handler": {
          "type": "string"
        }
      }
    },
    "LambdaSpecification": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "defaults": {
          "$ref": "#/definitions/DefaultSpecification"
        },
        "functions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FunctionSpecification"
          }
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponseLambdaSpecification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/LambdaSpecification"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseLambdaSpecification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LambdaSpecification"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseUserDataSpecification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/UserDataSpecification"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "UserDataSpecification": {
      "type": "object",
      "required": ["appId", "data", "lastUpdatedAt", "uuid"],
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseUserDataSpecification": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDataSpecification"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CommandCategory": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["COMMANDS", "COPY", "SCRIPTS", "VERIFICATIONS"]
        },
        "displayName": {
          "type": "string"
        },
        "commandUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandUnit"
          }
        }
      }
    },
    "RestResponseListCommandCategory": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandCategory"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListApplicationManifest": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationManifest"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListArtifactStreamBinding": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStreamBinding"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseArtifactStreamBinding": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ArtifactStreamBinding"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapStringListHelmChart": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/HelmChart"
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseSetHelmSubCommand": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "INSTALL",
              "UPGRADE",
              "ROLLBACK",
              "HISTORY",
              "DELETE",
              "UNINSTALL",
              "LIST",
              "VERSION",
              "PULL",
              "FETCH",
              "TEMPLATE"
            ]
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseService": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListArtifactStream": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStream"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseServiceCommand": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServiceCommand"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseServiceTemplate": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServiceTemplate"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseServiceTemplate": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplate"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseServiceVariable": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServiceVariable"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseServiceVariable": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceVariable"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AppEnvRestriction": {
      "type": "object",
      "properties": {
        "appFilter": {
          "$ref": "#/definitions/GenericEntityFilter"
        },
        "envFilter": {
          "$ref": "#/definitions/EnvFilter"
        }
      }
    },
    "ConnectivityValidationAttributes": {
      "type": "object"
    },
    "RestResponseSettingAttribute": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SettingAttribute"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SettingAttribute": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "envId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/SettingValue"
        },
        "validationAttributes": {
          "$ref": "#/definitions/ConnectivityValidationAttributes"
        },
        "category": {
          "type": "string",
          "enum": ["CLOUD_PROVIDER", "CONNECTOR", "SETTING", "HELM_REPO", "AZURE_ARTIFACTS", "CE_CONNECTOR"]
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "artifactStreamCount": {
          "type": "integer",
          "format": "int64"
        },
        "artifactStreams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactStreamSummary"
          }
        },
        "sample": {
          "type": "boolean"
        },
        "nextIteration": {
          "type": "integer",
          "format": "int64"
        },
        "nextSecretMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "secretsMigrated": {
          "type": "boolean"
        },
        "connectivityError": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "encryptedBy": {
          "type": "string"
        }
      }
    },
    "SettingValue": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "settingType": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        },
        "certValidationRequired": {
          "type": "boolean"
        }
      }
    },
    "UsageRestrictions": {
      "type": "object",
      "properties": {
        "appEnvRestrictions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AppEnvRestriction"
          }
        }
      }
    },
    "RestResponsePageResponseSettingAttribute": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SettingAttribute"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseValidationResult": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ValidationResult"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "UserInvite": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "externalUserId": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "userGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroup"
          }
        },
        "completed": {
          "type": "boolean"
        },
        "source": {
          "$ref": "#/definitions/UserInviteSource"
        },
        "agreement": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "givenName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "freemiumProducts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "freemiumAssistedOption": {
          "type": "boolean"
        },
        "password": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountName": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "marketPlaceToken": {
          "type": "string"
        },
        "importedByScim": {
          "type": "boolean"
        },
        "utmInfo": {
          "$ref": "#/definitions/UtmInfo"
        },
        "createdFromNG": {
          "type": "boolean"
        },
        "intent": {
          "type": "string"
        },
        "signupAction": {
          "type": "string"
        },
        "edition": {
          "type": "string"
        },
        "billingFrequency": {
          "type": "string"
        }
      }
    },
    "UserInviteSource": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["MANUAL", "SSO", "TRIAL", "MARKETPLACE", "MARKETO_LINKEDIN", "AZURE_MARKETPLACE", "ONPREM"]
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "RestResponseSmtpConfigResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SmtpConfigResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SmtpConfig": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "fromAddress": {
          "type": "string"
        },
        "useSSL": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "encryptedPassword": {
          "type": "string"
        }
      }
    },
    "SmtpConfigResponse": {
      "type": "object",
      "properties": {
        "smtpConfig": {
          "$ref": "#/definitions/SmtpConfig"
        },
        "encryptionDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncryptedDataDetail"
          }
        }
      }
    },
    "SplunkSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "query", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "query": {
          "type": "string"
        },
        "hostNameField": {
          "type": "string"
        },
        "advancedQuery": {
          "type": "boolean"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "Aggregation": {
      "type": "object",
      "properties": {
        "perSeriesAligner": {
          "type": "string"
        },
        "crossSeriesReducer": {
          "type": "string"
        },
        "groupByFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StackDriverMetric": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "metric": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "valueType": {
          "type": "string"
        }
      }
    },
    "StackDriverMetricDefinition": {
      "type": "object",
      "properties": {
        "metricType": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "txnName": {
          "type": "string"
        },
        "filterJson": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "aggregation": {
          "$ref": "#/definitions/Aggregation"
        }
      }
    },
    "StackDriverSetupTestNodeData": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "loadBalancerMetrics": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StackDriverMetric"
            }
          }
        },
        "podMetrics": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/StackDriverMetric"
          }
        },
        "query": {
          "type": "string"
        },
        "hostnameField": {
          "type": "string"
        },
        "messageField": {
          "type": "string"
        },
        "metricDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackDriverMetricDefinition"
          }
        },
        "logConfiguration": {
          "type": "boolean"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "RestResponseListStackDriverMetric": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackDriverMetric"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AggregatedDayStats": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "failedCount": {
          "type": "integer",
          "format": "int32"
        },
        "instancesCount": {
          "type": "integer",
          "format": "int32"
        },
        "daysStats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DayStat"
          }
        }
      }
    },
    "DayStat": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "failedCount": {
          "type": "integer",
          "format": "int32"
        },
        "instancesCount": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DeploymentStatistics": {
      "type": "object",
      "properties": {
        "statsMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AggregatedDayStats"
          }
        },
        "type": {
          "type": "string",
          "enum": ["DEPLOYMENT", "SERVICE_INSTANCE_STATISTICS"]
        }
      }
    },
    "RestResponseDeploymentStatistics": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DeploymentStatistics"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseServiceInstanceStatistics": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServiceInstanceStatistics"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceInstanceStatistics": {
      "type": "object",
      "properties": {
        "statsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TopConsumer"
            }
          }
        },
        "type": {
          "type": "string",
          "enum": ["DEPLOYMENT", "SERVICE_INSTANCE_STATISTICS"]
        }
      }
    },
    "TopConsumer": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "successfulActivityCount": {
          "type": "integer",
          "format": "int32"
        },
        "failedActivityCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SumoLogicSetupTestNodedata": {
      "type": "object",
      "required": ["appId", "settingId"],
      "properties": {
        "appId": {
          "type": "string"
        },
        "settingId": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "isServiceLevel": {
          "type": "boolean"
        },
        "instanceElement": {
          "$ref": "#/definitions/Instance"
        },
        "hostExpression": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "guid": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "toTime": {
          "type": "integer",
          "format": "int64"
        },
        "fromTime": {
          "type": "integer",
          "format": "int64"
        },
        "query": {
          "type": "string"
        },
        "hostNameField": {
          "type": "string"
        },
        "serviceLevel": {
          "type": "boolean"
        }
      }
    },
    "RestResponseTimeSeriesKeyTransactions": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TimeSeriesKeyTransactions"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesKeyTransactions": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "cvConfigId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "keyTransactions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeploymentTimeSeriesAnalysis": {
      "type": "object",
      "properties": {
        "stateExecutionId": {
          "type": "string"
        },
        "customThresholdRefId": {
          "type": "string"
        },
        "baseLineExecutionId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "metricAnalyses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRelicMetricAnalysis"
          }
        }
      }
    },
    "NewRelicMetricAnalysis": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "metricValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRelicMetricAnalysisValue"
          }
        },
        "displayName": {
          "type": "string"
        },
        "fullMetricName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "NewRelicMetricAnalysisValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "alertType": {
          "type": "string"
        },
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "testValue": {
          "type": "number",
          "format": "double"
        },
        "controlValue": {
          "type": "number",
          "format": "double"
        },
        "hostAnalysisValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRelicMetricHostAnalysisValue"
          }
        }
      }
    },
    "NewRelicMetricHostAnalysisValue": {
      "type": "object",
      "properties": {
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "testHostName": {
          "type": "string"
        },
        "controlHostName": {
          "type": "string"
        },
        "testValues": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "controlValues": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "upperThresholds": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "lowerThresholds": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "anomalies": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "testStartIndex": {
          "type": "integer",
          "format": "int32"
        },
        "failFastCriteriaDescription": {
          "type": "string"
        }
      }
    },
    "RestResponseDeploymentTimeSeriesAnalysis": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DeploymentTimeSeriesAnalysis"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseTimeSeriesMLTransactionThresholds": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TimeSeriesMLTransactionThresholds"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Threshold": {
      "type": "object",
      "properties": {
        "thresholdType": {
          "type": "string",
          "enum": ["ALERT_WHEN_LOWER", "ALERT_WHEN_HIGHER", "ALERT_HIGHER_OR_LOWER", "NO_ALERT"]
        },
        "comparisonType": {
          "type": "string",
          "enum": ["RATIO", "DELTA", "ABSOLUTE"]
        },
        "ml": {
          "type": "number",
          "format": "double"
        },
        "customThresholdType": {
          "type": "string",
          "enum": ["ACCEPTABLE", "ANOMALOUS"]
        },
        "thresholdCriteria": {
          "$ref": "#/definitions/TimeSeriesCustomThresholdCriteria"
        }
      }
    },
    "TimeSeriesCustomThresholdCriteria": {
      "type": "object",
      "properties": {
        "actionToTake": {
          "type": "string",
          "enum": ["FAIL_IMMEDIATELY", "FAIL_AFTER_OCCURRENCES", "FAIL_AFTER_CONSECUTIVE_OCCURRENCES"]
        },
        "occurrences": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "TimeSeriesMLTransactionThresholds": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "groupName": {
          "type": "string"
        },
        "transactionName": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "cvConfigId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "thresholds": {
          "$ref": "#/definitions/TimeSeriesMetricDefinition"
        },
        "thresholdType": {
          "type": "string",
          "enum": ["ACCEPTABLE", "ANOMALOUS"]
        },
        "customThresholdRefId": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TimeSeriesMetricDefinition": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "metricType": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "customThresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Threshold"
          }
        },
        "categorizedThresholds": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Threshold"
            }
          }
        },
        "thresholds": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Threshold"
          }
        }
      }
    },
    "NewRelicMetricAnalysisRecord": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "stateType": {
          "type": "string",
          "enum": [
            "SUB_WORKFLOW",
            "REPEAT",
            "FORK",
            "WAIT",
            "PAUSE",
            "BARRIER",
            "RESOURCE_CONSTRAINT",
            "SHELL_SCRIPT",
            "HTTP",
            "TEMPLATIZED_SECRET_MANAGER",
            "EMAIL",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "NEW_RELIC_DEPLOYMENT_MARKER",
            "DYNA_TRACE",
            "PROMETHEUS",
            "SPLUNKV2",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "DATA_DOG_LOG",
            "CVNG",
            "CLOUD_WATCH",
            "AWS_LAMBDA_VERIFICATION",
            "APM_VERIFICATION",
            "LOG_VERIFICATION",
            "BUG_SNAG",
            "STACK_DRIVER",
            "STACK_DRIVER_LOG",
            "INSTANA",
            "SCALYR",
            "ENV_STATE",
            "ENV_LOOP_STATE",
            "ENV_RESUME_STATE",
            "ENV_LOOP_RESUME_STATE",
            "COMMAND",
            "APPROVAL",
            "APPROVAL_RESUME",
            "ELASTIC_LOAD_BALANCER",
            "JENKINS",
            "GCB",
            "BAMBOO",
            "ARTIFACT_COLLECTION",
            "ARTIFACT_CHECK",
            "AZURE_NODE_SELECT",
            "AZURE_VMSS_SETUP",
            "AZURE_VMSS_DEPLOY",
            "AZURE_VMSS_ROLLBACK",
            "AZURE_VMSS_SWITCH_ROUTES",
            "AZURE_VMSS_SWITCH_ROUTES_ROLLBACK",
            "AZURE_WEBAPP_SLOT_SETUP",
            "AZURE_WEBAPP_SLOT_SWAP",
            "AZURE_WEBAPP_SLOT_SHIFT_TRAFFIC",
            "AZURE_WEBAPP_SLOT_ROLLBACK",
            "AWS_NODE_SELECT",
            "DC_NODE_SELECT",
            "ROLLING_NODE_SELECT",
            "PHASE",
            "PHASE_STEP",
            "STAGING_ORIGINAL_EXECUTION",
            "AWS_CODEDEPLOY_STATE",
            "AWS_CODEDEPLOY_ROLLBACK",
            "AWS_LAMBDA_STATE",
            "AWS_LAMBDA_ROLLBACK",
            "AWS_AMI_SERVICE_SETUP",
            "ASG_AMI_SERVICE_ALB_SHIFT_SETUP",
            "AWS_AMI_SERVICE_DEPLOY",
            "ASG_AMI_SERVICE_ALB_SHIFT_DEPLOY",
            "AWS_AMI_SWITCH_ROUTES",
            "ASG_AMI_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_ROLLBACK_SWITCH_ROUTES",
            "ASG_AMI_ROLLBACK_ALB_SHIFT_SWITCH_ROUTES",
            "AWS_AMI_SERVICE_ROLLBACK",
            "ECS_SERVICE_SETUP",
            "SPOTINST_SETUP",
            "SPOTINST_ALB_SHIFT_SETUP",
            "SPOTINST_DEPLOY",
            "SPOTINST_ALB_SHIFT_DEPLOY",
            "SPOTINST_LISTENER_UPDATE",
            "SPOTINST_LISTENER_ALB_SHIFT",
            "SPOTINST_ROLLBACK",
            "SPOTINST_LISTENER_UPDATE_ROLLBACK",
            "SPOTINST_LISTENER_ALB_SHIFT_ROLLBACK",
            "ECS_SERVICE_SETUP_ROLLBACK",
            "ECS_DAEMON_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP",
            "ECS_BG_SERVICE_SETUP_ROUTE53",
            "ECS_SERVICE_DEPLOY",
            "ECS_SERVICE_ROLLBACK",
            "ECS_LISTENER_UPDATE",
            "ECS_LISTENER_UPDATE_ROLLBACK",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE",
            "ECS_ROUTE53_DNS_WEIGHT_UPDATE_ROLLBACK",
            "KUBERNETES_SETUP",
            "KUBERNETES_SETUP_ROLLBACK",
            "KUBERNETES_DEPLOY",
            "KUBERNETES_DEPLOY_ROLLBACK",
            "KUBERNETES_STEADY_STATE_CHECK",
            "ECS_STEADY_STATE_CHECK",
            "ECS_RUN_TASK",
            "GCP_CLUSTER_SETUP",
            "HELM_DEPLOY",
            "HELM_ROLLBACK",
            "PCF_SETUP",
            "PCF_RESIZE",
            "PCF_ROLLBACK",
            "PCF_MAP_ROUTE",
            "PCF_UNMAP_ROUTE",
            "PCF_BG_MAP_ROUTE",
            "PCF_PLUGIN",
            "TERRAFORM_PROVISION",
            "TERRAFORM_APPLY",
            "TERRAGRUNT_PROVISION",
            "TERRAGRUNT_DESTROY",
            "TERRAGRUNT_ROLLBACK",
            "ARM_CREATE_RESOURCE",
            "ARM_ROLLBACK",
            "SHELL_SCRIPT_PROVISION",
            "TERRAFORM_DESTROY",
            "CLOUD_FORMATION_CREATE_STACK",
            "CLOUD_FORMATION_DELETE_STACK",
            "KUBERNETES_SWAP_SERVICE_SELECTORS",
            "CLOUD_FORMATION_ROLLBACK_STACK",
            "TERRAFORM_ROLLBACK",
            "K8S_DEPLOYMENT_ROLLING",
            "K8S_SCALE",
            "K8S_DEPLOYMENT_ROLLING_ROLLBACK",
            "K8S_BLUE_GREEN_DEPLOY",
            "K8S_CANARY_DEPLOY",
            "K8S_DELETE",
            "JIRA_CREATE_UPDATE",
            "SERVICENOW_CREATE_UPDATE",
            "K8S_TRAFFIC_SPLIT",
            "K8S_APPLY",
            "CUSTOM_DEPLOYMENT_FETCH_INSTANCES"
          ]
        },
        "message": {
          "type": "string"
        },
        "riskLevel": {
          "type": "string",
          "enum": ["HIGH", "MEDIUM", "LOW", "NA"]
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "stateExecutionId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "cvConfigId": {
          "type": "string"
        },
        "metricAnalyses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRelicMetricAnalysis"
          }
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int32"
        },
        "showTimeSeries": {
          "type": "boolean"
        },
        "baseLineExecutionId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "dependencyPath": {
          "type": "string"
        },
        "mlAnalysisType": {
          "type": "string",
          "enum": ["COMPARATIVE", "PREDICTIVE", "TIMESERIES_24x7"]
        },
        "progress": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseSetNewRelicMetricAnalysisRecord": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/NewRelicMetricAnalysisRecord"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListNewRelicMetricHostAnalysisValue": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRelicMetricHostAnalysisValue"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListTimeSeriesMLTransactionThresholds": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesMLTransactionThresholds"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ArtifactSelection": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["ARTIFACT_SOURCE", "LAST_COLLECTED", "LAST_DEPLOYED", "PIPELINE_SOURCE", "WEBHOOK_VARIABLE"]
        },
        "artifactStreamId": {
          "type": "string"
        },
        "artifactSourceName": {
          "type": "string"
        },
        "artifactFilter": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string"
        },
        "pipelineName": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "regex": {
          "type": "boolean"
        },
        "uiDisplayName": {
          "type": "string"
        }
      }
    },
    "ArtifactTriggerCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/TriggerCondition"
        },
        {
          "type": "object",
          "properties": {
            "artifactStreamId": {
              "type": "string"
            },
            "artifactSourceName": {
              "type": "string"
            },
            "artifactFilter": {
              "type": "string"
            },
            "regex": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "ManifestSelection": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["FROM_APP_MANIFEST", "LAST_COLLECTED", "LAST_DEPLOYED", "PIPELINE_SOURCE", "WEBHOOK_VARIABLE"]
        },
        "appManifestId": {
          "type": "string"
        },
        "versionRegex": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string"
        },
        "pipelineName": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "appManifestName": {
          "type": "string"
        }
      }
    },
    "ManifestTriggerCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/TriggerCondition"
        },
        {
          "type": "object",
          "properties": {
            "appManifestId": {
              "type": "string"
            },
            "serviceId": {
              "type": "string"
            },
            "serviceName": {
              "type": "string"
            },
            "versionRegex": {
              "type": "string"
            },
            "appManifestName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "NewInstanceTriggerCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/TriggerCondition"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "PipelineTriggerCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/TriggerCondition"
        },
        {
          "type": "object",
          "properties": {
            "pipelineId": {
              "type": "string"
            },
            "pipelineName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "RestResponseTrigger": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Trigger"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ScheduledTriggerCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/TriggerCondition"
        },
        {
          "type": "object",
          "properties": {
            "cronExpression": {
              "type": "string"
            },
            "cronDescription": {
              "type": "string"
            },
            "onNewArtifactOnly": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "ServiceInfraWorkflow": {
      "type": "object",
      "properties": {
        "infraMappingId": {
          "type": "string"
        },
        "infraMappingName": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "workflowType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        }
      }
    },
    "Trigger": {
      "type": "object",
      "required": ["appId", "condition", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "condition": {
          "$ref": "#/definitions/TriggerCondition"
        },
        "pipelineId": {
          "type": "string"
        },
        "pipelineName": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "artifactSelections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtifactSelection"
          }
        },
        "manifestSelections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManifestSelection"
          }
        },
        "workflowType": {
          "type": "string",
          "enum": ["PIPELINE", "ORCHESTRATION"]
        },
        "workflowVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "continueWithDefaultValues": {
          "type": "boolean"
        },
        "serviceInfraWorkflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceInfraWorkflow"
          }
        },
        "excludeHostsWithSameArtifact": {
          "type": "boolean"
        },
        "tagLinks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessTagLink"
          }
        },
        "disabled": {
          "type": "boolean"
        },
        "nextIterations": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "TriggerCondition": {
      "type": "object",
      "required": ["conditionType"],
      "discriminator": "conditionType",
      "properties": {
        "conditionType": {
          "type": "string",
          "enum": ["NEW_ARTIFACT", "PIPELINE_COMPLETION", "SCHEDULED", "WEBHOOK", "NEW_INSTANCE", "NEW_MANIFEST"]
        },
        "conditionDisplayName": {
          "type": "string"
        }
      }
    },
    "WebHookToken": {
      "type": "object",
      "properties": {
        "webHookToken": {
          "type": "string"
        },
        "httpMethod": {
          "type": "string"
        },
        "payload": {
          "type": "string"
        }
      }
    },
    "WebHookTriggerCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/TriggerCondition"
        },
        {
          "type": "object",
          "properties": {
            "webHookToken": {
              "$ref": "#/definitions/WebHookToken"
            },
            "artifactStreamId": {
              "type": "string"
            },
            "parameters": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "webhookSource": {
              "type": "string",
              "enum": ["GITHUB", "GITLAB", "BITBUCKET", "AZURE_DEVOPS"]
            },
            "eventTypes": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PULL_REQUEST",
                  "PUSH",
                  "REPO",
                  "ISSUE",
                  "PING",
                  "DELETE",
                  "ANY",
                  "OTHER",
                  "RELEASE",
                  "PACKAGE"
                ]
              }
            },
            "actions": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CLOSED",
                  "EDITED",
                  "OPENED",
                  "REOPENED",
                  "ASSIGNED",
                  "UNASSIGNED",
                  "LABELED",
                  "UNLABELED",
                  "SYNCHRONIZED",
                  "REVIEW_REQUESTED",
                  "REVIEW_REQUESTED_REMOVED",
                  "PACKAGE_PUBLISHED"
                ]
              }
            },
            "releaseActions": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["CREATED", "PUBLISHED", "RELEASED", "UNPUBLISHED", "EDITED", "DELETED", "PRE_RELEASED"]
              }
            },
            "bitBucketEvents": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PING",
                  "DIAGNOSTICS_PING",
                  "ALL",
                  "PUSH_ANY",
                  "ANY",
                  "FORK",
                  "UPDATED",
                  "COMMIT_COMMENT_CREATED",
                  "BUILD_STATUS_CREATED",
                  "BUILD_STATUS_UPDATED",
                  "PUSH",
                  "REFS_CHANGED",
                  "ISSUE_ANY",
                  "ISSUE_CREATED",
                  "ISSUE_UPDATED",
                  "ISSUE_COMMENT_CREATED",
                  "PULL_REQUEST_ANY",
                  "PULL_REQUEST_CREATED",
                  "PULL_REQUEST_UPDATED",
                  "PULL_REQUEST_APPROVED",
                  "PULL_REQUEST_APPROVAL_REMOVED",
                  "PULL_REQUEST_MERGED",
                  "PULL_REQUEST_DECLINED",
                  "PULL_REQUEST_COMMENT_CREATED",
                  "PULL_REQUEST_COMMENT_UPDATED",
                  "PULL_REQUEST_COMMENT_DELETED"
                ]
              }
            },
            "filePaths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "gitConnectorId": {
              "type": "string"
            },
            "repoName": {
              "type": "string"
            },
            "branchName": {
              "type": "string"
            },
            "branchRegex": {
              "type": "string"
            },
            "checkFileContentChanged": {
              "type": "boolean"
            },
            "webHookSecret": {
              "type": "string"
            }
          }
        }
      ]
    },
    "RestResponsePageResponseTrigger": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trigger"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseWebHookToken": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/WebHookToken"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseWebhookParameters": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/WebhookParameters"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "WebhookParameters": {
      "type": "object",
      "properties": {
        "params": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expressions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseWebhookEventType": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "string",
          "enum": ["PULL_REQUEST", "PUSH", "REPO", "ISSUE", "PING", "DELETE", "ANY", "OTHER", "RELEASE", "PACKAGE"]
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseUsageRestrictions": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AppRestrictionsSummary": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/EntityReference"
        },
        "hasAllProdEnvAccess": {
          "type": "boolean"
        },
        "hasAllNonProdEnvAccess": {
          "type": "boolean"
        },
        "environments": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EntityReference"
          }
        }
      }
    },
    "EntityReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        }
      }
    },
    "RestResponseRestrictionsSummary": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/RestrictionsSummary"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestrictionsSummary": {
      "type": "object",
      "properties": {
        "hasAllAppAccess": {
          "type": "boolean"
        },
        "hasAllProdEnvAccess": {
          "type": "boolean"
        },
        "hasAllNonProdEnvAccess": {
          "type": "boolean"
        },
        "applications": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AppRestrictionsSummary"
          }
        }
      }
    },
    "IdNameReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RestResponseUsageRestrictionsReferenceSummary": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/UsageRestrictionsReferenceSummary"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "UsageRestrictionsReferenceSummary": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "numOfSettings": {
          "type": "integer",
          "format": "int32"
        },
        "numOfSecrets": {
          "type": "integer",
          "format": "int32"
        },
        "settings": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/IdNameReference"
          }
        },
        "secrets": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/IdNameReference"
          }
        }
      }
    },
    "RestResponseUserGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/UserGroup"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseUserGroup": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroup"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LdapLinkGroupRequest": {
      "type": "object",
      "properties": {
        "ldapGroupDN": {
          "type": "string"
        },
        "ldapGroupName": {
          "type": "string"
        }
      }
    },
    "SamlLinkGroupRequest": {
      "type": "object",
      "properties": {
        "samlGroupName": {
          "type": "string"
        }
      }
    },
    "RestResponseCollectionFeatureFlag": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureFlag"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseTwoFactorAuthenticationSettings": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TwoFactorAuthenticationSettings"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TwoFactorAuthenticationSettings": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "twoFactorAuthenticationEnabled": {
          "type": "boolean"
        },
        "mechanism": {
          "type": "string",
          "enum": ["TOTP"]
        },
        "totpSecretKey": {
          "type": "string"
        },
        "totpqrurl": {
          "type": "string"
        }
      }
    },
    "RestResponseTwoFactorAdminOverrideSettings": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TwoFactorAdminOverrideSettings"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TwoFactorAdminOverrideSettings": {
      "type": "object",
      "properties": {
        "adminOverrideTwoFactorEnabled": {
          "type": "boolean"
        }
      }
    },
    "PublicUser": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        },
        "inviteAccepted": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageResponsePublicUser": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicUser"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AccountJoinRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "accountAdminEmail": {
          "type": "string"
        }
      }
    },
    "ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "isNG": {
          "type": "boolean"
        }
      }
    },
    "AccountPermissionSummary": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "LOGGED_IN",
              "DELEGATE",
              "NONE",
              "APP",
              "ALL_APP_ENTITIES",
              "ENV",
              "SERVICE",
              "WORKFLOW",
              "PIPELINE",
              "DEPLOYMENT",
              "APPLICATION_CREATE_DELETE",
              "USER_PERMISSION_MANAGEMENT",
              "ACCOUNT_MANAGEMENT",
              "PROVISIONER",
              "TEMPLATE_MANAGEMENT",
              "APP_TEMPLATE",
              "USER_PERMISSION_READ",
              "AUDIT_VIEWER",
              "TAG_MANAGEMENT",
              "CE_ADMIN",
              "CE_VIEWER",
              "MANAGE_CLOUD_PROVIDERS",
              "MANAGE_CONNECTORS",
              "MANAGE_APPLICATIONS",
              "MANAGE_APPLICATION_STACKS",
              "MANAGE_DELEGATES",
              "MANAGE_ALERT_NOTIFICATION_RULES",
              "MANAGE_DELEGATE_PROFILES",
              "MANAGE_CONFIG_AS_CODE",
              "MANAGE_SECRETS",
              "MANAGE_SECRET_MANAGERS",
              "MANAGE_SSH_AND_WINRM",
              "MANAGE_AUTHENTICATION_SETTINGS",
              "MANAGE_USER_AND_USER_GROUPS_AND_API_KEYS",
              "VIEW_USER_AND_USER_GROUPS_AND_API_KEYS",
              "MANAGE_IP_WHITELIST",
              "MANAGE_IP_WHITELISTING",
              "MANAGE_DEPLOYMENT_FREEZES",
              "ALLOW_DEPLOYMENTS_DURING_FREEZE",
              "MANAGE_PIPELINE_GOVERNANCE_STANDARDS",
              "MANAGE_API_KEYS",
              "MANAGE_TAGS",
              "MANAGE_ACCOUNT_DEFAULTS",
              "MANAGE_CUSTOM_DASHBOARDS",
              "CREATE_CUSTOM_DASHBOARDS",
              "MANAGE_RESTRICTED_ACCESS"
            ]
          }
        }
      }
    },
    "AppPermissionSummaryForUI": {
      "type": "object",
      "properties": {
        "canCreateService": {
          "type": "boolean"
        },
        "canCreateProvisioner": {
          "type": "boolean"
        },
        "canCreateEnvironment": {
          "type": "boolean"
        },
        "canCreateWorkflow": {
          "type": "boolean"
        },
        "canCreatePipeline": {
          "type": "boolean"
        },
        "canCreateTemplate": {
          "type": "boolean"
        },
        "servicePermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ALL",
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "EXECUTE",
                "EXECUTE_WORKFLOW",
                "EXECUTE_PIPELINE",
                "EXECUTE_WORKFLOW_ROLLBACK",
                "DEFAULT"
              ]
            }
          }
        },
        "provisionerPermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ALL",
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "EXECUTE",
                "EXECUTE_WORKFLOW",
                "EXECUTE_PIPELINE",
                "EXECUTE_WORKFLOW_ROLLBACK",
                "DEFAULT"
              ]
            }
          }
        },
        "envPermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ALL",
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "EXECUTE",
                "EXECUTE_WORKFLOW",
                "EXECUTE_PIPELINE",
                "EXECUTE_WORKFLOW_ROLLBACK",
                "DEFAULT"
              ]
            }
          }
        },
        "workflowPermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ALL",
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "EXECUTE",
                "EXECUTE_WORKFLOW",
                "EXECUTE_PIPELINE",
                "EXECUTE_WORKFLOW_ROLLBACK",
                "DEFAULT"
              ]
            }
          }
        },
        "deploymentPermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ALL",
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "EXECUTE",
                "EXECUTE_WORKFLOW",
                "EXECUTE_PIPELINE",
                "EXECUTE_WORKFLOW_ROLLBACK",
                "DEFAULT"
              ]
            }
          }
        },
        "pipelinePermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ALL",
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "EXECUTE",
                "EXECUTE_WORKFLOW",
                "EXECUTE_PIPELINE",
                "EXECUTE_WORKFLOW_ROLLBACK",
                "DEFAULT"
              ]
            }
          }
        },
        "templatePermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ALL",
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "EXECUTE",
                "EXECUTE_WORKFLOW",
                "EXECUTE_PIPELINE",
                "EXECUTE_WORKFLOW_ROLLBACK",
                "DEFAULT"
              ]
            }
          }
        }
      }
    },
    "RestResponseUserPermissionInfo": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/UserPermissionInfo"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "UserPermissionInfo": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountPermissionSummary": {
          "$ref": "#/definitions/AccountPermissionSummary"
        },
        "appPermissionMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AppPermissionSummaryForUI"
          }
        },
        "hasAllAppAccess": {
          "type": "boolean"
        },
        "dashboardPermissions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": ["READ", "UPDATE", "DELETE", "MANAGE"]
            }
          }
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string"
        }
      }
    },
    "ResendInvitationEmailRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "UpdatePasswordRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "AccountRole": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "allApps": {
          "type": "boolean"
        },
        "applicationRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationRole"
          }
        },
        "resourceAccess": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmutablePairResourceTypeAction"
          }
        }
      }
    },
    "ApplicationRole": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "allEnvironments": {
          "type": "boolean"
        },
        "environmentRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentRole"
          }
        },
        "resourceAccess": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImmutablePairResourceTypeAction"
          }
        }
      }
    },
    "EnvironmentRole": {
      "type": "object",
      "properties": {
        "envId": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "environmentType": {
          "type": "string",
          "enum": ["PROD", "NON_PROD", "ALL"]
        },
        "resourceAccess": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "enum": [
              "ALL",
              "CREATE",
              "READ",
              "UPDATE",
              "DELETE",
              "EXECUTE",
              "EXECUTE_WORKFLOW",
              "EXECUTE_PIPELINE",
              "EXECUTE_WORKFLOW_ROLLBACK",
              "DEFAULT"
            ]
          }
        }
      }
    },
    "ImmutablePair": {
      "type": "object",
      "properties": {
        "left": {
          "type": "object"
        },
        "right": {
          "type": "object"
        },
        "value": {
          "type": "object"
        },
        "key": {
          "type": "object"
        }
      }
    },
    "ImmutablePairResourceTypeAction": {
      "type": "object",
      "properties": {
        "left": {
          "type": "string",
          "enum": [
            "APPLICATION",
            "SERVICE",
            "CONFIGURATION",
            "CONFIGURATION_OVERRIDE",
            "WORKFLOW",
            "ENVIRONMENT",
            "ROLE",
            "DEPLOYMENT",
            "ARTIFACT",
            "CLOUD",
            "USER",
            "CD",
            "PIPELINE",
            "SETTING",
            "LIMIT",
            "APP_STACK",
            "NOTIFICATION_GROUP",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "WHITE_LIST",
            "SSO",
            "API_KEY",
            "PROVISIONER",
            "PREFERENCE",
            "TEMPLATE",
            "CUSTOM_DASHBOARD",
            "BUDGET",
            "GCP_RESOURCE",
            "CLUSTERRECORD",
            "K8S_LABEL",
            "K8S_EVENT_YAML_DIFF",
            "K8S_RECOMMENDATION",
            "CE_ANOMALIES",
            "CE_CLUSTER",
            "CE_CONNECTOR",
            "CE_BATCH",
            "LINKED_ACCOUNT"
          ]
        },
        "right": {
          "type": "string",
          "enum": [
            "ALL",
            "CREATE",
            "READ",
            "UPDATE",
            "DELETE",
            "EXECUTE",
            "EXECUTE_WORKFLOW",
            "EXECUTE_PIPELINE",
            "EXECUTE_WORKFLOW_ROLLBACK",
            "DEFAULT"
          ]
        },
        "value": {
          "type": "string",
          "enum": [
            "ALL",
            "CREATE",
            "READ",
            "UPDATE",
            "DELETE",
            "EXECUTE",
            "EXECUTE_WORKFLOW",
            "EXECUTE_PIPELINE",
            "EXECUTE_WORKFLOW_ROLLBACK",
            "DEFAULT"
          ]
        },
        "key": {
          "type": "string",
          "enum": [
            "APPLICATION",
            "SERVICE",
            "CONFIGURATION",
            "CONFIGURATION_OVERRIDE",
            "WORKFLOW",
            "ENVIRONMENT",
            "ROLE",
            "DEPLOYMENT",
            "ARTIFACT",
            "CLOUD",
            "USER",
            "CD",
            "PIPELINE",
            "SETTING",
            "LIMIT",
            "APP_STACK",
            "NOTIFICATION_GROUP",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "WHITE_LIST",
            "SSO",
            "API_KEY",
            "PROVISIONER",
            "PREFERENCE",
            "TEMPLATE",
            "CUSTOM_DASHBOARD",
            "BUDGET",
            "GCP_RESOURCE",
            "CLUSTERRECORD",
            "K8S_LABEL",
            "K8S_EVENT_YAML_DIFF",
            "K8S_RECOMMENDATION",
            "CE_ANOMALIES",
            "CE_CLUSTER",
            "CE_CONNECTOR",
            "CE_BATCH",
            "LINKED_ACCOUNT"
          ]
        }
      }
    },
    "RestResponseAccountRole": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AccountRole"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseApplicationRole": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ApplicationRole"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SwitchAccountRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponseSwitchAccountResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SwitchAccountResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SwitchAccountResponse": {
      "type": "object",
      "properties": {
        "requiresReAuthentication": {
          "type": "boolean"
        }
      }
    },
    "LoginTypeRequest": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        }
      }
    },
    "SsoRedirectRequest": {
      "type": "object",
      "properties": {
        "jwtToken": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseUserInvite": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInvite"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseUserInvite": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/UserInvite"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListInviteOperationResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ACCOUNT_INVITE_ACCEPTED_NEED_PASSWORD",
              "ACCOUNT_INVITE_ACCEPTED",
              "USER_INVITED_SUCCESSFULLY",
              "USER_ALREADY_ADDED",
              "USER_ALREADY_INVITED",
              "FAIL",
              "INVITE_EXPIRED",
              "INVITE_INVALID"
            ]
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseInviteOperationResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "string",
          "enum": [
            "ACCOUNT_INVITE_ACCEPTED_NEED_PASSWORD",
            "ACCOUNT_INVITE_ACCEPTED",
            "USER_INVITED_SUCCESSFULLY",
            "USER_ALREADY_ADDED",
            "USER_ALREADY_INVITED",
            "FAIL",
            "INVITE_EXPIRED",
            "INVITE_INVALID"
          ]
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "UserInviteDTO": {
      "type": "object",
      "required": ["accountId", "email", "name", "token"],
      "properties": {
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RestResponseZendeskSsoLoginResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ZendeskSsoLoginResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ZendeskSsoLoginResponse": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "RestResponseVersionPackage": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/VersionPackage"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RuntimeInfo": {
      "type": "object",
      "properties": {
        "primary": {
          "type": "boolean"
        },
        "primaryVersion": {
          "type": "string"
        },
        "deployMode": {
          "type": "string"
        }
      }
    },
    "VersionInfo": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "buildNo": {
          "type": "string"
        },
        "gitCommit": {
          "type": "string"
        },
        "gitBranch": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "patch": {
          "type": "string"
        }
      }
    },
    "VersionPackage": {
      "type": "object",
      "properties": {
        "versionInfo": {
          "$ref": "#/definitions/VersionInfo"
        },
        "runtimeInfo": {
          "$ref": "#/definitions/RuntimeInfo"
        }
      }
    },
    "EntityVersionCollection": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "PROVISIONER",
            "ENVIRONMENT",
            "HOST",
            "RELEASE",
            "ARTIFACT",
            "SSH_USER",
            "SSH_PASSWORD",
            "SSH_APP_ACCOUNT",
            "SSH_KEY_PASSPHRASE",
            "SSH_APP_ACCOUNT_PASSOWRD",
            "SIMPLE_DEPLOYMENT",
            "ORCHESTRATED_DEPLOYMENT",
            "PIPELINE",
            "WORKFLOW",
            "DEPLOYMENT",
            "INSTANCE",
            "APPLICATION",
            "COMMAND",
            "CONFIG",
            "SERVICE_TEMPLATE",
            "INFRASTRUCTURE_MAPPING",
            "INFRASTRUCTURE_DEFINITION",
            "USER",
            "ARTIFACT_STREAM",
            "APPDYNAMICS_CONFIGID",
            "APPDYNAMICS_APPID",
            "APPDYNAMICS_TIERID",
            "ELK_CONFIGID",
            "ELK_INDICES",
            "NEWRELIC_CONFIGID",
            "NEWRELIC_APPID",
            "SS_SSH_CONNECTION_ATTRIBUTE",
            "SS_WINRM_CONNECTION_ATTRIBUTE",
            "SUMOLOGIC_CONFIGID",
            "SPLUNK_CONFIGID",
            "NEWRELIC_MARKER_CONFIGID",
            "NEWRELIC_MARKER_APPID",
            "API_KEY",
            "ACCOUNT",
            "APPLICATION_MANIFEST",
            "USER_GROUP",
            "WHITELISTED_IP",
            "CF_AWS_CONFIG_ID",
            "VERIFICATION_CONFIGURATION",
            "HELM_GIT_CONFIG_ID",
            "NOTIFICATION_GROUP",
            "HELM_CHART_SPECIFICATION",
            "PCF_SERVICE_SPECIFICATION",
            "LAMBDA_SPECIFICATION",
            "USER_DATA_SPECIFICATION",
            "ECS_CONTAINER_SPECIFICATION",
            "ECS_SERVICE_SPECIFICATION",
            "K8S_CONTAINER_SPECIFICATION",
            "CONFIG_FILE",
            "SERVICE_COMMAND",
            "MANIFEST_FILE",
            "SERVICE_VARIABLE",
            "TRIGGER",
            "ROLE",
            "TEMPLATE",
            "TEMPLATE_FOLDER",
            "SETTING_ATTRIBUTE",
            "ENCRYPTED_RECORDS",
            "CV_CONFIGURATION",
            "TAG",
            "CUSTOM_DASHBOARD",
            "PIPELINE_GOVERNANCE_STANDARD",
            "WORKFLOW_EXECUTION",
            "SERVERLESS_INSTANCE",
            "USER_INVITE",
            "LOGIN_SETTINGS",
            "SSO_SETTINGS",
            "DELEGATE",
            "DELEGATE_SCOPE",
            "DELEGATE_PROFILE",
            "EXPORT_EXECUTIONS_REQUEST",
            "GCP_CONFIG",
            "GIT_CONFIG",
            "JENKINS_SERVER",
            "SECRETS_MANAGER",
            "HELM_CHART",
            "SECRET",
            "CONNECTOR",
            "CLOUD_PROVIDER",
            "GOVERNANCE_FREEZE_CONFIG",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "entityName": {
          "type": "string"
        },
        "changeType": {
          "type": "string",
          "enum": ["CREATED", "UPDATED"]
        },
        "entityUuid": {
          "type": "string"
        },
        "entityParentUuid": {
          "type": "string"
        },
        "entityData": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseEntityVersionCollection": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityVersionCollection"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "WebHookRequest": {
      "type": "object",
      "properties": {
        "application": {
          "type": "string"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "manifests": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseWhitelist": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Whitelist"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Whitelist": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["ACTIVE", "DISABLED"]
        },
        "filter": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseWhitelist": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Whitelist"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseWorkflowPhase": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/WorkflowPhase"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseWorkflow": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Workflow"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "WorkflowVersion": {
      "type": "object",
      "properties": {
        "defaultVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponsePageResponseWorkflow": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workflow"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseWorkflowCategorySteps": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/WorkflowCategorySteps"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "WorkflowCategorySteps": {
      "type": "object",
      "properties": {
        "steps": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowStepMeta"
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowCategoryStepsMeta"
          }
        }
      }
    },
    "WorkflowCategoryStepsMeta": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stepIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WorkflowStepMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "favorite": {
          "type": "boolean"
        },
        "available": {
          "type": "boolean"
        }
      }
    },
    "RestResponseTrafficShiftMetadata": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TrafficShiftMetadata"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TrafficShiftMetadata": {
      "type": "object",
      "properties": {
        "phaseIdsWithTrafficShift": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseListNotificationRule": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationRule"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListInstanceElement": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceElement"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePhaseStep": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PhaseStep"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseConcurrencyStrategy": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ConcurrencyStrategy"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListVariable": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Alert": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ApprovalNeeded",
            "ManualInterventionNeeded",
            "NoActiveDelegates",
            "NoInstalledDelegates",
            "DelegatesDown",
            "DelegatesScalingGroupDownAlert",
            "DelegateProfileError",
            "NoEligibleDelegates",
            "PerpetualTaskAlert",
            "InvalidKMS",
            "GitSyncError",
            "GitConnectionError",
            "INVALID_SMTP_CONFIGURATION",
            "EMAIL_NOT_SENT_ALERT",
            "USERGROUP_SYNC_FAILED",
            "USAGE_LIMIT_EXCEEDED",
            "INSTANCE_USAGE_APPROACHING_LIMIT",
            "RESOURCE_USAGE_APPROACHING_LIMIT",
            "DEPLOYMENT_RATE_APPROACHING_LIMIT",
            "SETTING_ATTRIBUTE_VALIDATION_FAILED",
            "ARTIFACT_COLLECTION_FAILED",
            "CONTINUOUS_VERIFICATION_ALERT",
            "CONTINUOUS_VERIFICATION_DATA_COLLECTION_ALERT",
            "MANIFEST_COLLECTION_FAILED",
            "DEPLOYMENT_FREEZE_EVENT"
          ]
        },
        "status": {
          "type": "string",
          "enum": ["Open", "Closed", "Pending"]
        },
        "title": {
          "type": "string"
        },
        "resolutionTitle": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "enum": ["All", "Setup", "Approval", "ManualIntervention", "ContinuousVerification"]
        },
        "severity": {
          "type": "string",
          "enum": ["Warning", "Error"]
        },
        "alertData": {
          "$ref": "#/definitions/AlertData"
        },
        "alertReconciliation": {
          "$ref": "#/definitions/AlertReconciliation"
        },
        "closedAt": {
          "type": "integer",
          "format": "int64"
        },
        "triggerCount": {
          "type": "integer",
          "format": "int32"
        },
        "lastTriggeredAt": {
          "type": "integer",
          "format": "int64"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "cvCleanUpIteration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AlertData": {
      "type": "object"
    },
    "AlertReconciliation": {
      "type": "object",
      "properties": {
        "needed": {
          "type": "boolean"
        },
        "nextIteration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponsePageResponseAlert": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AlertType": {
      "type": "object",
      "properties": {
        "alertType": {
          "type": "string",
          "enum": [
            "ApprovalNeeded",
            "ManualInterventionNeeded",
            "NoActiveDelegates",
            "NoInstalledDelegates",
            "DelegatesDown",
            "DelegatesScalingGroupDownAlert",
            "DelegateProfileError",
            "NoEligibleDelegates",
            "PerpetualTaskAlert",
            "InvalidKMS",
            "GitSyncError",
            "GitConnectionError",
            "INVALID_SMTP_CONFIGURATION",
            "EMAIL_NOT_SENT_ALERT",
            "USERGROUP_SYNC_FAILED",
            "USAGE_LIMIT_EXCEEDED",
            "INSTANCE_USAGE_APPROACHING_LIMIT",
            "RESOURCE_USAGE_APPROACHING_LIMIT",
            "DEPLOYMENT_RATE_APPROACHING_LIMIT",
            "SETTING_ATTRIBUTE_VALIDATION_FAILED",
            "ARTIFACT_COLLECTION_FAILED",
            "CONTINUOUS_VERIFICATION_ALERT",
            "CONTINUOUS_VERIFICATION_DATA_COLLECTION_ALERT",
            "MANIFEST_COLLECTION_FAILED",
            "DEPLOYMENT_FREEZE_EVENT"
          ]
        },
        "category": {
          "type": "string",
          "enum": ["All", "Setup", "Approval", "ManualIntervention", "ContinuousVerification"]
        },
        "severity": {
          "type": "string",
          "enum": ["Warning", "Error"]
        }
      }
    },
    "RestResponseListAlertType": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertType"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AlertRiskDetail": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "txnName": {
          "type": "string"
        }
      }
    },
    "ContinuousVerificationAlertData": {
      "type": "object",
      "properties": {
        "cvConfiguration": {
          "$ref": "#/definitions/CVConfiguration"
        },
        "mlAnalysisType": {
          "type": "string",
          "enum": ["TIME_SERIES", "LOG_CLUSTER", "LOG_ML", "FEEDBACK_ANALYSIS"]
        },
        "alertStatus": {
          "type": "string",
          "enum": ["Open", "Closed", "Pending"]
        },
        "logAnomaly": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "hosts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "portalUrl": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "highRiskTxns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertRiskDetail"
          }
        },
        "riskScore": {
          "type": "number",
          "format": "double"
        },
        "analysisStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseBoolean": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "boolean"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseString": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "string"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "K8sEventCollectionBundle": {
      "type": "object",
      "required": ["connectorIdentifier"],
      "properties": {
        "connectorIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "cloudProviderId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "PerpetualTaskClientContext": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientParams": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "executionBundle": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "lastContextUpdated": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PerpetualTaskRecord": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "perpetualTaskType": {
          "type": "string"
        },
        "clientContext": {
          "$ref": "#/definitions/PerpetualTaskClientContext"
        },
        "intervalSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "timeoutMillis": {
          "type": "integer",
          "format": "int64"
        },
        "delegateId": {
          "type": "string"
        },
        "taskDescription": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "TASK_UNASSIGNED",
            "TASK_TO_REBALANCE",
            "TASK_PAUSED",
            "TASK_ASSIGNED",
            "NO_DELEGATE_INSTALLED",
            "NO_DELEGATE_AVAILABLE",
            "NO_ELIGIBLE_DELEGATES",
            "TASK_RUN_SUCCEEDED",
            "TASK_RUN_FAILED"
          ]
        },
        "unassignedReason": {
          "type": "string",
          "enum": ["NO_DELEGATE_INSTALLED", "NO_DELEGATE_AVAILABLE", "NO_ELIGIBLE_DELEGATES"]
        },
        "lastHeartbeat": {
          "type": "integer",
          "format": "int64"
        },
        "assignerIterations": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "rebalanceIteration": {
          "type": "integer",
          "format": "int64"
        },
        "assignTryCount": {
          "type": "integer",
          "format": "int32"
        },
        "assignAfterMs": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponsePerpetualTaskRecord": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PerpetualTaskRecord"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "CommandLibraryConfigurationDTO": {
      "type": "object",
      "properties": {
        "supportedCommandStoreNameList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clImplementationVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseCommandLibraryConfigurationDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CommandLibraryConfigurationDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ArtifactSource": {
      "type": "object",
      "discriminator": "artifactStreamType"
    },
    "ArtifactSourceTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseTemplate"
        },
        {
          "type": "object",
          "properties": {
            "artifactSource": {
              "$ref": "#/definitions/ArtifactSource"
            }
          }
        }
      ]
    },
    "AttributeMapping": {
      "type": "object",
      "properties": {
        "relativePath": {
          "type": "string"
        },
        "mappedAttribute": {
          "type": "string"
        }
      }
    },
    "BaseTemplate": {
      "type": "object",
      "discriminator": "type"
    },
    "CommandRefYaml": {
      "allOf": [
        {
          "$ref": "#/definitions/Yaml"
        },
        {
          "type": "object",
          "properties": {
            "variables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TemplateVariableYaml"
              }
            },
            "templateUri": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CustomArtifactSourceTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactSource"
        },
        {
          "type": "object",
          "properties": {
            "script": {
              "type": "string"
            },
            "timeoutSeconds": {
              "type": "string"
            },
            "customRepositoryMapping": {
              "$ref": "#/definitions/CustomRepositoryMapping"
            }
          }
        }
      ]
    },
    "CustomDeploymentTypeTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseTemplate"
        },
        {
          "type": "object",
          "properties": {
            "fetchInstanceScript": {
              "type": "string"
            },
            "hostObjectArrayPath": {
              "type": "string"
            },
            "hostAttributes": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "CustomRepositoryMapping": {
      "type": "object",
      "properties": {
        "artifactRoot": {
          "type": "string"
        },
        "buildNoPath": {
          "type": "string"
        },
        "artifactAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeMapping"
          }
        }
      }
    },
    "HttpTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseTemplate"
        },
        {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "method": {
              "type": "string"
            },
            "header": {
              "type": "string"
            },
            "headers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KeyValuePair"
              }
            },
            "body": {
              "type": "string"
            },
            "assertion": {
              "type": "string"
            },
            "executeWithPreviousSteps": {
              "type": "boolean"
            },
            "timeoutMillis": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "ImportedCommand": {
      "type": "object",
      "properties": {
        "commandStoreName": {
          "type": "string"
        },
        "commandName": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "repoUrl": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "importedCommandVersionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportedCommandVersion"
          }
        },
        "highestVersion": {
          "type": "string"
        }
      }
    },
    "ImportedCommandVersion": {
      "type": "object",
      "properties": {
        "commandStoreName": {
          "type": "string"
        },
        "commandName": {
          "type": "string"
        },
        "commandDisplayName": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "yamlContent": {
          "type": "string"
        },
        "templateObject": {
          "$ref": "#/definitions/BaseTemplate"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        }
      }
    },
    "PcfCommandTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseTemplate"
        },
        {
          "type": "object",
          "properties": {
            "scriptString": {
              "type": "string"
            },
            "timeoutIntervalInMinutes": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "ReferencedTemplate": {
      "type": "object",
      "properties": {
        "templateReference": {
          "$ref": "#/definitions/TemplateReference"
        },
        "variableMapping": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variable"
          }
        }
      }
    },
    "RestResponseListImportedCommand": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportedCommand"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ShellScriptTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseTemplate"
        },
        {
          "type": "object",
          "properties": {
            "scriptType": {
              "type": "string"
            },
            "scriptString": {
              "type": "string"
            },
            "outputVars": {
              "type": "string"
            },
            "secretOutputVars": {
              "type": "string"
            },
            "timeoutMillis": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "SshCommandTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseTemplate"
        },
        {
          "type": "object",
          "properties": {
            "commandType": {
              "type": "string",
              "enum": ["START", "STOP", "INSTALL", "ENABLE", "DISABLE", "VERIFY", "OTHER", "RESIZE", "SETUP"]
            },
            "commands": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Yaml"
              }
            },
            "commandUnits": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommandUnit"
              }
            },
            "referencedTemplateList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReferencedTemplate"
              }
            }
          }
        }
      ]
    },
    "TemplateVariableYaml": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Yaml": {
      "type": "object",
      "discriminator": "commandUnitType",
      "properties": {
        "name": {
          "type": "string"
        },
        "commandUnitType": {
          "type": "string"
        },
        "deploymentType": {
          "type": "string"
        }
      }
    },
    "RestResponseImportedCommand": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ImportedCommand"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseTemplate": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Template"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Template": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "name", "templateObject", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "folderId": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "versionDetails": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "folderPathId": {
          "type": "string"
        },
        "folderPath": {
          "type": "string"
        },
        "gallery": {
          "type": "string"
        },
        "templateObject": {
          "$ref": "#/definitions/BaseTemplate"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "versionedTemplate": {
          "$ref": "#/definitions/VersionedTemplate"
        },
        "galleryId": {
          "type": "string"
        },
        "referencedTemplateId": {
          "type": "string"
        },
        "referencedTemplateVersion": {
          "type": "integer",
          "format": "int64"
        },
        "importedTemplateDetails": {
          "$ref": "#/definitions/ImportedTemplateDetails"
        },
        "templateMetadata": {
          "$ref": "#/definitions/TemplateMetadata"
        },
        "referencedTemplateUri": {
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VersionedTemplate": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "templateObject", "uuid"],
      "properties": {
        "templateId": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "importedTemplateVersion": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "galleryId": {
          "type": "string"
        },
        "templateObject": {
          "$ref": "#/definitions/BaseTemplate"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CustomDeploymentTypeDTO": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "infraVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variable"
          }
        }
      }
    },
    "RestResponseCustomDeploymentTypeDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CustomDeploymentTypeDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListCustomDeploymentTypeDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomDeploymentTypeDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HarnessCDCurrentGenEventMetadata": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "serviceId": {
          "type": "string"
        },
        "environmentId": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "workflowStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "workflowEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "artifactType": {
          "type": "string"
        },
        "artifactName": {
          "type": "string"
        }
      }
    },
    "RestResponseListHarnessCDCurrentGenEventMetadata": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HarnessCDCurrentGenEventMetadata"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AppDynamicsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["accountname", "controllerUrl"],
          "properties": {
            "username": {
              "type": "string"
            },
            "accountname": {
              "type": "string"
            },
            "controllerUrl": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "passwordRef": {
              "type": "string"
            },
            "clientSecretRef": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "authType": {
              "type": "string",
              "enum": ["UsernamePassword", "ApiClientToken"]
            }
          }
        }
      ]
    },
    "ArtifactoryAuthCredentials": {
      "type": "object"
    },
    "ArtifactoryAuthentication": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/ArtifactoryAuthCredentials"
        }
      }
    },
    "ArtifactoryConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["artifactoryServerUrl"],
          "properties": {
            "artifactoryServerUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/ArtifactoryAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ArtifactoryUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactoryAuthCredentials"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsCodeCommitAuthenticationDTO": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["HTTPS"]
        },
        "spec": {
          "$ref": "#/definitions/AwsCodeCommitCredentialsDTO"
        }
      }
    },
    "AwsCodeCommitConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/AwsCodeCommitAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["Repo", "Region"]
            }
          }
        }
      ]
    },
    "AwsCodeCommitCredentialsDTO": {
      "type": "object"
    },
    "AwsCodeCommitHttpsCredentialsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCodeCommitCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["AWSCredentials"]
            },
            "spec": {
              "$ref": "#/definitions/AwsCodeCommitHttpsCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "AwsCodeCommitHttpsCredentialsSpecDTO": {
      "type": "object"
    },
    "AwsCodeCommitSecretKeyAccessKeyDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCodeCommitHttpsCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["secretKeyRef"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsCredential"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "AwsCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "crossAccountAccess": {
          "$ref": "#/definitions/CrossAccountAccess"
        },
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig", "Irsa"]
        },
        "spec": {
          "$ref": "#/definitions/AwsCredentialSpec"
        }
      }
    },
    "AwsCredentialSpec": {
      "type": "object"
    },
    "AwsCurAttributes": {
      "type": "object",
      "required": ["reportName", "s3BucketName"],
      "properties": {
        "reportName": {
          "type": "string"
        },
        "s3BucketName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "s3Prefix": {
          "type": "string"
        }
      }
    },
    "AwsKmsConnectorCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["AssumeIAMRole", "AssumeSTSRole", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        }
      }
    },
    "AwsKmsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["kmsArn"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsKmsConnectorCredential"
            },
            "kmsArn": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "AwsKmsCredentialSpec": {
      "type": "object"
    },
    "AwsKmsCredentialSpecAssumeIAM": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["delegateSelectors"],
          "properties": {
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              },
              "maxItems": 2147483647,
              "minItems": 1
            }
          }
        }
      ]
    },
    "AwsKmsCredentialSpecAssumeSTS": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["delegateSelectors", "roleArn"],
          "properties": {
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              },
              "maxItems": 2147483647,
              "minItems": 1
            },
            "roleArn": {
              "type": "string"
            },
            "externalName": {
              "type": "string"
            },
            "assumeStsRoleDuration": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AwsKmsCredentialSpecManualConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["accessKey", "secretKey"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "secretKey": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsManualConfigSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["secretKeyRef"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsSMCredentialSpecAssumeIAM": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        },
        {
          "type": "object"
        }
      ]
    },
    "AwsSMCredentialSpecAssumeSTS": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        },
        {
          "type": "object",
          "required": ["roleArn"],
          "properties": {
            "roleArn": {
              "type": "string"
            },
            "externalId": {
              "type": "string"
            },
            "assumeStsRoleDuration": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AwsSMCredentialSpecManualConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        },
        {
          "type": "object",
          "required": ["accessKey", "secretKey"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "secretKey": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsSecretManagerCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["AssumeIAMRole", "AssumeSTSRole", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        }
      }
    },
    "AwsSecretManagerCredentialSpec": {
      "type": "object"
    },
    "AwsSecretManagerDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential", "region"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsSecretManagerCredential"
            },
            "region": {
              "type": "string"
            },
            "secretNamePrefix": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "AzureKeyVaultConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["clientId", "secretKey", "subscription", "tenantId", "vaultName"],
          "properties": {
            "clientId": {
              "type": "string"
            },
            "secretKey": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "vaultName": {
              "type": "string"
            },
            "subscription": {
              "type": "string"
            },
            "azureEnvironmentType": {
              "type": "string",
              "enum": ["AZURE", "AZURE_US_GOVERNMENT"]
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "BillingExportSpec": {
      "type": "object",
      "required": ["containerName", "directoryName", "reportName", "storageAccountName", "subscriptionId"],
      "properties": {
        "storageAccountName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        },
        "directoryName": {
          "type": "string"
        },
        "reportName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        }
      }
    },
    "BitbucketApiAccess": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernameToken"]
        },
        "spec": {
          "$ref": "#/definitions/BitbucketApiAccessSpecDTO"
        }
      }
    },
    "BitbucketApiAccessSpecDTO": {
      "type": "object"
    },
    "BitbucketAuthentication": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Http", "Ssh"]
        },
        "spec": {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        }
      }
    },
    "BitbucketConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/BitbucketAuthentication"
            },
            "apiAccess": {
              "$ref": "#/definitions/BitbucketApiAccess"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["Account", "Repo"]
            }
          }
        }
      ]
    },
    "BitbucketCredentialsDTO": {
      "type": "object"
    },
    "BitbucketHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["UsernamePassword"]
            },
            "spec": {
              "$ref": "#/definitions/BitbucketHttpCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "BitbucketHttpCredentialsSpecDTO": {
      "type": "object"
    },
    "BitbucketSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BitbucketUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BitbucketUsernameTokenApiAccess": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CEAwsConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["crossAccountAccess"],
          "properties": {
            "crossAccountAccess": {
              "$ref": "#/definitions/CrossAccountAccess"
            },
            "curAttributes": {
              "$ref": "#/definitions/AwsCurAttributes"
            },
            "awsAccountId": {
              "type": "string"
            },
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            }
          }
        }
      ]
    },
    "CEAzureConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["subscriptionId", "tenantId"],
          "properties": {
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            },
            "tenantId": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "billingExportSpec": {
              "$ref": "#/definitions/BillingExportSpec"
            }
          }
        }
      ]
    },
    "CEKubernetesClusterConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["connectorRef"],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            }
          }
        }
      ]
    },
    "ConnectorConfigDTO": {
      "type": "object"
    },
    "ConnectorInfoDTO": {
      "type": "object",
      "required": ["identifier", "name", "spec", "type"],
      "properties": {
        "name": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "K8sCluster",
            "Git",
            "Splunk",
            "AppDynamics",
            "Prometheus",
            "Dynatrace",
            "Vault",
            "AzureKeyVault",
            "DockerRegistry",
            "Local",
            "AwsKms",
            "GcpKms",
            "AwsSecretManager",
            "Gcp",
            "Aws",
            "Artifactory",
            "Jira",
            "Nexus",
            "Github",
            "Gitlab",
            "Bitbucket",
            "Codecommit",
            "CEAws",
            "CEAzure",
            "GcpCloudCost",
            "CEK8sCluster",
            "HttpHelmRepo",
            "NewRelic",
            "Datadog",
            "SumoLogic",
            "PagerDuty",
            "CustomHealth",
            "ServiceNow"
          ]
        },
        "spec": {
          "$ref": "#/definitions/ConnectorConfigDTO"
        }
      }
    },
    "CrossAccountAccess": {
      "type": "object",
      "required": ["crossAccountRoleArn"],
      "properties": {
        "crossAccountRoleArn": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "CustomHealthConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["baseURL", "method"],
          "properties": {
            "baseURL": {
              "type": "string"
            },
            "headers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomHealthKeyAndValue"
              }
            },
            "params": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomHealthKeyAndValue"
              }
            },
            "method": {
              "type": "string",
              "enum": ["GET", "POST"]
            },
            "validationBody": {
              "type": "string"
            },
            "validationPath": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "CustomHealthKeyAndValue": {
      "type": "object",
      "required": ["key"],
      "properties": {
        "key": {
          "type": "string"
        },
        "encryptedValueRef": {
          "$ref": "#/definitions/SecretRefData"
        },
        "value": {
          "type": "string"
        },
        "valueEncrypted": {
          "type": "boolean"
        }
      }
    },
    "DataCollectionConnectorBundle": {
      "type": "object",
      "properties": {
        "connectorIdentifier": {
          "type": "string"
        },
        "sourceIdentifier": {
          "type": "string"
        },
        "dataCollectionWorkerId": {
          "type": "string"
        },
        "connectorDTO": {
          "$ref": "#/definitions/ConnectorInfoDTO"
        },
        "dataCollectionType": {
          "type": "string",
          "enum": ["CV", "KUBERNETES"]
        },
        "projectIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "serviceIdentifier": {
          "type": "string"
        },
        "envIdentifier": {
          "type": "string"
        }
      }
    },
    "DatadogConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiKeyRef", "applicationKeyRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "applicationKeyRef": {
              "type": "string"
            },
            "apiKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "DockerAuthCredentialsDTO": {
      "type": "object"
    },
    "DockerAuthenticationDTO": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/DockerAuthCredentialsDTO"
        }
      }
    },
    "DockerConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["dockerRegistryUrl", "providerType"],
          "properties": {
            "dockerRegistryUrl": {
              "type": "string"
            },
            "providerType": {
              "type": "string",
              "enum": ["DockerHub", "Harbor", "Quay", "Other"]
            },
            "auth": {
              "$ref": "#/definitions/DockerAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "DockerUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/DockerAuthCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "DynatraceConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiTokenRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "apiTokenRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "GcpBillingExportSpec": {
      "type": "object",
      "required": ["datasetId"],
      "properties": {
        "datasetId": {
          "type": "string"
        }
      }
    },
    "GcpCloudCostConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["projectId", "serviceAccountEmail"],
          "properties": {
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            },
            "projectId": {
              "type": "string"
            },
            "serviceAccountEmail": {
              "type": "string"
            },
            "billingExportSpec": {
              "$ref": "#/definitions/GcpBillingExportSpec"
            }
          }
        }
      ]
    },
    "GcpConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "credential": {
              "$ref": "#/definitions/GcpConnectorCredential"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "GcpConnectorCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/GcpCredentialSpec"
        }
      }
    },
    "GcpCredentialSpec": {
      "type": "object"
    },
    "GcpKmsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credentials"],
          "properties": {
            "projectId": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "keyRing": {
              "type": "string"
            },
            "keyName": {
              "type": "string"
            },
            "credentials": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "GcpManualDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/GcpCredentialSpec"
        },
        {
          "type": "object",
          "required": ["secretKeyRef"],
          "properties": {
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitAuthenticationDTO": {
      "type": "object",
      "discriminator": "type"
    },
    "GitConfigDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["connectionType", "spec", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "branchName": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "executeOnDelegate": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": ["Http", "Ssh"]
            },
            "connectionType": {
              "type": "string",
              "enum": ["Account", "Repo"]
            },
            "spec": {
              "$ref": "#/definitions/GitAuthenticationDTO"
            }
          }
        }
      ]
    },
    "GitHTTPAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitSSHAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubApiAccess": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["GithubApp", "Token"]
        },
        "spec": {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        }
      }
    },
    "GithubApiAccessSpecDTO": {
      "type": "object"
    },
    "GithubAppSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["applicationId", "installationId", "privateKeyRef"],
          "properties": {
            "installationId": {
              "type": "string"
            },
            "applicationId": {
              "type": "string"
            },
            "privateKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubAuthentication": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Http", "Ssh"]
        },
        "spec": {
          "$ref": "#/definitions/GithubCredentialsDTO"
        }
      }
    },
    "GithubConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/GithubAuthentication"
            },
            "apiAccess": {
              "$ref": "#/definitions/GithubApiAccess"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "executeOnDelegate": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": ["Account", "Repo"]
            }
          }
        }
      ]
    },
    "GithubCredentialsDTO": {
      "type": "object"
    },
    "GithubHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["UsernamePassword", "UsernameToken"]
            },
            "spec": {
              "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "GithubHttpCredentialsSpecDTO": {
      "type": "object"
    },
    "GithubSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubTokenSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubUsernameToken": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabApiAccess": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Token"]
        },
        "spec": {
          "$ref": "#/definitions/GitlabApiAccessSpecDTO"
        }
      }
    },
    "GitlabApiAccessSpecDTO": {
      "type": "object"
    },
    "GitlabAuthentication": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Http", "Ssh"]
        },
        "spec": {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        }
      }
    },
    "GitlabConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/GitlabAuthentication"
            },
            "apiAccess": {
              "$ref": "#/definitions/GitlabApiAccess"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["Account", "Repo"]
            }
          }
        }
      ]
    },
    "GitlabCredentialsDTO": {
      "type": "object"
    },
    "GitlabHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["UsernamePassword", "UsernameToken", "Kerberos"]
            },
            "spec": {
              "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "GitlabHttpCredentialsSpecDTO": {
      "type": "object"
    },
    "GitlabKerberos": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["kerberosKeyRef"],
          "properties": {
            "kerberosKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabTokenSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabUsernameToken": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "HttpHelmAuthCredentialsDTO": {
      "type": "object"
    },
    "HttpHelmAuthenticationDTO": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/HttpHelmAuthCredentialsDTO"
        }
      }
    },
    "HttpHelmConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["helmRepoUrl"],
          "properties": {
            "helmRepoUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/HttpHelmAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "HttpHelmUsernamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/HttpHelmAuthCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "JiraConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["jiraUrl", "passwordRef"],
          "properties": {
            "jiraUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "KubernetesAuthCredentialDTO": {
      "type": "object"
    },
    "KubernetesAuthDTO": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "ClientKeyCert", "ServiceAccount", "OpenIdConnect"]
        },
        "spec": {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        }
      }
    },
    "KubernetesClientKeyCertDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["clientCertRef", "clientKeyRef"],
          "properties": {
            "caCertRef": {
              "type": "string"
            },
            "clientCertRef": {
              "type": "string"
            },
            "clientKeyRef": {
              "type": "string"
            },
            "clientKeyPassphraseRef": {
              "type": "string"
            },
            "clientKeyAlgo": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesClusterConfigDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/KubernetesCredentialDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "KubernetesClusterDetailsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesCredentialSpecDTO"
        },
        {
          "type": "object",
          "required": ["auth", "masterUrl"],
          "properties": {
            "masterUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/KubernetesAuthDTO"
            }
          }
        }
      ]
    },
    "KubernetesCredentialDTO": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/KubernetesCredentialSpecDTO"
        }
      }
    },
    "KubernetesCredentialSpecDTO": {
      "type": "object"
    },
    "KubernetesOpenIdConnectDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["oidcClientIdRef", "oidcPasswordRef"],
          "properties": {
            "oidcIssuerUrl": {
              "type": "string"
            },
            "oidcUsername": {
              "type": "string"
            },
            "oidcUsernameRef": {
              "type": "string"
            },
            "oidcClientIdRef": {
              "type": "string"
            },
            "oidcPasswordRef": {
              "type": "string"
            },
            "oidcSecretRef": {
              "type": "string"
            },
            "oidcScopes": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesServiceAccountDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["serviceAccountTokenRef"],
          "properties": {
            "serviceAccountTokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "LocalConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "NewRelicConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiKeyRef", "newRelicAccountId", "url"],
          "properties": {
            "newRelicAccountId": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "apiKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "NexusAuthCredentials": {
      "type": "object"
    },
    "NexusAuthentication": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/NexusAuthCredentials"
        }
      }
    },
    "NexusConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["nexusServerUrl", "version"],
          "properties": {
            "nexusServerUrl": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/NexusAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "NexusUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/NexusAuthCredentials"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "PagerDutyConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiTokenRef"],
          "properties": {
            "apiTokenRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PrometheusConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "SecretRefData": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "scope": {
          "type": "string",
          "enum": ["account", "org", "project", "unknown"]
        },
        "decryptedValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "null": {
          "type": "boolean"
        }
      }
    },
    "ServiceNowConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef", "serviceNowUrl"],
          "properties": {
            "serviceNowUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "SplunkConnectorDTO": {
      "type": "object",
      "required": ["accountId", "passwordRef", "splunkUrl"],
      "properties": {
        "splunkUrl": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "delegateSelectors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "passwordRef": {
          "type": "string"
        }
      }
    },
    "SumoLogicConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["accessIdRef", "accessKeyRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "accessIdRef": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "VaultConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "authToken": {
              "type": "string"
            },
            "basePath": {
              "type": "string"
            },
            "vaultUrl": {
              "type": "string"
            },
            "renewalIntervalMinutes": {
              "type": "integer",
              "format": "int64"
            },
            "secretEngineManuallyConfigured": {
              "type": "boolean"
            },
            "secretEngineName": {
              "type": "string"
            },
            "appRoleId": {
              "type": "string"
            },
            "secretId": {
              "type": "string"
            },
            "secretEngineVersion": {
              "type": "integer",
              "format": "int32"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "namespace": {
              "type": "string"
            },
            "sinkPath": {
              "type": "string"
            },
            "useVaultAgent": {
              "type": "boolean"
            },
            "accessType": {
              "type": "string",
              "enum": ["APP_ROLE", "TOKEN", "VAULT_AGENT"]
            },
            "default": {
              "type": "boolean"
            },
            "readOnly": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "DataCollectionRequest": {
      "type": "object",
      "properties": {
        "connectorInfoDTO": {
          "$ref": "#/definitions/ConnectorInfoDTO"
        },
        "tracingId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "SPLUNK_SAVED_SEARCHES",
            "SPLUNK_SAMPLE_DATA",
            "SPLUNK_LATEST_HISTOGRAM",
            "STACKDRIVER_DASHBOARD_LIST",
            "STACKDRIVER_DASHBOARD_GET",
            "STACKDRIVER_SAMPLE_DATA",
            "STACKDRIVER_LOG_SAMPLE_DATA",
            "APPDYNAMICS_FETCH_APPS",
            "APPDYNAMICS_FETCH_TIERS",
            "APPDYNAMICS_GET_METRIC_DATA",
            "APPDYNAMICS_GET_SINGLE_METRIC_DATA",
            "APPDYNAMICS_FETCH_METRIC_STRUCTURE",
            "NEWRELIC_APPS_REQUEST",
            "NEWRELIC_VALIDATION_REQUEST",
            "PROMETHEUS_METRIC_LIST_GET",
            "PROMETHEUS_LABEL_NAMES_GET",
            "PROMETHEUS_LABEL_VALUES_GET",
            "PROMETHEUS_SAMPLE_DATA",
            "PAGERDUTY_SERVICES",
            "PAGERDUTY_REGISTER_WEBHOOK",
            "PAGERDUTY_DELETE_WEBHOOK",
            "DATADOG_DASHBOARD_LIST",
            "DATADOG_DASHBOARD_DETAILS",
            "DATADOG_METRIC_TAGS",
            "DATADOG_ACTIVE_METRICS",
            "DATADOG_TIME_SERIES_POINTS",
            "DATADOG_LOG_SAMPLE_DATA",
            "DATADOG_LOG_INDEXES",
            "NEWRELIC_SAMPLE_FETCH_REQUEST",
            "SYNC_DATA_COLLECTION",
            "CUSTOM_HEALTH_SAMPLE_DATA"
          ]
        },
        "dsl": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        }
      }
    },
    "CVNGPerpetualTaskDTO": {
      "type": "object",
      "properties": {
        "delegateId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "cvngPerpetualTaskUnassignedReason": {
          "type": "string",
          "enum": ["NO_DELEGATE_INSTALLED", "NO_DELEGATE_AVAILABLE", "NO_ELIGIBLE_DELEGATES"]
        },
        "cvngPerpetualTaskState": {
          "type": "string",
          "enum": ["TASK_UNASSIGNED", "TASK_TO_REBALANCE", "TASK_PAUSED", "TASK_ASSIGNED"]
        }
      }
    },
    "RestResponseCVNGPerpetualTaskDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CVNGPerpetualTaskDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Bar": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Histogram": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "intervalMs": {
          "type": "integer",
          "format": "int64"
        },
        "bars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Bar"
          }
        },
        "errorMessage": {
          "type": "string"
        },
        "splunkQuery": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseSplunkValidationResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SplunkValidationResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SampleLog": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SplunkSampleResponse": {
      "type": "object",
      "properties": {
        "rawSampleLogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SampleLog"
          }
        },
        "sample": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "splunkQuery": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "SplunkValidationResponse": {
      "type": "object",
      "properties": {
        "histogram": {
          "$ref": "#/definitions/Histogram"
        },
        "samples": {
          "$ref": "#/definitions/SplunkSampleResponse"
        },
        "errorMessage": {
          "type": "string"
        },
        "queryDurationMillis": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseListSplunkSavedSearch": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SplunkSavedSearch"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SplunkSavedSearch": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "searchQuery": {
          "type": "string"
        }
      }
    },
    "DashboardAccessPermissions": {
      "type": "object",
      "properties": {
        "userGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedActions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["READ", "UPDATE", "DELETE", "MANAGE"]
          }
        }
      }
    },
    "DashboardSettings": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "canUpdate": {
          "type": "boolean"
        },
        "canDelete": {
          "type": "boolean"
        },
        "canManage": {
          "type": "boolean"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardAccessPermissions"
          }
        },
        "uuid": {
          "type": "string"
        },
        "owner": {
          "type": "boolean"
        },
        "shared": {
          "type": "boolean"
        }
      }
    },
    "RestResponseDashboardSettings": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DashboardSettings"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseDashboardSettings": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardSettings"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AllAppFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationFilter"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "AllEnvFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentFilter"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "AllNonProdEnvFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentFilter"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "AllProdEnvFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentFilter"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "ApplicationFilter": {
      "type": "object",
      "discriminator": "filterType",
      "properties": {
        "filterType": {
          "type": "string",
          "enum": ["ALL", "CUSTOM"]
        },
        "envSelection": {
          "$ref": "#/definitions/EnvironmentFilter"
        },
        "serviceSelection": {
          "$ref": "#/definitions/ServiceFilter"
        }
      }
    },
    "CustomAppFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplicationFilter"
        },
        {
          "type": "object",
          "properties": {
            "apps": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "CustomEnvFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/EnvironmentFilter"
        },
        {
          "type": "object",
          "properties": {
            "environments": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "EnvironmentFilter": {
      "type": "object",
      "discriminator": "filterType",
      "properties": {
        "filterType": {
          "type": "string",
          "enum": ["ALL_PROD", "ALL_NON_PROD", "ALL", "CUSTOM"]
        }
      }
    },
    "GovernanceConfig": {
      "type": "object",
      "required": ["appId"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "deploymentFreeze": {
          "type": "boolean"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "timeRangeBasedFreezeConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeRangeBasedFreezeConfig"
          }
        },
        "weeklyFreezeConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeeklyFreezeConfig"
          }
        },
        "enableNextIterations": {
          "type": "boolean"
        },
        "enableNextCloseIterations": {
          "type": "boolean"
        },
        "nextIterations": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "nextCloseIterations": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "RestResponseGovernanceConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/GovernanceConfig"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceFilter": {
      "type": "object",
      "properties": {
        "filterType": {
          "type": "string",
          "enum": ["ALL", "CUSTOM"]
        },
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TimeRangeBasedFreezeConfig": {
      "type": "object",
      "properties": {
        "freezeForAllApps": {
          "type": "boolean"
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environmentTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["PROD", "NON_PROD", "ALL"]
          }
        },
        "timeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "applicable": {
          "type": "boolean"
        },
        "appSelections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationFilter"
          }
        },
        "userGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        },
        "freezeWindowState": {
          "type": "string",
          "enum": ["ACTIVE", "INACTIVE"]
        }
      }
    },
    "WeeklyFreezeConfig": {
      "type": "object",
      "properties": {
        "freezeForAllApps": {
          "type": "boolean"
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environmentTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["PROD", "NON_PROD", "ALL"]
          }
        },
        "weeklyRange": {
          "readOnly": true,
          "$ref": "#/definitions/WeeklyRange"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "applicable": {
          "type": "boolean"
        },
        "appSelections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationFilter"
          }
        },
        "userGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "WeeklyRange": {
      "type": "object",
      "properties": {
        "endDay": {
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "readOnly": true
        },
        "startDay": {
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "type": "string",
          "readOnly": true
        },
        "timeZone": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DeploymentFreezeInfo": {
      "type": "object",
      "properties": {
        "freezeAll": {
          "type": "boolean"
        },
        "allEnvFrozenApps": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "appEnvs": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "RestResponseDeploymentFreezeInfo": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DeploymentFreezeInfo"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "GovernanceRuleStatus": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        },
        "tagsIncluded": {
          "type": "boolean"
        },
        "matchType": {
          "type": "string",
          "enum": ["ANY", "ALL"]
        },
        "tagsLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          }
        }
      }
    },
    "GovernanceStandard": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PipelineReportCard": {
      "type": "object",
      "properties": {
        "governanceStandard": {
          "$ref": "#/definitions/GovernanceStandard"
        },
        "pipelineId": {
          "type": "string"
        },
        "ruleStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GovernanceRuleStatus"
          }
        }
      }
    },
    "RestResponseListPipelineReportCard": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineReportCard"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Usage": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string"
        },
        "entityType": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PipelineGovernanceConfig": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "readOnly": true
        },
        "accountId": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "readOnly": true
        },
        "rules": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PipelineGovernanceRule"
          }
        },
        "restrictions": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Restriction"
          }
        },
        "enabled": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "PipelineGovernanceRule": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "matchType": {
          "type": "string",
          "enum": ["ANY", "ALL"]
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "RestResponsePipelineGovernanceConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PipelineGovernanceConfig"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Restriction": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["APP_BASED", "TAG_BASED"]
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        }
      }
    },
    "RestResponseListPipelineGovernanceConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PipelineGovernanceConfig"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "GraphQLQuery": {
      "type": "object",
      "properties": {
        "operationName": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "StaticLimit": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "limitType": {
          "type": "string",
          "enum": ["STATIC", "RATE_LIMIT"]
        }
      }
    },
    "RateLimit": {
      "type": "object",
      "required": ["durationUnit"],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "duration": {
          "type": "integer",
          "format": "int32"
        },
        "durationUnit": {
          "type": "string",
          "enum": ["NANOSECONDS", "MICROSECONDS", "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS"]
        },
        "limitType": {
          "type": "string",
          "enum": ["STATIC", "RATE_LIMIT"]
        }
      }
    },
    "AwsSecretsManagerConfig": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "name": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "secretNamePrefix": {
          "type": "string"
        },
        "assumeIamRoleOnDelegate": {
          "type": "boolean"
        },
        "assumeStsRoleOnDelegate": {
          "type": "boolean"
        },
        "assumeStsRoleDuration": {
          "type": "integer",
          "format": "int32"
        },
        "roleArn": {
          "type": "string"
        },
        "externalName": {
          "type": "string"
        },
        "delegateSelectors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "accountId": {
          "type": "string"
        },
        "numOfEncryptedValue": {
          "type": "integer",
          "format": "int32"
        },
        "encryptedBy": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "nextTokenRenewIteration": {
          "type": "integer",
          "format": "int64"
        },
        "manuallyEnteredSecretEngineMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "templatizedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default": {
          "type": "boolean"
        },
        "templatized": {
          "type": "boolean"
        }
      }
    },
    "AzureVaultConfig": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "name": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "vaultName": {
          "type": "string"
        },
        "subscription": {
          "type": "string"
        },
        "delegateSelectors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "azureEnvironmentType": {
          "type": "string",
          "enum": ["AZURE", "AZURE_US_GOVERNMENT"]
        },
        "uuid": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "accountId": {
          "type": "string"
        },
        "numOfEncryptedValue": {
          "type": "integer",
          "format": "int32"
        },
        "encryptedBy": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "nextTokenRenewIteration": {
          "type": "integer",
          "format": "int64"
        },
        "manuallyEnteredSecretEngineMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "templatizedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default": {
          "type": "boolean"
        },
        "templatized": {
          "type": "boolean"
        }
      }
    },
    "CustomSecretsManagerConfig": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "name": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "delegateSelectors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "testVariables": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EncryptedDataParams"
          }
        },
        "executeOnDelegate": {
          "type": "boolean"
        },
        "host": {
          "type": "string"
        },
        "commandPath": {
          "type": "string"
        },
        "connectorId": {
          "type": "string"
        },
        "customSecretsManagerShellScript": {
          "$ref": "#/definitions/CustomSecretsManagerShellScript"
        },
        "remoteHostConnector": {
          "$ref": "#/definitions/EncryptableSetting"
        },
        "uuid": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "accountId": {
          "type": "string"
        },
        "numOfEncryptedValue": {
          "type": "integer",
          "format": "int32"
        },
        "encryptedBy": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "nextTokenRenewIteration": {
          "type": "integer",
          "format": "int64"
        },
        "manuallyEnteredSecretEngineMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "templatizedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectorTemplatized": {
          "type": "boolean"
        },
        "encryptionServiceUrl": {
          "type": "string"
        },
        "validationCriteria": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "templatized": {
          "type": "boolean"
        }
      }
    },
    "CustomSecretsManagerShellScript": {
      "type": "object",
      "properties": {
        "scriptType": {
          "type": "string",
          "enum": ["BASH", "POWERSHELL"]
        },
        "scriptString": {
          "type": "string"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeoutMillis": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EncryptableSetting": {
      "type": "object",
      "properties": {
        "settingType": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "RestResponseCustomSecretsManagerConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CustomSecretsManagerConfig"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CyberArkConfig": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "name": {
          "type": "string"
        },
        "cyberArkUrl": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "clientCertificate": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "accountId": {
          "type": "string"
        },
        "numOfEncryptedValue": {
          "type": "integer",
          "format": "int32"
        },
        "encryptedBy": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "nextTokenRenewIteration": {
          "type": "integer",
          "format": "int64"
        },
        "manuallyEnteredSecretEngineMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "templatizedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "certValidationRequired": {
          "type": "boolean"
        },
        "encryptionServiceUrl": {
          "type": "string"
        },
        "validationCriteria": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "templatized": {
          "type": "boolean"
        }
      }
    },
    "KmsConfig": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "name": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "kmsArn": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "assumeIamRoleOnDelegate": {
          "type": "boolean"
        },
        "assumeStsRoleOnDelegate": {
          "type": "boolean"
        },
        "assumeStsRoleDuration": {
          "type": "integer",
          "format": "int32"
        },
        "roleArn": {
          "type": "string"
        },
        "externalName": {
          "type": "string"
        },
        "delegateSelectors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "accountId": {
          "type": "string"
        },
        "numOfEncryptedValue": {
          "type": "integer",
          "format": "int32"
        },
        "encryptedBy": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "nextTokenRenewIteration": {
          "type": "integer",
          "format": "int64"
        },
        "manuallyEnteredSecretEngineMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "templatizedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default": {
          "type": "boolean"
        },
        "templatized": {
          "type": "boolean"
        }
      }
    },
    "SSHVaultConfig": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "accountId": {
          "type": "string"
        },
        "numOfEncryptedValue": {
          "type": "integer",
          "format": "int32"
        },
        "encryptedBy": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "nextTokenRenewIteration": {
          "type": "integer",
          "format": "int64"
        },
        "manuallyEnteredSecretEngineMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "templatizedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "vaultUrl": {
          "type": "string"
        },
        "authToken": {
          "type": "string"
        },
        "appRoleId": {
          "type": "string"
        },
        "secretId": {
          "type": "string"
        },
        "secretEngineName": {
          "type": "string"
        },
        "renewalInterval": {
          "type": "integer",
          "format": "int64"
        },
        "engineManuallyEntered": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        },
        "renewedAt": {
          "type": "integer",
          "format": "int64"
        },
        "useVaultAgent": {
          "type": "boolean"
        },
        "delegateSelectors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sinkPath": {
          "type": "string"
        },
        "certValidationRequired": {
          "type": "boolean"
        },
        "default": {
          "type": "boolean"
        },
        "templatized": {
          "type": "boolean"
        }
      }
    },
    "RestResponseListSecretEngineSummary": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretEngineSummary"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SecretEngineSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SecretText": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "kmsId": {
          "type": "string"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "hideFromListing": {
          "type": "boolean"
        },
        "inheritScopesFromSM": {
          "type": "boolean"
        },
        "additionalMetadata": {
          "$ref": "#/definitions/AdditionalMetadata"
        },
        "runtimeParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "value": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EncryptedDataParams"
          }
        },
        "parameterizedSecret": {
          "type": "boolean"
        },
        "inlineSecret": {
          "type": "boolean"
        },
        "referencedSecret": {
          "type": "boolean"
        }
      }
    },
    "RestResponseSetSecretSetupUsage": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/SecretSetupUsage"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SecretSetupUsage": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        },
        "fieldName": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/UuidAware"
        }
      }
    },
    "UuidAware": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "RestResponseListUuidAware": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UuidAware"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AtomicInteger": {
      "type": "object",
      "properties": {
        "andIncrement": {
          "type": "integer",
          "format": "int32"
        },
        "andDecrement": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EncryptedData": {
      "type": "object",
      "required": ["encryptionType", "lastUpdatedAt", "type", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "encryptionKey": {
          "type": "string"
        },
        "encryptedValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EncryptedDataParams"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        },
        "parents": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/EncryptedDataParent"
          }
        },
        "accountId": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "kmsId": {
          "type": "string"
        },
        "additionalMetadata": {
          "$ref": "#/definitions/AdditionalMetadata"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "appIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "envIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backupEncryptedValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backupEncryptionKey": {
          "type": "string"
        },
        "backupKmsId": {
          "type": "string"
        },
        "backupEncryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "serviceVariableIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "searchTags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AtomicInteger"
          }
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "inheritScopesFromSM": {
          "type": "boolean"
        },
        "nextMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "nextAwsToGcpKmsMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "nextLocalToGcpKmsMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "nextAwsKmsToGcpKmsMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "base64Encoded": {
          "type": "boolean"
        },
        "encryptedBy": {
          "type": "string"
        },
        "setupUsage": {
          "type": "integer",
          "format": "int32"
        },
        "runTimeUsage": {
          "type": "integer",
          "format": "int64"
        },
        "changeLog": {
          "type": "integer",
          "format": "int32"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ngMetadata": {
          "$ref": "#/definitions/NGEncryptedDataMetadata"
        },
        "hideFromListing": {
          "type": "boolean"
        },
        "parameterizedSecret": {
          "type": "boolean"
        },
        "inlineSecret": {
          "type": "boolean"
        },
        "referencedSecret": {
          "type": "boolean"
        }
      }
    },
    "EncryptedDataParent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "HOST_CONNECTION_ATTRIBUTES",
            "BASTION_HOST_CONNECTION_ATTRIBUTES",
            "SMTP",
            "SFTP",
            "JENKINS",
            "BAMBOO",
            "STRING",
            "SPLUNK",
            "ELK",
            "LOGZ",
            "SUMO",
            "DATA_DOG",
            "APM_VERIFICATION",
            "BUG_SNAG",
            "LOG_VERIFICATION",
            "APP_DYNAMICS",
            "NEW_RELIC",
            "DYNA_TRACE",
            "INSTANA",
            "DATA_DOG_LOG",
            "CLOUD_WATCH",
            "SCALYR",
            "ELB",
            "SLACK",
            "AWS",
            "GCS",
            "GCP",
            "AZURE",
            "PCF",
            "DIRECT",
            "KUBERNETES_CLUSTER",
            "DOCKER",
            "ECR",
            "GCR",
            "ACR",
            "PHYSICAL_DATA_CENTER",
            "KUBERNETES",
            "NEXUS",
            "ARTIFACTORY",
            "SMB",
            "AMAZON_S3",
            "GIT",
            "SSH_SESSION_CONFIG",
            "SERVICE_VARIABLE",
            "CONFIG_FILE",
            "KMS",
            "GCP_KMS",
            "JIRA",
            "SERVICENOW",
            "SECRET_TEXT",
            "YAML_GIT_SYNC",
            "VAULT",
            "VAULT_SSH",
            "AWS_SECRETS_MANAGER",
            "CYBERARK",
            "WINRM_CONNECTION_ATTRIBUTES",
            "WINRM_SESSION_CONFIG",
            "PROMETHEUS",
            "INFRASTRUCTURE_MAPPING",
            "HTTP_HELM_REPO",
            "AMAZON_S3_HELM_REPO",
            "GCS_HELM_REPO",
            "SPOT_INST",
            "AZURE_ARTIFACTS_PAT",
            "CUSTOM",
            "CE_AWS",
            "CE_GCP",
            "CE_AZURE",
            "AZURE_VAULT",
            "KUBERNETES_CLUSTER_NG",
            "GIT_NG",
            "GCP_SECRETS_MANAGER",
            "TRIGGER"
          ]
        },
        "fieldName": {
          "type": "string"
        }
      }
    },
    "NGEncryptedDataMetadata": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "accountIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretManagerIdentifier": {
          "type": "string"
        },
        "secretManagerName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageResponseEncryptedData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncryptedData"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "NGSecretManagerMetadata": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "accountIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NGTag"
          }
        },
        "description": {
          "type": "string"
        },
        "harnessManaged": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "NGTag": {
      "type": "object",
      "required": ["key", "value"],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "RestResponseSecretManagerConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SecretManagerConfig"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SecretManagerConfig": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "accountId": {
          "type": "string"
        },
        "numOfEncryptedValue": {
          "type": "integer",
          "format": "int32"
        },
        "encryptedBy": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "nextTokenRenewIteration": {
          "type": "integer",
          "format": "int64"
        },
        "manuallyEnteredSecretEngineMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "ngMetadata": {
          "$ref": "#/definitions/NGSecretManagerMetadata"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "templatizedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default": {
          "type": "boolean"
        },
        "templatized": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "encryptionServiceUrl": {
          "type": "string"
        },
        "validationCriteria": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseSecretUsageLog": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretUsageLog"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SecretUsageLog": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "encryptedDataId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "workflowExecutionId": {
          "type": "string"
        },
        "envId": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "workflowExecutionName": {
          "type": "string"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "pipelineExecution": {
          "type": "boolean"
        }
      }
    },
    "RestResponseListSecretChangeLog": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretChangeLog"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SecretChangeLog": {
      "type": "object",
      "required": ["lastUpdatedAt", "user", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "encryptedDataId": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "description": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "external": {
          "type": "boolean"
        }
      }
    },
    "RestResponseCollectionSettingAttribute": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SettingAttribute"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListSecretManagerConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecretManagerConfig"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "VaultConfig": {
      "type": "object",
      "required": ["uuid"],
      "properties": {
        "basePath": {
          "type": "string"
        },
        "renewIntervalHours": {
          "type": "integer",
          "format": "int32"
        },
        "secretEngineVersion": {
          "type": "integer",
          "format": "int32"
        },
        "uuid": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string",
          "enum": [
            "LOCAL",
            "KMS",
            "GCP_KMS",
            "AWS_SECRETS_MANAGER",
            "AZURE_VAULT",
            "CYBERARK",
            "VAULT",
            "GCP_SECRETS_MANAGER",
            "CUSTOM",
            "VAULT_SSH"
          ]
        },
        "accountId": {
          "type": "string"
        },
        "numOfEncryptedValue": {
          "type": "integer",
          "format": "int32"
        },
        "encryptedBy": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "nextTokenRenewIteration": {
          "type": "integer",
          "format": "int64"
        },
        "manuallyEnteredSecretEngineMigrationIteration": {
          "type": "integer",
          "format": "int64"
        },
        "usageRestrictions": {
          "$ref": "#/definitions/UsageRestrictions"
        },
        "scopedToAccount": {
          "type": "boolean"
        },
        "templatizedFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "vaultUrl": {
          "type": "string"
        },
        "authToken": {
          "type": "string"
        },
        "appRoleId": {
          "type": "string"
        },
        "secretId": {
          "type": "string"
        },
        "secretEngineName": {
          "type": "string"
        },
        "renewalInterval": {
          "type": "integer",
          "format": "int64"
        },
        "engineManuallyEntered": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        },
        "renewedAt": {
          "type": "integer",
          "format": "int64"
        },
        "useVaultAgent": {
          "type": "boolean"
        },
        "delegateSelectors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "sinkPath": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "certValidationRequired": {
          "type": "boolean"
        },
        "default": {
          "type": "boolean"
        },
        "templatized": {
          "type": "boolean"
        }
      }
    },
    "RestResponseTemplateGallery": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TemplateGallery"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TemplateGallery": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "referencedGalleryId": {
          "type": "string"
        },
        "global": {
          "type": "boolean"
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "galleryKey": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseTemplateGallery": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateGallery"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseTemplateFolder": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TemplateFolder"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TemplateFolder": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parentId": {
          "type": "string"
        },
        "nodeType": {
          "type": "string"
        },
        "galleryId": {
          "type": "string"
        },
        "templatesCount": {
          "type": "integer",
          "format": "int64"
        },
        "pathId": {
          "type": "string"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateFolder"
          }
        },
        "keywords": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseListTemplateMetaData": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateMetaData"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TemplateMetaData": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "folderName": {
          "type": "string"
        }
      }
    },
    "RestResponsePageResponseTemplate": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Template"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponsePageResponseTemplateVersion": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateVersion"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TemplateVersion": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "changeType": {
          "type": "string"
        },
        "templateUuid": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "templateType": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "versionDetails": {
          "type": "string"
        },
        "importedTemplateVersion": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "galleryId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CEView": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "accountId": {
          "type": "string"
        },
        "viewVersion": {
          "type": "string"
        },
        "viewTimeRange": {
          "$ref": "#/definitions/ViewTimeRange"
        },
        "viewRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewRule"
          }
        },
        "dataSources": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["CLUSTER", "AWS", "GCP", "AZURE", "COMMON", "CUSTOM", "BUSINESS_MAPPING", "LABEL"]
          }
        },
        "viewVisualization": {
          "$ref": "#/definitions/ViewVisualization"
        },
        "viewType": {
          "type": "string",
          "enum": ["SAMPLE", "CUSTOMER", "DEFAULT_AZURE", "DEFAULT"]
        },
        "viewState": {
          "type": "string",
          "enum": ["DRAFT", "COMPLETED"]
        },
        "totalCost": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        }
      }
    },
    "RestResponseCEView": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CEView"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ViewCondition": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "ViewField": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "enum": ["CLUSTER", "AWS", "GCP", "AZURE", "COMMON", "CUSTOM", "BUSINESS_MAPPING", "LABEL"]
        },
        "identifierName": {
          "type": "string"
        }
      }
    },
    "ViewIdCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/ViewCondition"
        },
        {
          "type": "object",
          "properties": {
            "viewField": {
              "$ref": "#/definitions/ViewField"
            },
            "viewOperator": {
              "type": "string",
              "enum": ["IN", "NOT_IN", "NOT_NULL", "NULL"]
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ViewRule": {
      "type": "object",
      "properties": {
        "viewConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewCondition"
          }
        }
      }
    },
    "ViewTimeRange": {
      "type": "object",
      "properties": {
        "viewTimeRangeType": {
          "type": "string",
          "enum": ["LAST_7", "LAST_30", "LAST_MONTH", "CURRENT_MONTH", "CUSTOM"]
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ViewVisualization": {
      "type": "object",
      "properties": {
        "granularity": {
          "type": "string",
          "enum": ["DAY", "MONTH"]
        },
        "groupBy": {
          "$ref": "#/definitions/ViewField"
        },
        "chartType": {
          "type": "string",
          "enum": ["STACKED_TIME_SERIES", "STACKED_LINE_CHART"]
        }
      }
    },
    "RestResponseViewCustomField": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ViewCustomField"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ViewCustomField": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "viewId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sqlFormula": {
          "type": "string"
        },
        "displayFormula": {
          "type": "string"
        },
        "userDefinedExpression": {
          "type": "string"
        },
        "viewFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewField"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseYamlHistory": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/YamlHistory"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "YamlHistory": {
      "type": "object"
    },
    "RestResponseYamlVersion": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/YamlVersion"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "YamlVersion": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "yamlVersionId": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string",
          "enum": [
            "SETUP",
            "APP",
            "SERVICE",
            "SERVICE_COMMAND",
            "CONFIG_FILE",
            "ENVIRONMENT",
            "CONFIG_FILE_OVERRIDE",
            "SETTING",
            "WORKFLOW",
            "PIPELINE",
            "PROVISIONER",
            "TRIGGER",
            "ARTIFACT_STREAM",
            "INFRA_MAPPING",
            "INFRA_DEFINITION",
            "DEPLOYMENT_SPEC",
            "APPLICATION_DEFAULTS",
            "ACCOUNT_DEFAULTS",
            "NOTIFICATION_GROUP",
            "APPLICATION_MANIFEST",
            "APPLICATION_MANIFEST_FILE",
            "SERVICE_CV_CONFIG",
            "TAGS",
            "GLOBAL_TEMPLATE_LIBRARY",
            "APPLICATION_TEMPLATE_LIBRARY",
            "GOVERNANCE_CONFIG",
            "EVENT_RULE"
          ]
        },
        "entityId": {
          "type": "string"
        },
        "inEffectStart": {
          "type": "integer",
          "format": "int64"
        },
        "inEffectEnd": {
          "type": "integer",
          "format": "int64"
        },
        "yaml": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        }
      }
    },
    "GitSyncWebhook": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "accountId": {
          "type": "string"
        },
        "webhookToken": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseGitSyncWebhook": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/GitSyncWebhook"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListGitSyncError": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitSyncError"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseYamlPayload": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/YamlPayload"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "YamlPayload": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "yaml": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "Base": {
      "type": "object",
      "required": ["appId", "lastUpdatedAt", "uuid"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseBase": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Base"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseYamlGitConfig": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/YamlGitConfig"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "FileOperationStatus": {
      "type": "object",
      "properties": {
        "yamlFilePath": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["FAILED", "SUCCESS", "SKIPPED"]
        },
        "errorMssg": {
          "type": "string"
        },
        "entityId": {
          "type": "string"
        }
      }
    },
    "RestResponseYamlOperationResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/YamlOperationResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "YamlOperationResponse": {
      "type": "object",
      "properties": {
        "responseStatus": {
          "type": "string",
          "enum": ["FAILED", "SUCCESS"]
        },
        "errorMessage": {
          "type": "string"
        },
        "filesStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileOperationStatus"
          }
        }
      }
    },
    "RestResponseFileOperationStatus": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/FileOperationStatus"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    }
  }
}
