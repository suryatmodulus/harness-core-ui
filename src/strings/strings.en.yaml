harness: Harness # Name of the company
signUp:
  signIn: 'Sign In'
  signUp: 'Sign Up'
  ssoButton: 'Single Sign-On'
  message:
    primary: 'Sign up for an account'
    secondary: 'and get ship done'
  form:
    emailLabel: '{{ $.email }}'
    emailPlaceholder: 'email@work.com'
    passwordPlaceholder: 8+ characters
  oAuth:
    signup: 'or sign up with'
    signin: 'or login with'
  disclaimer:
    initial: 'By signing up you agree to our '
    privacyPolicy: 'Privacy Policy'
    middle: ' and our '
    terms: 'Terms of Use'
  noAccount: 'No Account?'
signOut: Sign Out
connectorsLabel: Connectors
dashboardLabel: 'Dashboard'
regionLabel: 'Region'
createdBy: 'Created by'
ciCodebase: CI Codebase
featureFlagsText: '{{ $.common.purpose.cf.continuous }}'
flag: Flag
newLabel: New
featureNA: This feature is not available as of now
logView: Log View
projectsText: Projects
orgsText: Organizations
getStarted: Get Started
projectLabel: Project
projectResources: Project Resources
adminFunctions: Adminstrative Functions
action: Action
functions: Functions
otherWorkloads: Other Workloads
multipleService: Multiple Services
orgLabel: Organization
editPipeline: Edit Pipeline
users: Users
roles: Roles
newRole: New Role
editRole: Edit Role
created: Created
create: Create
resourceGroups: Resource Groups
modules: Modules
account: 'Account'
repository: 'Repository'
location: LOCATION
timeMinutes: min
whenCondition: When Condition
serviceOrServices: 'Service(s)'
environmentOrEnvironments: 'Environment(s)'
artifactOrArtifacts: 'Artifact(s)'
artifactRepository: ARTIFACT REPOSITORY
more: '+{{number}} more'
addFile: Add File
email: Email
yes: 'Yes'
no: 'No'
or: or
restart: 'Restart'
invalidText: Invalid
noData: No Data
members: Members
wip: Work in progress
tagRegex: Tag Regex
plusNumber: + {{number}}
of: of
step: Step
parallelSteps: Parallel Steps
stepGroup: Step Group
changeHistory: Change History
entity: Entity
entities: Entities
enableGitExperience: Enable Git Experience
gitExperienceNewUserText: Store your Pipelines and Harness Configurations in Git.
selectGitProvider: Select your Git Provider
selectGitConnectorTypeLabel: 'Select the Connector to your {{type}}'
lastTested: Last Tested
lastUpdated: Last Updated
lastConnectionSuccess: Last time connection was successful
lastActivity: Last Activity
noDetails: No details found
connecectorHelpHeader: What is a Connector?
connecectorHelpText: Connectors integrate Harness with your cloud platforms, codebase and artifact repos, and collaboration and monitoring tools.
connectivityStatus: Connectivity Status
lastStatusCheckAt: 'Last status check at '
lastSuccessfulStatusCheckAt: 'Last successful status check at '
noReferencesData: 'There are no references of this Connector.'
connectorCreated: Connector Created
fieldRequired: '{{field}} is a required field'
deploymentText: Deployment
deploymentTypeText: Deployment Type
cloudCostsText: Cloud Costs
changeVerificationText: Change Verifications
deploymentsText: Deployments
dockerRegistry: 'Docker Registry'
executionText: Execution
executionsText: Executions
executionHeaderText: Execution History
runPipelineText: Run
rollbackLabel: Rollback
addStage: Add Stage
rollbackSteps: Rollback Steps
noConnectorFound: No Connector Found
noUserGroupsFound: No User Groups found
saveConnectorSuccess: Connector saved
resources: 'Resources'
kubernetesText: Kubernetes
kubernetesDirectText: Kubernetes Direct
connector: Connector
profile: Profile
taskId: 'TaskId:'
preferences: Preferences
cloudProviders: Cloud Providers
artifactRepositories: Artifact Repositories
codeRepositories: Code Repositories
ticketingSystems: Ticketing Systems
monitoringAndLoggingSystems: Monitoring and Logging Systems
secretManagers: Secret Managers
connection: Connection
refrencedBy: Referenced by
activityHistoryLabel: Activity History
connectionMode: Connection Mode
credType: Credential Type
serviceDeploymentTypes:
  kubernetes: '{{$.kubernetesText}}'
  amazonEcs: '{{$.delegate.cardData.amazonECS.name}}'
  amazonAmi: AWS AMI
  awsCodeDeploy: CodeDeploy
  winrm: WinRM
  awsLambda: AWS Lambda
  pcf: TAS
  ssh: Secure Shell
  deployDifferentLabel: Deploy different service
noDeploymentText: Your Pipeline does not have any executions yet. Click the button below to run a pipeline.
noBuildsText: Your account does not have any builds yet. Click the button below to run a pipeline.
newConnector: 'New Connector'
thisConnectorIsSavedAs: 'Selected Connector'
errorTitle: Something went wrong...
errorSubtitle: This error has been reported and we are looking into it with high priority.
errorHelp: to continue, this will remove all unsaved changes.
errorTag: Error fetching tags
deleteError: This resource could not be deleted
please: Please
clickHere: ' click here '
blueGreen: BlueGreen
primary: Primary
canary: Canary
changes: Changes
change: Change
events: Events
details: Details
test: Test
enable: Enable
packagesLabel: Packages
testAnnotationsLabel: Test Annotations
runOnlySelectedTestsLabel: Run only selected tests
buildToolLabel: Build Tool
languageLabel: Language
reset: Reset
archiveFormat: Archive Format
failIfKeyNotFound: Fail If Key Doesn’t Exist
override: Override Cache
pathStyle: Path Style
risk: Risk
error: Error
active: Active
inactive: Inactive
health: Health
changeSource: Change Source
monitoringSource: Monitoring Source
sensitivity: Sensitivity
pipelines: Pipelines
inputs: Inputs
commits: Commits
tests: Tests
pipelineBreadcrumb: '{{$.pipelines}}'
performance: Performance
quality: Quality
infrastructureText: Infrastructure
infrastructureTypeText: Infrastructure Type
update: Update
visual: VISUAL
yaml: YAML
invalidYaml: YAML is invalid. Please fix the issues to proceed.
editDetails: Edit Details
verificationJobs: Verification Jobs
abort: Abort
conditions: Conditions
repositories: Repositories
addRepository: Add Repository
gitManagement: Git Management
gitBranch: Git Branch
addStep: Add Step
addStepGroup: Add Step Group
gitTag: Git Tag
tbd: TBD
color: Color
applyChanges: Apply Changes
createViaYaml: Create via YAML Builder
saveAndPublish: Save and Publish
unsavedChanges: Unsaved changes
status: Status
start: Start
seeAll: See All
filePaths: File Paths
submit: Submit
previous: Previous
dateLabel: Date
timeLabel: Time
services: Services
token: Token
artifacts: Artifacts
manifests: Manifests
environments: Environments
servicesWithCount: '{{ $.services }} ({{ count }})'
buildText: Build
pipelineStudio: Pipeline Studio
stages: Stages
buildsText: Builds
newService: New Service
editService: Edit Service
newEnvironment: New Environment
editEnvironment: Edit Environment
envType: Environment Type
production: '{{$.common.production}}'
nonProduction: Non-Production
primaryArtifactText: Primary Artifact
artifactDisplay: '{{image}} (tag: #{{tag}})'
noArtifact: No Artifact
sidecarArtifactText: Sidecar Artifact
sidecar: Sidecar
sidecarsText: '{{$.sidecar}}s'
manifestsText: Manifest
variablesText: Variables
fileFolderPathText: File/Folder Path
chartPath: Chart Path
pluginPath: Kustomize Plugin Path
addFileText: '{{$.addFile}}'
lastExecutionTs: 'Last Run'
lastRunAtDate: '{{$.lastExecutionTs}}'
emptyDeployments: _ _ _ _ _ _
recentActivity: Recent Activity
newUser: New User
allNotificationFormat: All Notification Format
lastUpdatedSort: '{{$.lastUpdated}}'
AZ09: A - Z, 0 - 9
ZA90: Z - A, 9 - 0
addOverrideSet: + Add Predefined Set
newArtifactServer: New Artifact Server
clickToCopy: Click to copy
copiedToClipboard: Copied to clipboard
multipleFilesHelpText:
  'Multiple files can be overlaid together. They are applied in the order specified. The first file is
  applied first, and the subsequent files are layered in their order and override any previously
  specified values.'
errorSummaryText: Error Summary
errorDetails: Error Details
and: 'And'
na: N/A
all: All
plus: +
passed: Passed
failed: Failed
success: Success
inProgress: In Progress
todo: TODO - implement this
identifier: 'Identifier'
name: Name
add: Add
overview: Overview
reinstall: Reinstall
edit: Edit
delete: Delete
archive: Archive
select: Select
selectStage: Select a stage
verify: Verify
done: Done
save: Save
back: Back
next: Next
finish: Finish
continue: Continue
addPipeline: Add Pipeline
cancel: Cancel
close: Close
duplicate: Duplicate
errors: Errors
loading: Loading...
confirm: Confirm
confirmation: Confirmation
retry: Retry
search: Search
deleted: Deleted
showAll: Show All
source: Source
kind: Kind
reason: Reason
message: Message
viewJSON: View JSON
creationTimestamp: Creation Timestamp
categories: Categories
plaintext: Plaintext
encryptedFile: Encrypted File
encrypted: Encrypted
newNotification: New Notification
editNotification: Edit Notification
addNotification: Add Notification
noSearchResultsFoundPeriod: No results found.
createOrSelectSecret: Create or Select a Secret
description: Description
optionalField: '{{name}} (optional)'
recentlyUsed: Recently Used
applications: Applications
stageDetails: Stage Details
stageOverview: Stage Overview
stageNameLabel: Stage Name
stageName: 'Stage: {{ name }}'
tagsLabel: Tags
tagLabel: Tag
whatToDeploy: What would you like to deploy?
removeLabel: 'remove'
keyLabel: Key
valueLabel: Value
commandLabel: Command
summary: Summary
permissions: Permissions
activityLog: Activity Log
selectAnExistingConnector: Select an existing Connector
authentication: Authentication
preCommandLabel: PreCommand
postCommandLabel: PostCommand
consoleView: Console View
commandPlaceholder: |
  npm install
  npm test
repositoryUrlLabel: Repository URL
UrlLabel: URL
methodLabel: Method
requestBodyLabel: Request Body
assertionLabel: Assertion
outputLabel: Output
typeLabel: Type
variableLabel: Variable
variableNameLabel: Variable Name
imageLabel: Image
imagePlaceholder: maven:3.6.3-jdk-8
pluginImagePlaceholder: plugins/slack
dependencyImagePlaceholder: mysql:5
imageNameLabel: Image Name
encryptedKeyLabel: Encrypted Key
environment: 'Environment'
environmentVariables: 'Environment Variables'
service: 'Service'
plusAdd: '+ Add'
idLabel: 'Id: {{id}}'
nameLabel: 'Name: {{name}}'
descriptionLabel: 'Description: {{description}}'
launchStudio: Launch Studio
viewExecutions: View Executions
entryPointLabel: 'Entry Point'
argsLabel: 'Arguments'
dependencyNameLabel: 'Dependency Name'
cloneCodebaseLabel: 'Clone Codebase'
allowedValues: 'Allowed values'
serviceAccount: Service Account
usernamePassword: 'Username and Password'
usernameToken: 'Username and Token'
kerberos: 'Kerberos'
secureToken: 'Secure Token'
anonymous: 'Anonymous (no credentials required)'
saveAndContinue: 'Save and Continue'
errorWhileSaving: 'Error occurred when saving'
codebase: 'Codebase'
addressErrorFields: 'Please address all error fields before submitting.'
invalidYamlText: 'You have provided invalid or empty YAML. Please provide valid YAML for the Pipeline'
metricPacks: 'Metric Packs'
review: 'Review'
enabledLabel: 'Enabled'
activity: 'Activity'
store: Store
canvasButtons:
  zoomIn: Zoom In
  zoomOut: Zoom Out
  zoomToFit: Zoom to Fit
createPipeline:
  pipelineNameRequired: Pipeline Name is a required field
helmVersion: Helm Version
executionStrategy:
  preview: 'Preview'
  strategyType: 'Common'
selectProduct: 'Select Product'
selectApplication: 'Select Application'
selectProject: 'Select a Project'
selectResource: Select Resource
closeSelection: 'Close Selection'
mapApplications: 'Map Applications to Harness Services'
mapApplicationsToEnvs: Map Applications to Harness Environments
total: 'Total'
credentials: Credentials
editCredentials: Edit Credentials
createProject: 'Create Project'
pickProject: Pick a project and drill down to see your information.
orSelectExisting: Or select an existing project
stageConfirmationText: 'Are you sure you want to delete stage "{{ name }} [Id: {{id}}]"?'
deletePipelineStage: 'Delete Pipeline Stage'
deleteStageSuccess: 'Pipeline Stage Successfully removed.'
deleteStageFailure: 'Pipeline Stage cannot be removed.'
repositoryType: 'Repository Type'
commonError: Error occurred while fetching/saving the data
selectServer: 'Select Server'
stepPalette:
  title: 'Step Library'
  subTitle: 'All Steps'
  noSearchResultsFound: 'No results found. Please try another step name.'
  loadingSteps: Loading steps...
  selectStep: 'Select a Step'
  library: 'Library'
  others: 'Others'
  infrastructureProvisioners: 'Infrastructure Provisioners'
  showAllSteps: 'Show All Steps'
  searchPlaceholder: 'Search Step'
orgDetails:
  accessControlDescription: Manage users, create user groups, and assign roles to your team. Fine tune permissions with custom roles.
  governanceDescription: Precision control over all your Harness resources.
  resourcesDescription: Manage Connectors, Secrets, Delegates, and templates here. Set up account-level Git Experience here.
  gitSyncDescription: Connect to your Git repository and track your changes
createSecretYAML:
  create: '{{ $.create }}'
  newSecret: New Secret
  createSecret: Create Secret from YAML
  secretCreated: Secret created successfully
  invalidSecret: Invalid Secret configuration
filters:
  filterVisibility: Who can view and edit the filter?
  name: Filter Name
  visibileToOnlyMe: Only me
  visibleToEveryone: Everyone
  apply: Apply
  filtersLabel: Filters
  saveFilter: Save Filter
  clearAll: Clear All
  newFilter: New Filter
  typeFilterName: Type filter name
  nameRequired: Filter name cannot be empty
  visibilityRequired: Filter visibility needs to be specified
  deleteFilterForUser: Deleting a private filter removes it from your saved filter list. This action can not be undone.
  deleteFilterForEveryone: Deleting a shared filter removes it for all users who have access to the project. This action can not be undone.
  confirmDelete: Confirm Deletion
  filterDeleted: Filter deleted.
  filterDuplicated: Filter duplicated.
  selectFilter: Select a saved filter
  invalidSelection: Invalid selection
  visibilityTitle: This filter is visible to me only.
  invalidCriteria: Invalid or no filter criteria specified.
  noDataFound: No data found using the applied filter(s).
  noFilterFound: No filter found.
  executions:
    pipelineName: Pipeline Name
    buildType: Build Type
    pullOrMergeRequest: Pull Request / Merge Request
    tagPlaceholder: Enter tag
    selectBuildTypeLabel: Select a build type
customText: '{{text}}'
adminLabel: 'Admin'
collaboratorsLabel: 'Collaborators'
viewDetails: 'View Details'
startedAt: 'Started at'
endedAt: 'Ended at'
lastUpdatedBy: Last Updated By
loggedAt: 'Logged at {{time}}'
order: Order
inputSets:
  inputSetLabel: Input Set
  editTitle: 'Edit Input Set: {{name}}'
  editOverlayTitle: 'Edit Overlay Input Set: {{name}}'
  newInputSet: + New Input Set
  addInputSetPlus: + Add Input Set
  newOverlayInputSet: New Overlay Input Set
  newInputSetLabel: New Input Set
  inputSetSaved: Input Set saved
  inputSetIsRequired: Input Set field is required
  overlayInputSetSavedError: 'Error while saving Overlay Input Set'
  selectInputSets: Select Input Sets
  selectInputSetsHelp: Multiple Input Sets can be overlaid together. They are applied in the order specified. The first set is applied first, and subsequent sets are layered in their order and override any previously specified values.
  overlayInputSetSaved: 'Overlay Input Set saved'
  inputSetSavedError: Error while saving Input Set
  searchInputSet: Search Input Set
  addInputSet: Add Input Set
  saveAsInputSet: Save as Input Set
  aboutInputSets: Input Sets are collections of variables/values that must be provided to a Pipeline at runtime.
  confirmDeleteTitle: 'Delete {{type}}'
  overlayInputSet: Overlay Input Set
  inputFieldSummary: Input Field Summary
  noRecord: No Input Sets created
  selectMultipleInputSets: Select multiple Input Sets
  helpTextForMultiSelect: Selected Input Sets will be applied in the order listed. Drag to reorder Input Sets.
  inputSetDeleted: 'Input Set "{{name}}" deleted'
  confirmDeleteText: 'Are you sure want to delete {{type}} "{{name}}"'
assessment: Assessment
workflowVariableInfo: 'Override existing variables or define new variables.'
manifestSelectionInfo: Specify the locations of the manifests for this service. Harness will fetch the manifests at deployment runtime.
duration: 'Duration:'
runPipelineForm:
  pipelineRunSuccessFully: Pipeline started successfully
  runPipelineFailed: Failed to run Pipeline
  noRuntimeInput: No runtime inputs are required for the execution of this Pipeline
  notifyOnlyMe: Notify only me about execution status.
skipped: 'Step has been skipped.'
skipCondition: 'Skip condition:'
skipConditionValidation: 'Skip condition is required.'
learnMore: Learn more
clipboardCopySuccess: Successfully copied to clipboard
clipboardCopyFail: Copy to clipboard has failed
skipConditionsTitle: Skip Conditions
skipConditionTitle: Skip Condition
skipConditionLabel: If the JEXL condition evaluates to true, skip this step
skipConditionStageLabel: If the JEXL condition evaluates to true, skip this stage
skipResourceVersion: 'Skip Resource Versioning'
skipConditionHelpText: |
  In the {{ $.common.jexlExpression }}, you can use any Pipeline variables, including the output of any previous steps.
skipConditionText: |
  In the {{ $.common.jexlExpression }}, you can use any Pipeline variables, including the output of any previous stages.
preRequisitesTitle: Prerequisites
advancedTitle: Advanced
responseMapping: Response Mapping
basic: Basic
stepConfiguration: Step Parameters
stepGroupConfiguration: Step Group Configuration
image: 'Image:'
createdAt: 'Created at:'
username: 'Username'
password: 'Password'
navigationYamlErrorTitle: Invalid YAML Detected
navigationYamlError: You have provided invalid YAML. Navigating away will remove your changes
navigationCheckText: 'You have unsaved changes. Are you sure you want to leave this page without saving?'
navigationCheckTitle: 'Close without saving?'
continueWithoutSavingTitle: Continue without saving?
continueWithoutSavingText: 'You have unsaved changes. Are you sure you want to continue without saving?'
inputSetsText: 'Input Sets'
projectDescription: A Harness Project allows you to logically group your Pipelines, Environments, and more, according to your teams and business goals.
noProjects: No Projects found
noRoles: No Roles Found
string: 'String'
number: 'Number'
secretType: 'Secret'
list: 'List'
map: 'Map'
HTTP: 'HTTP'
HTTPS: 'HTTPS'
SSH: 'SSH'
SSH_KEY: 'SSH Key'
version: Version
goToHome: Go to Home
runPipeline: Run Pipeline
generalSettings: 'General Settings'
accessControl: 'Access Control'
noPermission: You don't have permission to perform this action
templateLibrary: 'Template Library'
cdDashboard:
  welcome: Welcome to Continuous Delivery
  description: Deploy your services with blazing fast pipelines.
hours: hours
gitFetchTypes:
  fromBranch: 'Latest from Branch'
  fromCommit: 'Specific Commit Id / Git Tag'
snippets:
  copyToClipboard: Copy to Clipboard
  copied: Copied!
fetching: Fetching
somethingWentWrong: Something went wrong
saveChanges: Save Changes
projectSelector:
  placeholder: 'Start typing to search'
script: 'Script'
inline: 'Inline'
upload: Upload
remote: 'Remote'
resourcePage:
  title: RESOURCES
  connectors: '{{$.connectorsLabel}}'
  secrets: '{{$.common.secrets}}'
  delegates: '{{$.delegate.delegates}}'
  templates: '{{$.common.templates}}'
  fileStore: File Store
stepType: 'Step Type'
scriptType: 'Script Type'
shellScriptStep: 'Shell Script'
targetHost: 'Target Host'
workingDirectory: 'Working Directory'
sshConnector: 'SSH Connection Attribute'
addOutputVar: 'Add Output Variable'
addInputVar: 'Add Input Variable'
inputValue: Input Value
inputName: Input Name
outputValue: Output Value
outputName: Output Name
notificationMethod: Notification Method
stepGroupInAnotherStepGroup: Step Group cannot be put under another Step Group
overrideSet:
  placeholder: Select Override Sets
  searchInputSet: '{{$.search}}'
  noRecord: No Override Sets available
  selectMultipleInputSets: Select multiple override sets
  helpTextForMultiSelect: Selected overrides will be applied in the order listed. Drag the override sets to reorder them.
  inputSet: Override Set
  order: '{{$.order}}'
pipelines-studio:
  addStep: Add step
  dependenciesGroupTitle: Dependencies
  addDependency: Add Service Dependency (optional)
  pipelineUpdated: Pipeline Updated
  publishPipeline: 'Pipeline published successfully'
  errorWhileSaving: Error occurred saving Pipeline
  pipelineUpdatedError: The Pipeline was updated by another user. If you update the Pipeline their changes will overwrite your changes. Would you like to update the Pipeline?
inputTypes:
  FIXED: Fixed value
  RUNTIME: Runtime input
  EXPRESSION: Expression
projectCard:
  clone: 'Clone'
  projectName: 'Project Name'
  confirmDelete: Deleting the Project '{{name}}' will delete its resources also. Are you sure you want to delete the Project?
  confirmDeleteTitle: 'Delete Project'
  successMessage: 'Project {{projectName}} is deleted'
  cdRendererText: 'Deployments in last 7 days'
  cvRendererText: 'Verifications in last 7 days'
  ciRendererText: 'Builds in last 7 days'
  cfRendererText: 'Feature Flags in last 7 days'
  ceRendererText: 'Cost Savings in last 7 days'

ssh:
  sshCredential: 'SSH Credential'
  createmessageSuccess: 'Execution Credential created successfully'
  editmessageSuccess: 'Execution Credential updated successfully'
secretManager:
  createmessageSuccess: 'Secrets Manager created successfully'
  editmessageSuccess: 'Secrets Manager updated successfully'
instanceFieldOptions:
  percentage: 'Percentage'
  instances: 'Instances'
  percentageText: '% Percentage'
  instanceText: 'Instance Count'
  percentagePlaceHolder: '{{$.instanceFieldOptions.percentage}}'
  instanceHolder: 'Count'
connected: Connected
delegate:
  numberOfDelegates: 'Number of Delegates'
  delegateSizeUndefined: 'Delegate Size is undefined'
  hostName: 'Hostname'
  useExistingSelectors: 'Use existing Delegate selectors'
  verifyDelegateYamlCmnd: '$ kubectl apply -f harness-delegate.yaml'
  delegateNameRequired: 'Delegate Name is Required.'
  delegateSizeRequired: 'Delegate Size is Required.'
  totalMem: 'Total Mem'
  totalCpu: 'Total CPU'
  productionWorkloads: 'For Production Workloads'
  delegateName: 'Delegate Name'
  delegateType: 'Delegate Type'
  delegateSize: 'Delegate Size'
  delegateSizeLower: 'Delegate size'
  delegateSizeLarge: 'Large'
  delegateMEM: MEM
  delegateCPU: CPU
  delegateDISK: DISK
  delegateSizeUpto: Runs upto concurrent tasks
  delegatesConfigurations: Delegates Configurations
  envTypes: Environment types
  initScriptPlaceholder: Enter initialization script...
  enterTags: Enter tags...
  selectEnvType: Select Environment types...
  selectEnvs: Select Environments...
  notConnected: Not Connected
  delegates: 'Delegates'
  DelegateName: 'Delegate'
  DelegateSelector: 'Delegate Selector'
  DelegateselectionLabel: 'Delegates Setup'
  DelegateselectionConnectorText: 'Limit usage of this Connector to the Delegates that have the following Tags'
  DelegateSelectorErrorMessage: 'Delegate Selector has an invalid expression. It does not include'
  DelegateSelectorErrMsgSplChars: 'has invalid characters. The Selector property cannot contain'
  Delegate_Selector_placeholder: 'Add specific Selectors or leave empty to target any Delegate'
  delegateTags: 'Delegate Tags'
  ReturnToDelegates: 'Return to list of Delegates'
  tagsFromDelegateConfig: 'Tags inherited from the Delegate configuration'
  LastHeartBeat: 'Last HeartBeat'
  delegates_4_ways_title: 'Delegates are worker processes that run on your infrastructure to execute tasks on behalf of the Harness platform. You can run these Delegates in one of 4 ways:'
  kubernetes:
    prerequisites: 'Kubernetes Prerequisites'
    prerequisites_info1: 'You have access to your Kubernetes cluster and install Harness Delegates as YAML or Helm Chart'
    prerequisites_info2: 'If you are using Harness SaaS, your machine must be able to connect to the Harness SaaS URL: '
    prerequisites_info3: 'Your Kubernetes cluster has unallocated resources required to run the Harness Delegate workload'
    prerequisites_worload: '{{label}} - {{ram}}GB memory, {{cpu}}CPU'
    permissions_title: 'You need the following Kubernetes permissions to install the Delegate:'
    permissions_info1: 'Permission to create namespace (for the Harness Delegate namespace)'
    permissions_info2: 'Permission to create StatefulSets (for the Harness Delegate Pod to be created)'
    url: 'https:app.harness.io:443/'
  stepOneWizard: 'Create Delegate'
  reviewScript:
    configProxySettings: 'Configure Proxy Settings (optional)'
    descriptionProxySettings: 'If the Delegate will connect to Harness using a proxy, configure the proxy settings PROXY_HOST, PROXY_USER, and PROXY_PASSWORD in harness-delegate.yaml.'
  successVerification:
    applyYAMLTitle: ' Apply YAML and verify connection'
    description1: 'Copy the downloaded YAML to a machine with kubectl installed and access to your Kubernetes cluster.'
    description2: 'Run the following command to apply the Harness Delegate to your Kubernetes Cluster'
    checkDelegateInstalled: Checking if the Delegate is installed. It might take several minutes for the installation.
    heartbeatReceived: Heartbeat received
    delegateInitialized: Delegate initialized
    delegateInstalled: Delegate Installed Successfully
  cardData:
    docker:
      text: 'Runs Harness Delegate as a Docker container on any Linux or Mac.'
      value: 'serviceDockerhub'
      icon: 'service-dockerhub'
      name: 'Docker'
    kubernetes:
      text: 'Runs Harness Delegate as a workload in your Kubernetes Cluster.'
      value: 'serviceKubernetes'
      icon: 'service-kubernetes'
    amazonECS:
      text: 'Runs Harness Delegate as an Amazon ECS service.'
      value: 'serviceLinux'
      icon: 'service-linux'
      name: 'Amazon ECS'
    linux:
      text: 'Runs Harness Delegate as a Linux process.'
      value: 'ecs'
      icon: 'service-ecs'
      name: 'Linux'
  delegateConfigurations: 'Delegate Configurations'
  delegateConfiguration: 'Delegate Configuration'
  CONFIGURATION_NAME: 'Delegate Configuration Name'
  Scope: 'Scope'
  Init_Script: 'Initialization Script'
  instancesCount: '({{count}} of {{total}} instances)'
  deleteDelegate: 'Delete Delegate'
  deleteDelegateConfiguration: 'Delete Delegate Configuration'
  deleteDelegateConfigurationQuestion: 'Are you sure you want to delete the configuration?'
  deleteDelegateConfigurationSuccess: 'Delegate Configuration {{ profileName }} deleted'
execution:
  pipelineIdentifierTextCI: '(Build Id: {{runSequence}})' # Text for Pipeline Identifier
  pipelineIdentifierTextCD: '(Execution Id: {{runSequence}})' # Text for Pipeline Identifier
  triggerType: # text for trigger types
    MANUAL: Manually
    WEBHOOK: Webhook
  stepLogs: Step Logs
  consoleLogs: Console Logs
pre-flight-check:
  preFlightCheckTitle: 'Preflight check'
  errorFoundCounter: '{{errorCount}} errors found'
  possibleCauses: 'Possible causes:'
  resolution: 'Resolution:'
  gettingConnectorResult: 'Getting Connector results'
  couldNotVerifyConnectors: 'Could not verify Connectors'
  connectorLocationInPipeline: 'Connector location in the Pipeline'
  stepColon: 'Step:'
  stageColon: 'Stage:'
  couldNotVerifyInputSets: Could not verify Input Sets
  gettingResults: Getting results
  continueToRunPipeline: Ignore the errors and continue to run Pipeline
  skipCheckBtn: Skip preflight check
  skipCheckInfo: You can skip the preflight check and continue to run your Pipeline
  verifyingPipelineInputs: Verifying Pipeline inputs
  verifyingConnectors: Verifying Connectors
titleOptional: '(Optional)'
executionList:
  servicesDeployedText: 'Services deployed ({{size}})'
moduleRenderer:
  start: No modules-specific data
  newPipeLine: Create new Pipeline
  viewPipelines: View Pipelines
  setupChanges: Set up Change Sources
  monitoringSources: Set up Monitoring Sources

settingsLabel: 'Settings'
pipelineSteps:
  duplicateStep: Duplicate Step
  kubernetesInfraStep:
    stepName: Specify your Kubernetes Connector
    kubernetesConnector: Kubernetes Connector
  serviceTab:
    artifactList:
      addSidecar: + Add Sidecar
      addPrimary: + Add Primary Artifact
    manifestList:
      manifestFormat: Manifest Format
      manifestType: Manifest Type
      manifestStore: '{{$.store}}'
      addManifest: + Add Manifest
  destroy: 'Destroy'
  configTypes:
    fromPlan: 'Inherit From Plan'
    fromApply: 'Inherit From Apply'
  content: 'Content'
  InheritFromPlan: 'InheritFromPlan'
  InheritFromApply: 'InheritFromApply'
  commitIdValue: 'Commit'
  configFiles: 'Config Files'
  backendConfig: 'Backend Config'
  storeType: 'Store Type'
  configurationTypeRequired: 'Configuration Type is required.'
  configurationType: 'Configuration Type'
  remoteFile: 'Remote File'
  commandRequired: 'Command is required.'
  paths: 'Paths'
  deleteNamespace: 'Delete namespace'
  workspace: Workspace
  repoName: 'Repo Name'
  stepNameLabel: '{{ $.name }}'
  storeTypeRequired: 'Store Type is required.'
  addTerraformVarFile: 'Add Terraform Var File'
  connectorLabel: 'Container Registry'
  hostLabel: Host
  hostPlaceholder: us.gcr.io
  projectIDLabel: Project Id
  cacheFromLabel: 'Cache From'
  autoTagLabel: 'Auto-Tag'
  autoTagSuffixLabel: 'Auto-Tag Suffix'
  dockerfileLabel: 'Dockerfile'
  endpointLabel: 'Endpoint URL'
  endpointPlaceholder: http://minio.company.com
  contextLabel: 'Context'
  labelsLabel: 'Labels'
  regionPlaceholder: us-east-1
  reportPathsLabel: Report Paths
  reportPathsPlaceholder: '**/*.xml'
  buildArgsLabel: 'Build Arguments'
  bucketLabel: 'Bucket'
  targetLabel: 'Target'
  artifactsTargetPlaceholder: path/in/bucket
  outputVariablesLabel: 'Output Variables'
  sourcePathLabel: 'Source Path'
  optionalConfiguration: 'Optional configurations'
  pullLabel: 'Image Pull Policy'
  pullInfo: |
    Determine the pull policy of the Docker image:
    The default behavior is to download an image if it doesn’t exist in the local cache, unless the “latest” tag is used either explicitly or implicitly.
    “Does not exist” - Only pull the image if it's not found in the local cache.
    “Always” - Always pull the newest version of the image.
    “Mever” - Always use the image from local cache, if available.
  pullIfNotExistsLabel: 'Does not exist'
  pullNeverLabel: 'Never'
  pullAlwaysLabel: 'Always'
  sourcePathsLabel: 'Source Paths'
  sourcePathsInfo: 'A list of files. Expressions are supported. For example: target/*.jar'
  pomFileLabel: 'POM File'
  pomFileInfo: Path to the pom.xml file
  setContainerResources: 'Set Container Resources'
  limitMemoryLabel: 'Limit Memory'
  limitCPULabel: 'Limit CPU'
  limitMemoryUnitMiLabel: Mi
  limitMemoryUnitGiLabel: 'Gi'
  limitMemoryExample: 'Ex: 512 MiB, 1 GiB'
  limitCPUExample: 'Ex: 1'
  timeoutLabel: 'Timeout'
  provisionerIdentifier: 'Provisioner Identifier'
  timeoutPlaceholder: '120s'
  resourceNameLabel: 'Resource Name'
  resourceNameValue: 'ResourceName'
  releaseNameLabel: 'Release Name'
  releaseNameValue: 'ReleaseName'
  manifestPathLabel: 'Manifest Path'
  manifestPathValue: 'ManifestPath'
  deleteResourcesBy: 'Delete resources by'
  deleteResourcesPlaceHolder: 'Specify resources to delete'
  manifestPathsPlaceHolder: 'Specify file paths'
  deleteNamespaceWarning: 'Warning: Ensure that you are not deleting a namespace that is used by other deployments'
  typeName: 'instanceType'
  awsConnectorLabel: AWS Connector
  gcpConnectorLabel: GCP Connector
  dockerHubConnectorLabel: Docker Connector
  k8sRolloutDeploy: K8s Rollout Deploy
  k8sApply: K8s Apply
  k8sDelete: K8s Delete
  k8sRolloutRollback: K8s Rolling Rollback
  barrier: Barrier
  k8sBGDeploy: 'K8s Blue Green Deploy'
  k8sCanaryDeploy: 'K8s Canary Deploy'
  k8sBGSwapServices: 'K8s Blue Green Swap Services'
  K8sCanaryDelete: 'K8s Canary Delete'
  k8sScale: 'K8s Scale'
  skipDryRun: 'Skip Dry Run'
  deploymentTypes:
    kubernetes: '{{$.kubernetesText}}'
    gk8engine: Google Kubernetes Engine
  skipSteadyStateCheck: Skip Steady State Check
  workload: 'Workload'
  stepNameRequired: 'Step Name is required'
  provisionerIdentifierRequired: 'Provisioner Identifier is required.'
  lessThanZero: 'Instance cannot be less than zero.'
  morethanHundred: 'Instance cannot be more than 100.'
  instancesRequired: 'Instance is required.'
  methodIsRequired: Method is required
  build:
    delete:
      confirmDeleteTitle: 'Are you sure you want to remove this stage?'
      deleteStageText: 'You are removing a stage that is dependency for other stages. Removing this stage will clear configuration for the following stages:'
    create:
      aboutYourStage: 'About your stage'
      stageNameRequiredError: 'Stage Name is required'
      stageNameRegExpError: 'Stage Name can only contain alphanumerics, _, and $'
      stageDescriptionRegExpError: 'Stage Description can only contain alphanumerics, _, and $'
      configureCodebase: 'Configure Codebase'
      configureCodebaseHelperText: 'Connect Harness with your code repo.'
      connectorRequiredError: '{{$.validation.sshConnectorRequired}}'
      repositoryUrlWrongUrlError: 'Please enter a valid URL'
      repositoryUrlRequiredError: 'Repository URL is required'
      setupStage: 'Set Up Stage'

    stageSpecifications:
      variableNamePlaceholder: 'Enter Variable name'
      sharedPaths: 'Shared Paths'
      addSharedPath: '+ Path'
      addDescription: '{{$.description}}'
      addTags: '{{$.tagsLabel}}'
      variablesCell: '{{$.variablesText}}'
      valueCell: '{{$.valueLabel}}'
    infraSpecifications:
      whereToRun: Where do you want the builds to run?
      propagate: 'Propagate from an existing stage'
      newConfiguration: 'New configuration'
      kubernetesClusterPlaceholder: 'Select Kubernetes Cluster'
      namespace: '{{$.common.namespace}}'
  deploy:
    errors:
      notags: No tags found with given Image Path
    create:
      multipleServices: '{{$.multipleService}}'
      deployStageName: Deploy
    inputSet:
      artifactServer: 'Artifact Server'
      branch: 'Branch'
    serviceSpecifications:
      serviceDefinition: Service Definition
      useFromStageLabel: 'Use from Stage'
      deploymentTypes:
        artifacts: '{{ $.artifacts }}'
        manifests: '{{ $.manifests }}'
    infrastructure:
      infraDefinition: Infrastructure Definition
      selectMethod: Select the best method for Harness to reach your Kubernetes Cluster.
      directConnection: Direct Connection
      viaCloudProvider: Via Cloud Provider
    provisioner:
      enableProvisionerLabel: Provision your target infrastructure dynamically during the execution of your Pipeline
  feature:
    create:
      featureStageName: Feature Flag
      specifyEnvironment: Specify the Environment
      whatIsFor: What is your flag used for?

validation:
  thisIsARequiredField: This setting is required
  nameRequired: Name is required
  connectorName: Connector name is required
  stepNameRequired: '{{$.pipelineSteps.stepNameRequired}}'
  identifierRequired: Identifier is required
  identifierDuplicate: Stage with same identifier already exists
  connectorRefRequired: Container Registry is required
  AWSConnectorRefRequired: AWS Connector is required
  GCPConnectorRefRequired: GCP Connector is required
  dockerHubConnectorRefRequired: Docker Connector is required
  imageRequired: Image is required
  commandRequired: Command is required
  limitCPUMinNumberZero: CPU limit must be greater than or equal to 0
  keyRequired: Key is required
  valueRequired: Value is required
  branchName: 'Branch Name is required'
  commitId: 'Commit Id is required'
  validIdRegex: Identifier must start with an letter or _ and can then be followed by alphanumerics, _, or $
  # Replace if validIdRegex will apply the same rules
  validStepIdRegex: Identifier can only contain alphanumerics and _
  validKeyRegex: Keys can only contain alphanumerics and _
  validOutputVariableRegex: Output variables can only contain alphanumerics and _
  validReportPathRegex: Report paths should end with .xml
  validStepNameRegex: Step Name can only contain alphanumerics, spaces, _, and -
  illegalIdentifier: 'Identifier must not be one of the following values: or, and, eq, ne, lt, gt, le, ge, div, mod, not, null, true, false, new, var, return'
  uniqueStepAndServiceDependenciesId: Identifier should be unique across the steps and service dependencies
  uniqueKeys: Keys should be unique
  uniqueValues: Values should be unique
  matchPattern: Invalid value. See info above to learn more
  duplicateIdError: 'Failed to create Connector: {{ connectorName }}. There is already a Connector with identifier {{ connectorIdentifier }} present or soft deleted. Please provide a new unique identifier and save again.'
  username: 'Username is required'
  password: 'Password is required'
  accountName: Account Name is required
  authType: 'Authentication type is required'
  masterUrl: 'Master URL is required'
  orgValidation: Organization is required
  serviceAccountToken: 'Service Account Token is required'
  OIDCIssuerUrl: 'OIDC Issuer URL is required'
  OIDCUsername: 'OIDC Username is required'
  OIDCPassword: 'OIDC Password is required'
  OIDCClientId: 'OIDC Client Id is required'
  OIDCSecret: 'OIDC Secret is required'
  clientKey: 'Client Key is required'
  clientKeyPassphrase: 'Client Key passphrase is required'
  clientCertificate: 'Client Certificate is required'
  encryptedKey: 'Encrypted Key is required'
  installationId: 'GitHub Installation Id is required'
  applicationId: 'GitHub Application Id is required'
  vaultUrl: Vault URL is required
  secretId: Secret Id is required
  secretEngineName: Secret Engine Name is required
  secretEngine: Secret Engine is required
  engineVersionNumber: Secret Engine Version can only be a positive number
  engineVersion: Secret Engine Version is required
  renewalNumber: 'Renewal interval can only be a positive number'
  renewalInterval: 'Renewal interval is required'
  authToken: 'Auth Token is required'
  appRole: 'App Role Id is required'
  sshKey: SSH key is required
  kerberosKey: Kerberos key is required
  privateKey: 'GitHub private key is required'
  accessToken: Access token is required
  dockerRegistryUrl: 'Docker Registry URL is required'
  helmRepoUrl: 'Helm Repo URL is required.'
  jiraUrl: 'Jira URL is required.'
  registryHostname: 'GCR Registry URL is required'
  nexusServerURL: 'Nexus URL is required'
  nexusVersion: 'Version is required'
  artifactoryServerURL: 'Artifactory URL is required'
  timeout10SecMinimum: 'Minimum Timeout is 10 seconds'
  tagsRequired: Tags is required
  environmentVariablesRequired: Environment Variables is required
  settingsRequired: Settings is required
  labelsRequired: Labels is required
  buildArgsRequired: Build Arguments is required
  imageNameRequired: Image Name is required
  regionRequired: Region is required
  dockerRegistryRequired: Docker Registry is required
  accountRequired: Account Id is required
  bucketRequired: Bucket is required
  sourcePathRequired: Source Path is required
  targetRequired: Target is required
  sourcePathsRequired: Source Paths is required
  hostRequired: Host is required
  projectIDRequired: Project Id is required
  scriptTypeRequired: Script Type is required
  targethostRequired: 'Target host is required'
  workingDirRequired: 'Working Directory is required'
  sshConnectorRequired: 'Connector is required'
  gitServerRequired: 'Git server is required'
  urlIsNotValid: 'URL is not valid'
  notificationNameDuplicate: Notification with same name already exists
  artifactServerRequired: Artifact Server is required
  minLengthRequired: Minimum Length is required

yamlBuilder:
  enableEditContext: Editor is currently in read-only mode. Do you want to enable edit mode?
  lineNumberLabel: On line number
  yamlError: Invalid or malformed YAML. Please fix the YAML and try again.
  snippets:
    noSnippetsFound: No snippets found.
activityHistory:
  successfulActivity: Successful Activity
  failedActivity: Failed Activity
  heartbeatFailure: Heartbeat Failure
  connectivityCheck: Connectivity Check
  connectivityCheckFailed: Connectivity Check Failed
  createdSuccessfully: Created Successfully
  updatedSuccessfully: Updated Successfully
  noData: No Activity Found
none: 'None'

pipeline-list:
  aboutPipeline: Pipelines define your release process using multiple steps and approvals in sequential and/or parallel stages.
  listStages: '{{ $.stages }}'
  createPipeline: '+ Create Pipeline'
  confirmDeleteTitle: Delete Pipeline
  pipelineDeleted: Pipeline {{name}} deleted
  readyToRun: Ready To Run
variables:
  copyVariableName: Copy variable name
  copyFqn: Copy fully qualified name
customVariables:
  pipelineVariablesTitle: Pipeline Variables
  title: Custom Variables
  variableAndType: '{{name}} [Type: {{type}}]'

approvalStage:
  title: Approval
  approvalTypeHeading: What type of approval would you like to add?
  stageNameRequired: Stage name is mandatory
  setupShellOverview: Approval Stage Overview
  setupShellExecution: Approval Execution
  # Custom Dashboards
configuration: Configuration
entityReference:
  noRecordFound: 'No Record Found'
  apply: 'Apply Selected'

characters: 'characters'
uppercase: 'uppercase'
lowercase: 'lowercase'
specialChar: 'special character'
adminResources: 'Admin:Resources'
personalAccessToken: 'Personal Access Token'
