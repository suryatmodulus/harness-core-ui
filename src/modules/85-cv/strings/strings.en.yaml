continuous: '{{$.common.changeIntelligence}}'
methodLabel: Method Label
request: Request
response: Response
responseBody: Response Body
statusCode: Status Code
failures: Failures
initiated: Initiated
verifications: Verifications
verificationStatus: Verification Status
preProductionTests: Pre Production Tests
postDeployment: Post Deployment
logCluster: Log Cluster
logsCluster: Logs Cluster
showMore: '{{ $.common.showMore }}'
showLess: '{{ $.common.showLess }}'
queries: Queries
timeline: Timeline
changeTimeline: Change Timeline
selectedTimeInterval: Selected time interval
anomalous: Anomalous
nonAnomalous: Non-Anomalous
share: Share
healthScore: Health Score
clusterType: Cluster Type
sampleMessage: Sample Message
sampleEvent: Sample Event
messageFrequency: Message Frequency
trend: Trend
known: Known
unknown: Unknown
unexpected: Unexpected
copyURL: Copy URL
urlCopied: URL Copied
unit: Unit
anomalousMetrics: Anomalous metrics
proceedToEdit: Proceed to Edit
filter: Filter
allMetrics: All Metrics
selectNamespace: Select Namespace
selectWorkload: Select Workload
riskTimeline: Risk Timeline
perHeatMapCell: per heat map cell
allServices: All Services
servicesAtRisk: Services at Risk
searchForAService: Search for a service
trafficSplit: Traffic Split Percentage (optional)
pinABaseline: Pin a baseline
lastSuccessfulRun: Last Successful Job Run
jobNamePlaceholder: Enter a Job Name
identifierPlaceholder: Enter an Identifier
throughput: Throughput
responseTime: Response Time
serviceHealthTrend: Service Health Trend
query: Query
selectQuery: Select Query (Optional)
addNew: + Add New
turnService: Turn service
showYAMLChange: Show YAML Change
seeYAML: See full event YAML
serviceDashboardPage:
  fiveMinutes: 5 Minutes
  fifteenMinutes: 15 Minutes
  oneHour: 1 Hour
  fourHours: 4 Hours
  twelveHours: 12 Hours
  oneDay: 1 Day
  sevenDays: 7 Days
  thirtyDays: 30 Days
  noServicesConfigured: No services have been configured
  goToMonitoringSources: Go to Monitoring Source Page
abbreviatedCategories:
  performance: Perf
  infrastructure: Infra
  errors: 'Err'
thirdPartyCalls:
  modalTitle: Calls to
  timeTaken: Time Taken
  requestMade: Request Made
  noCallsWereMade: No calls were made
metricVerificationModal:
  viewCalls: View calls to {{type}}
  modalTitle: Metric Pack Connection Test
dashboard:
  subHeading: Take your software build verification processes to the next level using our Harness Continuous Verifications
  createProject: '{{$.createProject}}'
  notStarted: Not started
hostNamePlaceholder: '${host}'
harnessService: 'Harness Service'
harnessEnvironment: 'Harness Environment'
selectOrCreateEnv: 'Select or create an environment'
verificationErrored: 'Verification errored'
getRiskAssessment: 'Get risk assessment'
setup: Setup Continuous Verification
riskScore: Risk Score
noAnalysis: No Analysis
noAnomalies: No anomalies detected
overall: Overall
currentProductionRisk: Current Production Risk
evaluationPeriod: Evaluation period
overviewPage:
  recentChangeVerifications: 'Recent Change Verifications'
riskCardTooltip:
  header: Performance risk was computed based on metrics from your data providers
  allServicesGreen: all services green
analysisScreens:
  totalClusters: 'TOTAL CLUSTERS:'
navLinks:
  activities: 'Activities'
  adminSideNavLinks:
    activitySources: 'Change Sources'
    monitoringSources: 'Monitoring Sources'
changesPage:
  changeSourceDetails: 'Change Source Details'
  changeSummary: 'Change Summary'
  eventCount: 'Event Count'
  viewKubernetesEvents: 'View Kubernetes Change Summary'
admin:
  activitySources:
    dialogDeleteTitle: 'Delete Change Source'
onboarding:
  defaultChangeSource: Default change source that is already created for you
  changeSourceTypes:
    HarnessCDNextGen:
      name: Harness CD NextGen
      icon: cd-main
    HarnessCDCurrentGen:
      name: Harness CD
  monitoringSources:
    addMoreSources: Add more Monitoring Sources
    select: Select your Monitoring Source
    addedStatus: You have added {{sourceCount}} Monitoring Source
    defineMonitoringSource: Define your Monitoring Source
    monitoringSourceSubheading: Which Monitoring Source are you setting up for this deployment?
    skipToMonitoringSource: Skip to Monitoring Sources
    monitoringSourceInfo: Verification Monitoring Sources provide the metrics and log data that CV uses to score the risk of your deployment and infrastructure
    specifyConnector: Specify your {{type}} Connector
    firstTimeSetupText: First time? You can setup a new Connector to {{type}}. It takes 2 minutes.
    selectConnector: Select your {{type}} Connector
    addConnector: + Add {{type}} Connector
    selectProduct: Select the {{type}} product that you would like to select {{entity}} from
    selectMetricPacks: Select Metric Pack(s)
    metricPacksToMonitor: Select metric packs you want to monitor.
  activitySources:
    changeSourceInfo: Change Sources provide the details of deployment and infrastructure change
    infrastructureProvider: Infrastructure Provider
    dontHaveChangeSource: Don’t have a Change Source?
    addMoreSources: Add more Change Sources
    addedStatus: You have added {{sourceCount}} Change Source
  verificationJobs:
    heading: Almost there
    setupInfo: Verification Jobs score the risk of changes coming in from Change Sources using data from verification Monitoring Sources.
    infoText: Verification jobs trigger automatically whenever a relevant change is sourced from a Change Source. They verify the risk of the change by analyzing the data collected from the Verification Monitoring Sources.
    subHeading: Default health verification jobs are applied automatically.
    createJobQues: Would you like to create a new verification job?
    createJob: Create Job
    keepGoing: Want to keep going...
  progress:
    heading: 'Your Progress'
    mapServices: 'Map the above {{serviceLabel}} to a Monitoring Source.'
    serviceEnvCount: 'You have {{serviceCount}} {{serviceLabel}} and {{envCount}} {{environmentLabel}}.'
    servicesUsedInActivitySources: '{{serviceCount}} service is used in Change Sources.'
    multiServicesUsedInActivitySources: '{{serviceCount}} services are used in Change Sources.'
    serviceUsedInMonitoringSources: '{{serviceCount}} service is used in Monitoring Sources.'
    multiServiceUsedInMonitoringSources: '{{serviceCount}} services are used in Monitoring Sources.'
    servicesUndergoingHealthVerification: '{{serviceCount}} service has ongoing health verification.'
    multipleServicesUndergoingHealthVerification: '{{serviceCount}} services have ongoing health verifications.'
  selectProductScreen:
    validationText:
      name: Name is required.
      identifier: '{{$.validation.identifierRequired}}'
      connectorRef: Connector Selection is required.
      validIdRegex: Identifier can only contain alphanumerics, _ and $.
      product: 'Product selection is required.'
      source: Source selection is required
selectCreateService: Select or create a service
monitoringSources:
  assign: Assign
  mapMetricsToServices: Map Metric(s) to Harness Services
  mapQueriesToServices: Map Queries to Harness Services
  metricPackValidation: Metric Pack Validation
  nameYourMonitoringSource: Name your Monitoring Source
  oneMetricMappingValidation: At least one application must be mapped
  oneMetricPackValidation: At least one Metric Pack must be selected
  oneMetricMappingValidationSubtext: You need to select one Metric Pack for verification
  backToMapping: Back to Mapping
  reviewPageSubHeading: You’ve done it! These services below are ready for your project. If it doesn’t look right, you can make changes now.
  metricNameLabel: Metric Name
  metricLabel: Metric
  queryNameLabel: Name your Query
  queryName: Query Name
  riskProfile: Risk Profile
  riskCategoryLabel: Risk Category
  baselineDeviation: Deviation Compared to Baseline
  higherCounts: Higher value is higher risk
  lowerCounts: Lower value is higher risk
  metricNameValidation: Metric Name is required.
  metricValidation: Metric is required.
  uniqueIdentifierValidation: '{{idName}} already exists. Provide a unique identifier.'
  queryNameValidation: Query Name is required.
  envValidation: Environment is required.
  serviceValidation: Service is required.
  buildYourQuery: Build your Query
  serviceInstanceIdentifier: Service Instance Identifier
  optionalServiceInstanceLabel: (only needed for CV)
  addMetric: Add Metric
  addQuery: Add Query
  totalMappedQueries: '{{total}} {{query}} mapped'
  appD:
    appdPathTitle: AppDynamics Path
    appdChartTitle: Chart & Record
    appdPathDetail: Select base path for AppD Metric
    appdMetricDetail: Select metric path for AppD Metric
    defaultAppDMetricName: appdMetric
    basePathPlaceholder: Please select value to append to base path
    metricPathPlaceholder: Please select value to append to metric path
    noValueBasePath: No value for selected base path
    noValueMetricPath: No value for selected base path and metric path
    envDescription: An Environment is the representation of your production or non-production infrastructure.
    appDApplications: APPDYNAMICS APPLICATIONS
    appDTier: APPDYNAMICS TIER
    harnessEnv: HARNESS ENVIRONMENT
    validationMsg: Services should be mapped uniquely to application services
    mapApplicationsToEnv: Map the AppDynamics Application to a Harness Environment
    mapTiersToServices: Map AppDynamics Application Tiers to Harness Services
    noAppsMsg: No Applications were found
    noTiersMsg: No Tiers were found for selected application
    mappingToHarnessService: MAPPING TO HARNESS SERVICE
    mapToHarnessEnvironment: MAPPING TO HARNESS ENVIRONMENT
    mappedToHarnessService: MAPPED TO HARNESS SERVICE
    mappedToHarnessEnvironment: MAPPED TO HARNESS ENVIRONMENT
    harnessServices: HARNESS SERVICES
    status: STATUS
    validation: VALIDATION
    tiersMappedToServices: tiers mapped to services
    errorsFound: errors found
    verificationsInProgress: Validation in progress
    noData: No data
    searchPlaceholderApplications: Search for Applications
    validationsPassed: Validation passed
    validationsFailed: Validation failed
    newGroupName: New AppDynamics Group Name
    validations:
      selectApp: Please select application and its environment
      selectTier: Please select tier and its service
      selectMetricPack: Plese select metric packs
    connectToMonitoringSource: Connect to your AppDynamics Monitoring Source
    firstTimeSetupText: 'First time? You can setup a new Connector to AppDynamics. It takes 2 minutes.'
    createConnectorText: '+ New AppDynamics Connector'
    selectProduct: 'Select the AppDynamics Product that you would like to select applications from'
    product:
      applicationMonitoring: 'Application Monitoring'
      businessMonitoring: 'Business Performance Monitoring'
      machineMonitoring: 'Machine Monitoring'
      endUserMonitoring: 'End User Moniorting'
    infoPanel:
      mapDashboards: Map Dashboards to Harness Services
      mapDashboardsMsg: Define the Stackdriverdashboards you want to monitor. For example, here is a Workspace prod-setup. Harness will extract the widgets, metrics and queries within each dashboard. The metrics within the dashboard will create a service within Harness.
      applicationsDesc: Define the Stackdriverdashboards you want to monitor. For example, here is a Workspace “prod-setup.” Harness will extract the widgets, metrics and queries within each dashboard. The metrics within the dashboard will create a service within Harness.
      tiers: Tiers
    searchTiersPlaceHolder: 'Search for Tiers'
  gco:
    connectToMonitoringSource: Connect to your Google Cloud Platform
    defaultName: 'My Google Cloud Operations Monitoring Source'
    firstTimeSetupText: 'First time? You can setup a new Connector to Google Cloud Platform. It takes 2 minutes.'
    createConnectorText: '+ New Google Cloud Platform Connector'
    addManualInputQuery: '+ Manually input query'
    selectProduct: 'Select the Google Cloud Operations feature that you would like to choose dashboards from'
    searchForDashboardsPlaceholder: Search for dashboards
    product:
      metrics: 'Cloud Metrics'
      logs: 'Cloud Logs'
    productValidationText: 'Google Cloud Operations feature is required.'
    selectDashboardsPage:
      noDataText: 'No Google Cloud Operation dashboards found.'
      dashboardColumnName: 'Google Cloud Operation Dashboards'
    manualInputQueryModal:
      modalTitle: 'Add your Google Cloud Operations query'
      subtitle1: 'Make sure your provide'
      subtitle2: 'string for filtering in query.'
      subtitle3: 'For example: '
      exampleString: 'resource.label.\"pod_name\"=\"${host}\"".'
      validation:
        query: 'Query is required.'
        uniqueMetricName: '{{metricName}} is an already taken metric name'
    mapMetricsToServicesPage:
      metricTagsLabel: Metric Tags
      manuallyInputQueriesLabel: 'Manually input queries'
      viewQuery: 'View Query'
      operationsQueryLabel: 'Operations query'
      mapMetricToServiceAndEnvironment: 'Map Stackdriver Metric to a Harness Service and Environment'
      querySpecifications: 'Query Specifications'
      configureRiskProfile: 'Configure Risk Profile'
      enterQueryForValidation: Please enter a query.
      validation:
        mainSetupValidation: 'All fields for at least one metric must be filled completely.'
        validJSON: Please provide valid json.
        riskCategory: Risk Category is required.
        tags: Tags are required.
        baseline: One selection is required.
        tooManyMetrics: Too many metrics for provided query. Please fix query to return data for one metric.
      noDataForQuery: 'No data for provided query.'
    reviewPage:
      mappedMetrics: '{{metricCount}} metric(s) mapped to {{serviceCount}} service(s)'
      gcoMetrics: Google Cloud Operation metrics
  datadog:
    noMetricsWidgets: 'No metrics'
    manualInputQueryModal:
      modalTitle: 'Add your Datadog query'
    selectDashboardsPage:
      noDataText: 'No Datadog dashboards found.'
      dashboardColumnName: 'Datadog Dashboards'
    newDatadogGroupName: 'Add new Datadog group name'
    validation:
      queryContains: 'Query must contain '
  datadogLogs:
    submitQueryToSeeRecords: Submit query to see records from Dataodog Logs
    datadogLogsQuery: Datadog Logs Query
    logIndexesLabel: Log indexes
  newRelic:
    mapNewRelicAppsToServicesAndEnvs: Map New Relic Applications to Harness Environments and Services
    mappingServiceAndEnvSubheading: Select Harness Environments and Services to map to New Relic Applications
    newRelicAppColumn: NEW RELIC APPLICATION
    selectedApplications: Selected Applications
    oneMetricMappingValidationSubtext: You need to map an application to a Harness Environment and Service.
    totalMappedApplications: '{{total}} Application(s) mapped'
  prometheus:
    prometheusMetrics: Prometheus Metrics
    provideQueryToSeeRecords: Provide query to see records from Prometheus
    querySpecificationsAndMappings: Query Specifications and Mapping
    undoManualQuery: Undo manual query selection
    submitQueryToSeeRecords: Submit query to see records from Prometheus
    customizeQuery: Customize the query to get the desired output and map to Harness Service.
    mapPrometheusMetricsToServicesAndEnvs: Map Prometheus metrics to Harness Environments and Services
    chartAndRecords: Chart and Records
    addMetricTooltip: Fill all required fields before adding a new metric
    mappingValidation: At least one metric mapping must be entirely filled out
    environmentFilter: Filter on Environment
    serviceFilter: Filter on Service
    additionalFilter: Additional Filter
    prometheusMetric: Prometheus Metric
    groupName: Group Name
    aggregator: Aggregator
    noRecordsForQuery: No records for given query
    newPrometheusGroupName: New Prometheus Group Name
    querySettingsNotEditable: Query Builder will not be available
    querySettingsSubtext: Query Builder will not be available if you manually edit the query.
    isManualQuery: Query Builder will not be available since this mapping contains a manually edited query.
    sumAggregator: sum (calculate sum over dimensions)
    minAggregator: min (select minimum over dimensions)
    maxAggregator: max (select maximum over dimensions)
    avgAggregator: avg (calculate the average over dimensions)
    stddevAggregator: stddev (calculate population standard deviation over dimensions)
    stdvarAggregator: stdvar (calculate population standard variance over dimensions)
    countAggregator: count (count number of elements in the vector)
    validation:
      aggregator: Aggregator is required.
      promethusMetric: Prometheus Metric is required.
      filterOnEnvironment: Filter on Environment is required.
      filterOnService: Filter on Service required.
      serviceInstanceIdentifier: Service Instance Identifier is required.
      deviation: Deviation Compared to Baseline is required.
      metricNameUnique: Metric name must be unique.
      groupName: Group Name is required.
      uniqueName: '{{existingName}} already exists. Provide a unique name.'
      recordCount: Current query yields too many records. Please change query to yield one record.
  splunk:
    splunkLogsQuery: SPLUNK Logs Query
    savedSearchQuery: Select saved query
    submitQueryToSeeRecords: Submit query to see records from Splunk
    staleRecordsWarning: Records not upated with latest query. Please fetch records
  gcoLogs:
    query: QUERY
    gcoLogsServiceInstance: Add service instance
    querySpecificationsAndMappings: Query Specifications and Mappings
    customizeQuery: Enter the query to get the desired output and map to Harness Service.
    gcoLogsMessageIdentifer: Add message identifier
    selectPathForServiceInstance: Select path for service instance
    selectPathForMessageIdentifier: Select path for message identifier
    newGCOLogsServiceInstance: New Service Instance
    newGCOLogsMessageIdentifier: New Message Identifier
    fetchRecords: Fetch records
    newGCOLogsMessage: New GCO Logs Message
    records: Records
    submitQueryToSeeRecords: Submit query to see records from Stackdriver Logs
    noRecordsForQuery: No records for provided query
    gcoLogsQuery: GCO Logs Query
    addQueryTooltip: Fill all required fields before adding a new query
    serviceInstance: Identify Service Instance
    messageIdentifier: Identify Message
    selectRecords: After fetching records click on the plus icon ...
    validation:
      queryNameUnique: Query name must be unique.
      serviceInstance: Service Instance is required.
      messageIdentifier: Message Identifier is required.
      serviceInstanceUniqueName: '{{existingName}} already exists. Provide a unique name for service instance.'
      messageIdentifierUniqueName: '{{existingName}} already exists. Provide a unique name for message.'
activitySources:
  name: 'Name your Change Source'
  harnessCD:
    defaultName: 'My Harness CD'
    select: 'Select your Change Source'
    selectApplication: 'Select Applications'
    selectEnvironment: 'Select Environments'
    selectService: 'Select Services'
    iconLabel: 'Harness FirstGen'
    harnessApps: 'HARNESS FIRSTGEN APPLICATION'
    application:
      noData: 'No applications were found'
      infoText: 'Harness CV can verify change activities by automatically sourcing them from your Harness FirstGen applications. Select which applications and services you’d like to import over to your current project.'
      servicesToBeImported: HARNESS FIRSTGEN SERVICES (TO BE IMPORTED)
      searchPlaceholder: Search for FirstGen Applications
    environment:
      noData: 'No environments were found'
      infoText: 'Select the FirstGen Environments that you would be interested in. This ensures that all the activities about your services are indentified to belong to selected environments only.'
      harnessEnv: 'HARNESS FIRSTGEN ENVIRONMENTS'
      env: 'HARNESS NEXTGEN ENVIRONMENTS'
      searchPlaceholder: Search for FirstGen Environments
    service:
      noData: 'No services were found'
      infoText: 'The following services will get added to the list of services tracked by Harness Continous Verification. To enable verification on the services, continue to the next step where you map a verification Monitoring Source to your servcies.'
      harnessServices: 'HARNESS FIRSTGEN SERVICES'
      services: 'HARNESS NEXTGEN SERVICES'
      searchPlaceholder: Search for FirstGen Services
    validation:
      applicationValidation: At least one application must be selected.
      serviceValidation: At least one service mapping must be selected.
      environmentValidation: At least one environment mapping must be selected.
learnMore: Learn more about Change Intelligence
cvTrialHomePage:
  startTrial:
    description: Take your software build processes to the next level using our Harness Continuous Verification.
    startBtn:
      description: Start 14 day CV Enterprise trial
monitoredServices:
  title: Monitored Services
  filterlabel: 'Environment:'
  youHaveNoMonitoredServices: You have no monitored services
  nameValidation: Monitored Service Name is required
  environmentValidation: '{{$.cd.pipelineSteps.environmentTab.environmentIsRequired}}'
  serviceValidation: '{{$.cd.pipelineSteps.serviceTab.serviceIsRequired}}'
  serviceAndEnvironment: Service And Environment
  monitoredServiceDetails: Monitored Service Details
  monitoredServiceName: Monitored service name
  newMonitoredServices: New Monitored Service
  addNewMonitoredServices: Create new monitored service
  editMonitoredServices: Edit Monitored Service
  editService: Edit service
  deleteMonitoredServiceWarning: Deleting your monitored service ‘{{ name }}’ will also delete its resources.
  deleteService: Delete service
  monitoredServiceDeleted: Monitored service successfully deleted
  monitoredServiceCreated: Monitoring Service created
  monitoredServiceUpdated: Monitoring Service updated
  monitoredServiceToggle: 'Monitored Service successfully {{enabled}}'
  showingAllServices: Showing all Services ({{ serviceCount }})
  showingServiceAtRisk: Showing Services at Risk ({{ serviceCount }})
  noAvailableData: No available data.
  dependencyHealth: Dependency Health
  dependenciesHealth: Dependencies Health
  healthScoreDataNotAvailable: Health score data not available.
  serviceHealthScoreDataNotAvailable: Service Health score data not available.
  dependencyHealthScoreDataNotAvailable: Dependency Health score data not available.
  failedToFetchHealthScore: Failed to fetch health score data.
  failedToFetchSummaryData: Failed to fetch summary data
  changeMonitoredServiceType: Change Monitored Service Type
  changeMonitoredServiceTypeMessage: Changing monitored service type will reset change sources
  sloErrorBudget: SLO Error Budget
  serviceHealth:
    last4Hrs: Last 4 hours
    last24Hrs: Last 24 hours
    last3Days: Last 3 days
    last7Days: '{{ $.common.last7days }}'
    overallHealthScore: Overall Health Score
    noDataAvailableForHealthScore: No healthscore data available in the {{duration}}
    pleaseSelectAnotherTimeWindow: Please select another time window.
    selectTimeline: Select a timeline to see metric & logs data
    metricsAndLogs: Metrics & Logs
    lowestHealthScore: Lowest Health Score
    anamolies: Anamolies
    serviceDependencies:
      states:
        unhealthy: Unhealthy
        needsAttention: Needs attention
        observe: Observe
        healthy: Healthy
        exhausted: Exhausted
  monitoredServiceTabs:
    serviceHealth: Service Health
    configurations: Configurations
  table:
    serviceName: Service Name
    lastestHealthTrend: Health trend (Last 24h)
    serviceHealthScore: service Health Score
    healthMonitoring: Health Monitoring
    changes: Changes (Last 24H)
  changesTable:
    impact: Impact
  serviceDependencies:
    noData: No data available for service dependencies
  assignLabel: Select the services you want to apply the metric
  continuousVerification: Continuous Verification
dependenciesHealthWithCount: Dependencies Health ({{ count }})
changeSource:
  alertText: Alert
  incident: Incident
  noChangeSource: No Change Sources Present
  noData: No changes data available
  configureChangeSource: Configure Change Sources
  addChangeSource: Add New Change Source
  selectChangeSource: Select Change Source
  defineChangeSource: Define Change Sources
  connectChangeSource: Connect Change Source
  sourceName: Source Name
  editChangeSource: Edit Change Source
  duplicateIdentifier: identifier already exist
  selectChangeSourceName: Select change source name
  selectChangeSourceProvider: Select change source provider
  selectChangeSourceType: Select change source type
  deleteChangeSourceWarning: Are you sure you want to delete Change Source
  noDataAvailableForChangeScore: No {{type}} data available in the last {{duration}}
  noDataAvaiableForCard: No data available
  tooltip:
    incidents: Incidents
  PageDuty:
    pagerDutyService: PagerDuty Service
    selectPagerDutyService: Select PageDuty Service
    pagerDutyEmptyService: No service available for {{ connector }}
  HarnessCDCurrentGen:
    selectHarnessAppId: Select Application Id
    selectHarnessService: Select Harness Service
    selectHarnessEnv: Select Harness Environment
    applicationId: '{{$.common.application}}'
  changeSourceCard:
    information: Information
    triggred: Triggered
    viewDeployment: View Deployment
    finished: 'Finished: '
    deploymentHealth: Deployment Health
    ago: ago
  kubernetes:
    validatingConnector: Validating permissions to fetch Kubernetes events.
    invalidConnector: Unable to fetch kubernetes events for this connector. Please use a connector with permissions to fetch events from the cluster.
Dependency:
  serviceList: Service list
  noData: No Data For Dependency Graph
  serviceChanges: Service Changes
healthSource:
  nameLabel: Health Source Name
  namePlaceholder: Type your health source name
  featureLabel: Select Feature
  noData: No Health Sources Present
  featurePlaceholder: Select your {{ sourceType }} feature
  environmentLabel: Create or select an Environment
  serviceLabel: Create or select a Service
  addHealthSource: Add New Health Source
  editHealthSource: Edit Health Source
  backtoMonitoredService: Back to monitored service
  connectHealthSource: Connect Health Source
  selectHealthSource: Select health source type
  defineYourSource: Define Your Sources
  defineHealthSource: Define Health Source
  customizeHealthSource: Customize Health Source
  deleteHealthSourceWarning: Are you sure you want to delete Health Source
  deleteHealthSource: Delete Health Source
  noDataPresentHealthSource: No data is present for the selected Health Source
  seriveEnvironmentNote: Service selected is {{service}} and Environment selected is {{environment}}
  table:
    serviceMapping: Service Mapping
    environmentMapping: Environment Mapping
  connectors:
    selectConnector: Select {{sourceType}} Connector
    customMetrics: Custom Metrics (optional)
    customMetricsTooltip: Add custom metrics
    buildChart: Build Chart
    NewRelic:
      applicationLabel: Find an NewRelic application
      nrqlQuery: NRQL Query
      groupName: New Relic Group Name
      submitQueryNoRecords: Submit query to see response from New Relic
      metricValueAndCharts: Metric values and charts
      queryMapping: Query Specifications and mapping
      validations:
        application: Please select application
        nrql: NRQL Query is required
        continuousVerification: Service selection is required
        metricValue: Metric Value JSON Path is required
        timestamp: Timestamp Field/Locator JSON Path is required
      metricFields:
        metricValueJsonPath:
          label: Metric Value JSON Path
          noRecordModalHeader: New Metric Value
          recordsModalHeader: Select path for Metric value
        timestampJsonPath:
          label: Timestamp Field/Locator JSON Path
          noRecordModalHeader: New Timestamp Locator
          recordsModalHeader: Select path for timestamp field
        timestampFormat: Timestamp Format
    AppDynamics:
      applicationsAndTiers: Applications & Tiers
      applicationLabel: Find an AppDynamics application
      applicationPlaceholder: Type an application name
      trierLabel: Find an AppDynamics tier
      tierPlaceholder: Type an tier name
      metricPackLabel: Select Metric Packs to be monitored
      validation:
        application: Please select applications
        tier: Please select tier
        basePath: Please select base path
        metricPath: Please select metric path
        metricPathWithoutLeafNode: Please select metric in metric path
      metricPathType:
        text: Specify a complete metric path
        dropdown: Select the path from the AppD metric
      selectedPathLabel: Selected path
    gco:
      selectDashboardTab: 'Select Dashboards'
slos:
  title: SLOs
  editSLO: 'Edit SLO: {{name}}'
  deleteSLO: Delete SLO
  newSLO: New SLO
  createSLO: Create SLO
  healthSource: Health source
  sloCreated: SLO created successfully
  sloUpdated: SLO updated successfully
  noData: No SLOs Present.
  confirmDeleteSLO: 'Are you sure you want to delete SLO: {{ name }}?'
  sloDeleted: '{{ name }} successfully deleted'
  sli: SLI
  sloTargetAndBudgetPolicy: SLO Target & Error Budget Policy
  sloName: SLO Name
  userJourney: User Journey
  totalServices: Total SLOs
  userJourneyPlaceholder: Select or create user journey
  userJourneyCreated: User journey created successfully
  selectMonitoredService: Select Monitored Service
  selectMonitoredServiceForSlo: Select monitored service on which to define SLO
  selectHealthsource: Select Health Source
  healthSourceForSLI: Health Source for SLI
  sliType: SLI Type
  sliTypeChooseMetric: SLI Type - Choose a metric
  latencySLI: Latency SLI measures the proportion of requests that were faster than some threshold.
  pickMetricsSLI: Pick metrics powering the SLI
  configureSLIQueries: Configure SLI queries
  sloDefinition: Define SLO identifcation
  reviewChanges: Review changes
  sloEditWarningMessage: It may take a few minutes to recalculate the error budget. Are you sure you want to proceed?
  validations:
    nameValidation: SLO name is required
    userJourneyRequired: User journey is required
    healthSourceRequired: Health Source is required
  sloTargetAndBudget:
    periodType: Period Type
    periodTypeOptions:
      rolling: Rolling
      calendar: Calendar
    setSLOTarget: Set the SLO time window and target
    complianceTimePeriodTitle: Compliance time period for evaluating SLO
  slis:
    type:
      availability: Availability
      latency: Latency
    metricOptions:
      thresholdBased: Threshold based
      ratioBased: Ratio based
    ratioMetricType:
      eventType: Event type
      goodRequestsMetrics: Metric for good requests
      validRequestsMetrics: Metric for valid requests
      selectMetric1: Select metric 1
      selectMetric2: Select metric 2
  contextualHelp:
    sli:
      intro: To evaluate the performance of the monitored service, a collection of performance metrics such as duration, error rate, and so on will be applied.
      healthSource: A Health Source is a combination of a Harness Service and associated Environment that monitors changes in health trends of the service using logs or metrics collected from an Application Performance Management or logging tool.
      whatIsSli: What is an SLI?
      sliDefinition: An SLI (service level indicator), which measures the performance of the service. Also, an SLI measures compliance with an SLO (service level objective).
      sliDefinition2: So, if your SLA (Service Level Agreement) specifies that your systems will be available 99.95% of the time, your SLO is likely 99.95% uptime and your SLI is the actual measurement of your uptime.
      availabilityDescription: Measures how available your service was to users or valid requests served successfully.
      latencyDescription: Measures how fast your service responded to users or how many valid request served faster than a defined thresholds.
      thresholdDescription: The number of valid requests is compared to the length of time.
      ratioBasedDescription: Percentage of good requests that are acceptable.

    target:
      compliance: Compliance
      complianceDefinition: Compliance measures the current performance of the system and is measured against your SLO. There are two types of compliance periods for SLOs
      complianceDefinition2: Rolling periods (from n days ago to now, where n ranges from 1 to 30 days)
      complianceDefinition3: Calendar-based periods (from date to date)
      rollingWindowBased: Rolling window-based
      rollingWindowDefinition: Measures compliance over a rolling period, so that you are always evaluating, for example, the last 30 days. With a rolling period, the oldest data in the previous calculation drops out of the current calculation and new data replaces it.
      rollingWindowDefinition2: Rolling windows are more closely aligned with user experience
      calendarBased: Calendar-based
      calendarBasedDefinition: Compliance periods can be set to calendar periods like a weekly, monthly or quarterly. At the end of a calendar period, you are given a performance score. The performance score, which is calculated against the performance threshold, tells you whether your service was compliant or not. Even though you may view the performance throughout the period when you use a calendar period, you only get a compliance rating for every compliance period.
      calendarBasedDefinition2: Calendar windows are more closely aligned with business planning and project work.

SLO: SLO
SLOPerformanceTrend: SLO Performance Trend
sloRecalculationInProgress: SLO recalculation in progress
errorBudgetRecalculationInProgress: Error Budget recalculation in progress
errorBudgetRemaining: Error Budget Remaining (mins)
errorBudgetBurnDown: Error Budget Burndown
SLITriggered: SLI Triggered
burnRatePerDay: Burn Rate/Day
timeRemaining: Time Remaining
SLOTarget: SLO Target
SLIMetricRatio: SLI - Latency (Metric1 / Metric2 X 100)
SLIRequestRatio: SLI = (Good requests/ Valid requests) X 100
objectiveValue: Objective Value
SLIValueIsGoodIf: SLI value is good if
thanObjectiveValue: than objective value
toObjectiveValue: to objective value
considerMissingMetricDataAs: Consider missing metric data as
sliMissingDataTypeIsRequired: SLI Missing data type is required
metricIsRequired: Metric is required
metricForGoodAndValidRequestsShouldBeDifferent: Metric for good and valid requests should be different
required: Required
periodLength: Period Length
periodLengthDays: Period Length (Days)
widowEnds: Window Ends
windowEndsDay: Window Ends (Day)
periodLengthIsRequired: Period Length is required
windowsEndIsRequired: Windows End is required
quarterly: Quarterly
monday: Monday
tuesday: Tuesday
wednesday: Wednesday
thursday: Thursday
friday: Friday
saturday: Saturday
sunday: Sunday
good: Good
bad: Bad
ignore: Ignore
errorBudget: Error Budget
mins: mins
minValueN: 'Min value {{n}}'
maxValue: 'Max value {{n}}'
pleaseFillTheRequiredFieldsToSeeTheSLIData: Please fill the required fields to see the SLI data
day: day
oneDay: 1 day
days: days
nDays: '{{ n }} days'
cvChanges:
  changeTypeFilterDefault: 'Change Types'
  sourceFilterDefault: 'Sources'
  changesTimeline: 'Changes TimeLine'
  monitoredSVC: 'Monitored SVC'
componentValidations:
  requestMethod: Request Method is required
  queryType: Query Type is required
  queryTypeLabel: Query Type
customHealthSource:
  fetchRecordsButton: Click on Fetch Records to pull records from provided URL
  addGroupNameTitle: Add New Custom Health Group Name
  Querymapping:
    title: Query specifications and mapping
    label: Customize the query to get our desired output and map to Harness Service
    startAndEndTimeTitle: Start and End Time Placeholders
    startTimeLabel: Start time placeholder
    endTimeLabel: End time placeholder
    validation:
      body: Body is required.
      path: Please select path
      startTime:
        placeholder: Please select start time placeholder
        timestamp: Please select start time timestamp Format
      endTime:
        placeholder: Please select end time placeholder
        timestamp: Please select end time timestamp Format
  ServiceInstance:
    pathLabel: Provide Service Instance to map to Harness Service Instance
    pathModalHeader: Select path for Service Instance
