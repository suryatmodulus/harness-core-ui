addSAMLProvider: Add SAML Provider
editSAMLProvider: Edit SAML Provider
selectSAMLProvider: Select a SAML Provider
enterSAMLEndPoint: Enter this SAML Endpoint URL as your Harness {{ selectedSAMLProvider }} application's ACS URL.
uploadIdentityProvider: Upload the Identity Provider metadata XML downloaded from your {{ selectedSAMLProvider }} app
identityProvider: Identity Provider metadata XML downloaded from your {{ selectedSAMLProvider }} app {{ $.titleOptional }}
chooseFile: Choose a file...
enableAuthorization: Enable Authorization
groupAttributeName: Group Attribute Name
enableEntityIdLabel: Add Entity Id
entityIdLabel: Entity Id
friendlyReminder: Friendly Reminder
friendlyReminderDescription: Email addresses is how Harness identifies Users. Always ensure that the email addresses of your registered Harness Users match the SAML provider users you want to authenticate and authorize.
enablingAuthorization: Enabling Authorization
enablingAuthorizationDescription: To set up SAML authorization in Harness, you link a user group in Harness to a user group in {{ selectedSAMLProvider }}. When a user from {{ selectedSAMLProvider }} logs into Harness, they are automatically added to the linked Harness User Group, and inherit all the RBAC settings for that User Group.
testingSSO: Testing SSO
testingSSODescription: A new browser tab will prompt you to log into your SAML provider when you test. Ensure that you have at least two corresponding user accounts when setting up and testing SAML SSO in Harness. This allows you to set up the account with a Harness Administrator account and test it with a Harness user account.
azure: '{{ $.common.azure }}'
okta: Okta
oneLogin: OneLogin
samlProviderAddedSuccessfully: SAML provider added successfully
samlProviderUpdatedSuccessfully: SAML provider updated successfully
authorizationEnabledFor: 'Authorization enabled for: '
authorizationNotEnabled: Authorization not enabled
plusSAMLProvider: + SAML Provider
loginViaSAML: Login via SAML
accountOrOAuthLogin: Login via a Harness Account or Public OAuth Providers
usePublicOAuth: Use Public OAuth Providers
useHarnessUsernameAndPassword: Use Harness username and password
enforcePasswordStrength: Enforce password strength
passwordMustFulfillReq: 'Passwords must fulfill the following requirements:'
atLeastNChars: At least {{ minNumberOfCharacters }} characters
periodicallyExpirePassword: Periodically expire passwords
periodicallyExpirePasswordNote: Updated password expiration policy will only apply to newly created or changed user passwords.
enforceLockoutPolicy: Enforce lockout policy
failedLoginsBeforeLockedAccount: Failed logins before user is locked out of account
enforceTwoFA: Enforce Two Factor Authentication
passwordStrength: Password Strength
minLength: Minimum Length
haveOneUppercase: Have at least 1 uppercase letter (A-Z)
haveOneLowercase: Have at least 1 lowercase letter (a-z)
haveOneDigit: Have at least 1 digit (0-9)
haveOneSpecialChar: Have at least 1 special character
passwordExpiration: Password Expiration
daysBeforePasswordExpires: Days before password expires
daysBeforeUserNotified: Days before user is notified of expiration
lockoutPolicy: Lockout Policy
failedLoginsBeforeLocked: Failed logins before user is locked out
lockoutDuration: Lockout duration
notifyUsersWhenTheyLocked: Notify users when they are locked out
notifyUsersWhenUserLocked: Notify user groups when a user is locked out
publicOAuthLoginEnabled: Login via public OAuth providers has been enabled
publicOAuthLoginDisabled: Login via public OAuth providers has been disabled
pleaseRemoveSAMLOrLDAPToEnableOauth: Please remove SAML/LDAP settings to enable public Oauth providers
keepAtLeastOneProviderEnabled: Please either keep at least one provider enabled, or entirely disable login via public OAuth
oauthSettingsHaveBeenUpdated: OAuth settings have been updated
disableOAuthLogin: Disable login via public OAuth providers
confirmDisableOAuthLogin: Are you sure you want to disable login via public OAuth providers?
enableAtLeastOneSsoBeforeDisablingUserPasswordLogin: You must enable at least one SSO provider before you can disable login via Harness username/password.
loginSettingsHaveBeenUpdated: Login settings have been updated
disableUserPasswordLogin: Disable login via Harness username/password
confirmDisableUserPasswordLogin: Are you sure you want to disable login via Harness username/password?
disablePasswordStrength: Disable password strength
confirmDisablePasswordStrength: Are you sure you want to disable password strength policy?
passwordStrengthEnabled: Password strength policy has been enabled successfully
passwordStrengthUpdated: Password strength policy has been updated successfully
passwordStrengthDisabled: Password strength policy has been disabled successfully
disablePasswordExpiration: Disable password expiration
confirmDisablePasswordExpiration: Are you sure you want to disable password expiration policy?
passwordExpirationEnabled: Password expiration policy has been enabled successfully
passwordExpirationUpdated: Password expiration policy has been updated successfully
passwordExpirationDisabled: Password expiration policy has been disabled successfully
disableLockoutPolicy: Disable lockout policy
confirmDisableLockoutPolicy: Are you sure you want to disable lockout policy?
lockoutPolicyEnabled: Lockout policy has been enabled successfully
lockoutPolicyUpdated: Lockout policy has been updated successfully
lockoutPolicyDisabled: Lockout policy has been disabled successfully
SAMLProvider: SAML Provider
deleteSamlProvider: Delete SAML provider
deleteSamlProviderDescription: 'Do you want to delete the SAML Provider:'
samlProviderDeleted: SAML provider has been deleted successfully
enableSamlProvider: Enable SAML Provider
enableSamlProviderDescription: Before you change the SSO provider to SAML, please use the Test button to ensure your settings are correct.
samlLoginEnabled: SAML login enabled successfully
enableHarnessAccountOrOauthLogin: Enable Harness account or Oauth login
changeLoginToHarnessAccountOrOauth: Do you want to change Login via SAML Provider to Harness Account or Public OAuth Providers?
accountOrOAuthLoginEnabledSuccessfully: '{{ $.authSettings.accountOrOAuthLogin }} enabled successfully'
changeLoginToHarnessAccountOrOauthDescription: Some Users may not have set their Harness password. They will need to reset their password using this
samlTestSuccessful: SAML test successful
samlTestFailed: SAML test failed. Please check your credentials
disableWhitelistedDomains: Disable email restrictions
confirmDisableWhitelistedDomains: Are you sure you want to disable email restrictions?
WhitelistedDomainsUpdated: Domain restrictions have been updated successfully.
whitelistedDomainsDisabled: Domain restrictions have been disabled successfully.
allowLoginFromTheseDomains: Allow login from these domains
allowUsersWithEmails: 'Only allow users with the following email domains:'
typeAndPressEnterToAddADomain: Type and press enter to add a domain
restrictUsersToEmailDomains: Restrict users to email domains
domainNameRequired: At least one domain name is required
yourAccountWillBeLockedOut: Your account will be locked out. Please set up Two Factor Authentication for yourself.
goToSettings: Go to settings
doYouWantToEnforceTwoFAForAllMembers: 'Do you want to enforce Two Factor Authentication for all members? The following changes will take effect:'
newMembersWillNeedToSetUpTwoFADuringSignup: New members will need to set up Two Factor Authentication during signup.
existingMembersWillReceiveAnEmailWithQRCode: Existing members who do not have Two Factor Authentication enabled will receive an email with a QR code, and instructions on how to set up Two Factor Authentication.
twoFAEnforcementEnabled: Two Factor Authentication enforcement has been enabled successfully
disableTwoFAEnforcement: Disable Two Factor Authentication enforcement
sureToDisableTwoFAEnforcement: Are you sure you want to disable Two Factor Authentication enforcement?
twoFAEnforcementDisabled: Two Factor Authentication enforcement has been disabled successfully
authenticationSettings: Authentication Settings
updating: Updating, please wait...
onprem: 'Self Hosted'
saas: 'SaaS'
multipleOrganizations: Multiple Organizations
multipleProjects: Multiple Projects
samlSupport: SAML authentication
oauthSupport: OAuth authentication
twoFactorAuthSupport: Two Factor Auth Support
cdCommunityPlan:
  planLink: 'https://harness.io/pricing'
  communityPrice: 'Free and Open Software'
  communityTitle: 'Community'
  enterpriseTitle: 'Enterprise'
  communityTitle2: 'Self-Hosted Only'
  enterpriseTitle2: 'Upgrade to a self hosted Enterprise Plan'
  saasTitle2: 'Harness CD is also available in a variety of exciting SaaS plans'
  communityLinkText: 'Supported by Community'
  enterpriseLinkText: 'Go to Enterprise'
  saasLinkText: '{{$.common.exploreSaaSPlans}}'
  harnessLinkText: 'Explore All Harness Plans'
  communityPlanStrings:
    item1: 'Kubernetes, VMs, Serverless Deployments supported on all popular platforms & clouds'
    item2: 'Advanced Deployment Strategies & Automated Rollback'
    item3: 'Built-in User & Secret Management'
    item4: 'Built-in Approvals'
    item5: 'Git Experience'
  enterprisePlanStrings:
    item1: 'Unlimited Scalability & High Availability'
    item2: 'Enterprise Security & Governance'
    item3: 'External Approvals & Secrets Management'
    item4: Multiple Projects & Organizations
    item5: Template Library & Custom Dashboards
