allowSimultaneousDeployments: Allow simultaneous deployments on the same infrastructure
continuous: '{{$.common.purpose.cd.continuous}}'
learnMore: Learn more about Continuous Delivery
dynamicProvisioning: Dynamic provisioning
dashboard:
  subHeading: Let Harness take your software release process to the next level with Continuous Delivery
  createProject: '{{$.createProject}}'
  orSelectExisting: '{{$.orSelectExisting}}'
steps:
  common:
    clusterDetails: Cluster Details
    selectOrEnterClusterPlaceholder: Select or add cluster
    releaseNamePlaceholder: Enter Release Name
  kubernetesGcpStep:
    stepName: Specify your GCP Connector
folderPath: Folder Path
filePathPlaceholder: 'Enter path within manifest folder'
resourceCannotBeEmpty: 'Resource cannot be empty'
manifestPathsCannotBeEmpty: 'Manifest Paths cannot be empty'
scriptRequired: Script is a required field
workloadRequired: Workload is a required field
stepName: Step Name
serviceCreated: '{{ $.common.serviceCreated }}'
serviceUpdated: '{{ $.common.serviceUpdated }}'
environmentCreated: '{{ $.common.environmentCreated }}'
environmentUpdated: '{{ $.common.environmentUpdated }}'
namespaceValidation: Namespace must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc')
releaseNameValidation: Release name must consist of lowercase alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. http://example.com). Harness evaluates the release name using the regex [a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*
cdTrialHomePage:
  startTrial:
    description: Take your software build processes to the next level using our Harness Continuous Delivery.
    startBtn:
      description: Start 14 day CD Enterprise trial
chooseProvisionerText: What type of provisioner do you want to use?
setUpProvisionerBtnText: Set Up Provisioner

filePathRequired: Atleast one file path is required
pathCannotBeEmpty: File Path cannot be empty
configFilePlaceHolder: 'Specify Config File...'

configIdentifer: Configuration Identifier
addInline: Add Inline
addRemote: Add Remote
tfVarStore: Terraform Var Store
varFileDetails: Var File Details
varFile: Var File
backEndConfig: Backend Configuration
gitFetchTypeRequired: Git Fetch Type Required
contentRequired: Content is required
specifyTfVarStore: Specify Terraform Var File Store
addTFVarFileLabel: 'Add File Path'
configurationFile: 'Configuration File Repository'
terraformVarFiles: 'Terraform Var Files'
secretManagerRequired: 'Secret Manager is required.'
pipelineSteps:
  environmentTab:
    specifyYourEnvironment: Specify Environment
    selectEnvironment: '- Select Environment -'
    plusNewEnvironment: '+ {{$.newEnvironment}}'
    newEnvironment: '{{$.newEnvironment}}'
    environmentIsRequired: Environment is required
  serviceTab:
    stageOverrides: Stage Overrides
    propagateStage: Stage is required
    overrideChanges: Override artifacts, manifests, service variables for this stage
    deploymentTypeRequired: Deployment type selection is required
    propagateFrom: Propagate from
    differentService: Deploy different Service
    specifyYourService: Specify Service
    selectService: '- Select Service -'
    newService: '{{$.newService}}'
    plusNewService: '+ {{$.newService}}'
    serviceIsRequired: Service is required
    aboutYourService: About the Service
  infraTab:
    deploymentType: Infrastructure type selection is required
    clusterError: No cluster found with given Connector
cdLaunchText: Launch CD First Generation
serviceDashboard:
  activeServiceInstancesLabel: '{{$.common.subscriptions.usage.srvcInst}}'
  servicesInLast: 'Services added in {{period}}'
  serviceInstancesInLast: 'Active service instance trend in {{period}}'
  serviceInstances: 'Service Instances'
  nonProd: 'Non Prod'
  prod: 'Prod'
  in: 'in {{timeRange}}'
  frequency: '{{$.common.frequency}}'
  totalServices: 'Total Services: {{total}}'
  lastDeployment: 'last deployment'
  executionId: 'Execution Id: {{id}}'
  noDeployments: No Deployments in {{timeRange}}
  noServices: No services in {{timeRange}} for given criteria
  noServiceInstances: No Service Instances in {{timeRange}}
  seeMore: '+ {{count}} more'
  buildName: 'Build Name'
  noServiceDetails: No services matching the criteria
  6monthTrend: 6 month trend
  instanceCountHistory: Instance Count History
  instanceDetails: Instance Details
  pod: pod
  deployedAt: Deployed At
  deployedBy: Deployed By
  artifact: artifact
  totalPipelines: Total Pipelines
  noPipelines: No pipeline execution in {{timeRange}} matches the given criteria
  envName: Env Name
  noActiveServiceInstances: No Active Service Instances
  noActiveServices: No Active Services in {{timeRange}}
gitOps: GitOps
enterpriseGitOps: Enterprise GitOps
newAdapter: New Adapter
newGitOpsServer: New GitOps Server
adapterDetails: Adapter Details
launchArgo: Launch Argo App Dashboard
argoAdapterURL: 'Adapter URL'
noAdapterText: 'There are no adapters in your project'
aboutProvider: 'Adapters help connect to your Argo CD Instance and view your Apps.'
noGitOpsServerText: 'There are no GitOps Servers in your project'
aboutGitOpsServer: 'GitOps description'
installAdapterHelperText: 'Install Argo CD adapter in your cluster. This adapter allows customers to interact with the Argo CD server directly from Harness UI with minimal configuration. <ul> <li> Install one adapter per Argo CD Server. </li> <li> This Adapter should be able to reach the Argo CD Server. </li> <li> The communication between Harness UI to Harness Argo Adapter takes place over HTTPS for security purposes. </li> </ul>'
whatIsHarnessAdapter: 'What is an Adapter?'
aboutHarnessAdapter: 'The adapter is a service you run in your local network or VPC to establish connectivity between Harness UI and Argo CD.'
learnMoreAboutHarnessAdapter: 'Learn More about this'
updating: 'Updating adapter {{name}}'
creating: 'Creating adapter {{name}}'
createdSuccessfully: 'Adapter {{name}} created successfully'
updatedSuccessfully: 'Adapter {{name}} updated successfully'
deletedSuccessfully: 'Adapter {{name}} deleted'
confirmDeleteTitle: Delete Adapter
confirmProviderDelete: Are you sure you want to delete the Adapter
updatingGitOpsServer: 'Updating GitOps Server {{name}}'
creatingGitOpsServer: 'Creating GitOps Server {{name}}'
createdGitOpsServerSuccessfully: 'GitOps Server {{name}} created successfully'
updatedGitOpsServerSuccessfully: 'GitOps Server {{name}} updated successfully'
deletedGitOpsServerSuccessfully: 'GitOps Server {{name}} deleted'
confirmGitOpsServerDeleteTitle: Delete Server
confirmGitOpsServerDelete: Are you sure you want to delete the GitOps Server
duplicateIdError: 'Failed to create Adapter: {{ providerName }}. There is already an Adapter with identifier {{ providerIdentifier }} present. Please provide a new unique identifier and save again.'
duplicateGitOpsServerIdError: 'Failed to create GitOps Server: {{ providerName }}. There is already a server with identifier {{ providerIdentifier }} present. Please provide a new unique identifier and save again.'
connectionIssueSuggestion: 'Try these suggestions <ul> <li> Install the Adapter. Follow the <a target="_blank" href="https://docs.harness.io/article/bymoar4glr-argo#step_2_install_and_launch_the_ecs_delegate"> steps </a>  </li> <li> Make sure the Adapter URL is reachable from your network </li> </ul>'
connectionIssueInfo: 'Issue could be <ul> <li> Adapter is not installed or not running </li> </ul>'
searchPlaceholder: 'Search by name, description or tag'
gitOpsWizardTitle: 'Adapter'
harnessManagedGitOpsWizardTitle: 'Harness Managed GitOps Server'
notReachable: 'Could not reach the Adapter at URL: '
adapterDelete: 'Adapter {{adapterName}} deleted'
GitOpsServerDelete: 'GitOps Server {{adapterName}} deleted'
testConnectionStepName: 'Trying to reach the Adapter at URL: {{url}}'
setupGitOpsServerStep: 'Setup GitOps Server'
whatIsHarnessManagedGitOpsServer: 'What is a Harness Managed GitOps Server?'
aboutHarnessManagedGitOpsServer: 'The Harness GitOps Server is a worker process that runs in your environment and performs GitOps tasks.'
componentsInstalled: '<ul> <li> GitOps agent </li> <li> Repo server </li><li> Redis cache </li> <li> Application controller  </li> </ul>'
requiredPermissions: '<ul> <li> Permission to create Deployment, Service, Statefulset, Network Policy, Service Account, Role, ClusterRole, RoleBinding, ClusterRoleBinding, ConfigMap, Secret (For the Harness GitOps Server) </li> <li> Permission to apply CustomResourceDefinition For the Harness GitOps Server) </li> </ul>'
