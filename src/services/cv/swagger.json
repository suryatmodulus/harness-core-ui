{
  "swagger": "2.0",
  "info": {
    "title": "Continuous Verification Swagger",
    "version": "1.0"
  },
  "host": "{{host}}",
  "basePath": "/cv/api",
  "tags": [
    {
      "name": "activity"
    },
    {
      "name": "kubernetes"
    },
    {
      "name": "alert"
    },
    {
      "name": "learning-engine-dev"
    },
    {
      "name": "learning"
    },
    {
      "name": "log-analysis"
    },
    {
      "name": "log-cluster"
    },
    {
      "name": "timeseries-analysis"
    },
    {
      "name": "trend-analysis"
    },
    {
      "name": "verify-step"
    },
    {
      "name": "appdynamics"
    },
    {
      "name": "cv-config"
    },
    {
      "name": "cvng-log"
    },
    {
      "name": "partial-yaml-schema"
    },
    {
      "name": "change-event"
    },
    {
      "name": "demo"
    },
    {
      "name": "customhealth"
    },
    {
      "name": "delegate-data-collection"
    },
    {
      "name": "delegate-data-collection-task"
    },
    {
      "name": "datadog-logs"
    },
    {
      "name": "datadog-metrics"
    },
    {
      "name": "health"
    },
    {
      "name": "host-record"
    },
    {
      "name": "log-record"
    },
    {
      "name": "metric-pack"
    },
    {
      "name": "monitored-service"
    },
    {
      "name": "newrelic"
    },
    {
      "name": "onboarding"
    },
    {
      "name": "pagerduty"
    },
    {
      "name": "parseSampleDara"
    },
    {
      "name": "prometheus"
    },
    {
      "name": "monitored-servicesli"
    },
    {
      "name": "splunk"
    },
    {
      "name": "stackdriver-log"
    },
    {
      "name": "stackdriver"
    },
    {
      "name": "sumologic"
    },
    {
      "name": "timeseries"
    },
    {
      "name": "webhook"
    },
    {
      "name": "heatmap"
    },
    {
      "name": "log-dashboard"
    },
    {
      "name": "service-dependency-graph"
    },
    {
      "name": "timeseries-dashboard"
    },
    {
      "name": "slo-dashboard"
    },
    {
      "name": "slo"
    },
    {
      "name": "user-journey"
    },
    {
      "name": "deployment-time-series-analysis"
    },
    {
      "name": "verification-job-instance"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/activity/{activityId}/deployment-timeseries-data": {
      "get": {
        "tags": ["activity"],
        "summary": "get metrics for given activity",
        "description": "",
        "operationId": "getDeploymentMetrics",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "anomalousMetricsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "hostName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "healthSources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseTransactionMetricInfoSummaryPageDTO"
            }
          }
        }
      }
    },
    "/activity/{activityId}/deployment-activity-summary": {
      "get": {
        "tags": ["activity"],
        "summary": "get summary of deployment activity",
        "description": "",
        "operationId": "getDeploymentActivitySummary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseDeploymentActivitySummaryDTO"
            }
          }
        }
      }
    },
    "/activity/{activityId}/datasource-types": {
      "get": {
        "tags": ["activity"],
        "summary": "get datasource types for an activity",
        "description": "",
        "operationId": "getDatasourceTypes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseSetDatasourceTypeDTO"
            }
          }
        }
      }
    },
    "/activity/{activityId}/healthSources": {
      "get": {
        "tags": ["activity"],
        "summary": "get health sources  for an activity",
        "description": "",
        "operationId": "getHealthSources",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseSetHealthSourceDTO"
            }
          }
        }
      }
    },
    "/activity/{activityId}/clusters": {
      "get": {
        "tags": ["activity"],
        "summary": "get logs for given activity",
        "description": "",
        "operationId": "getDeploymentLogAnalysisClusters",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "healthSource",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "healthSources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "clusterType",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["KNOWN_EVENT", "UNKNOWN_EVENT", "UNEXPECTED_FREQUENCY"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "clusterTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["KNOWN_EVENT", "UNKNOWN_EVENT", "UNEXPECTED_FREQUENCY"]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLogAnalysisClusterChartDTO"
            }
          }
        }
      }
    },
    "/activity/{activityId}/deployment-log-analysis-data": {
      "get": {
        "tags": ["activity"],
        "summary": "get logs for given activity",
        "description": "",
        "operationId": "getDeploymentLogAnalysisResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hostName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "healthSource",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "healthSources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "clusterType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["KNOWN_EVENT", "UNKNOWN_EVENT", "UNEXPECTED_FREQUENCY"]
          },
          {
            "name": "clusterTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["KNOWN_EVENT", "UNKNOWN_EVENT", "UNEXPECTED_FREQUENCY"]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageLogAnalysisClusterDTO"
            }
          }
        }
      }
    },
    "/activity/recent-activity-verifications": {
      "get": {
        "tags": ["activity"],
        "summary": "get a list of recent activity verification results",
        "description": "",
        "operationId": "getRecentActivityVerificationResults",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListActivityVerificationResultDTO"
            }
          }
        }
      }
    },
    "/activity/{activityId}/activity-risks": {
      "get": {
        "tags": ["activity"],
        "summary": "get activity verification result",
        "description": "",
        "operationId": "getActivityVerificationResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseActivityVerificationResultDTO"
            }
          }
        }
      }
    },
    "/kubernetes/namespaces": {
      "get": {
        "tags": ["kubernetes"],
        "summary": "gets a list of kubernetes namespaces",
        "description": "",
        "operationId": "getNamespaces",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/kubernetes/workloads": {
      "get": {
        "tags": ["kubernetes"],
        "summary": "gets a list of kubernetes workloads",
        "description": "",
        "operationId": "getWorkloads",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/kubernetes/validate": {
      "get": {
        "tags": ["kubernetes"],
        "summary": "validate permissions of a k8s connector for events",
        "description": "",
        "operationId": "validateK8sConnectivity",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseBoolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/alert/activityTypes": {
      "get": {
        "tags": ["alert"],
        "summary": "gets activity types",
        "description": "",
        "operationId": "getActivityTypes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListActivityType"
            }
          }
        }
      }
    },
    "/alert": {
      "get": {
        "tags": ["alert"],
        "summary": "gets the alert rule for an identifier",
        "description": "",
        "operationId": "getAlertRule",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseAlertRuleDTO"
            }
          }
        }
      },
      "post": {
        "tags": ["alert"],
        "summary": "create alert",
        "description": "",
        "operationId": "createAlert",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlertRuleDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseAlertRuleDTO"
            }
          }
        }
      },
      "put": {
        "tags": ["alert"],
        "summary": "update alert",
        "description": "",
        "operationId": "updateAlert",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AlertRuleDTO"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/alert/list": {
      "get": {
        "tags": ["alert"],
        "summary": "get list of alerts",
        "description": "",
        "operationId": "retrieveAlert",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlertRuleDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageAlertRuleDTO"
            }
          }
        }
      }
    },
    "/alert/{identifier}": {
      "delete": {
        "tags": ["alert"],
        "summary": "deletes alert",
        "description": "",
        "operationId": "deleteAlert",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/learning-engine-dev/timeseries-risk-summary-by-time": {
      "get": {
        "tags": ["learning-engine-dev"],
        "summary": "get risk analysis cumulative sums",
        "description": "",
        "operationId": "getRiskSummariesByTimeRange",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesRiskSummary"
            }
          }
        }
      }
    },
    "/learning-engine-dev/timeseries-cumulative-sums-by-time": {
      "get": {
        "tags": ["learning-engine-dev"],
        "summary": "get risk analysis cumulative sums",
        "description": "",
        "operationId": "getTimeSeriesCumulativeSumsByTimeRange",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesCumulativeSums"
            }
          }
        }
      }
    },
    "/learning-engine-dev/timeseries-short-term-history-by-id": {
      "get": {
        "tags": ["learning-engine-dev"],
        "summary": "get risk analysis cumulative sums",
        "description": "",
        "operationId": "getTimeSeriesShortTermHistoryByTaskId",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseTimeSeriesShortTermHistory"
            }
          }
        }
      }
    },
    "/learning-engine-dev/log-analysis-by-time": {
      "get": {
        "tags": ["learning-engine-dev"],
        "summary": "get risk analysis cumulative sums",
        "description": "",
        "operationId": "getLogAnalysisRecordsByTimeRange",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLogAnalysisRecord"
            }
          }
        }
      }
    },
    "/learning-engine-dev/log-analysis-result-by-time": {
      "get": {
        "tags": ["learning-engine-dev"],
        "summary": "get risk analysis cumulative sums",
        "description": "",
        "operationId": "getLogAnalysisResultByTimeRange",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLogAnalysisResult"
            }
          }
        }
      }
    },
    "/learning-engine-dev/clustered-logs-by-time": {
      "get": {
        "tags": ["learning-engine-dev"],
        "summary": "get risk analysis cumulative sums",
        "description": "",
        "operationId": "getClusteredLogsByTimeRange",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListClusteredLog"
            }
          }
        }
      }
    },
    "/learning-engine-dev/timeseries-anom-patterns-by-id": {
      "get": {
        "tags": ["learning-engine-dev"],
        "summary": "get risk analysis cumulative sums",
        "description": "",
        "operationId": "getAnomalousPatternsById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseTimeSeriesAnomalousPatterns"
            }
          }
        }
      }
    },
    "/learning/mark-failure": {
      "post": {
        "tags": ["learning"],
        "summary": "mark task failed",
        "description": "",
        "operationId": "markLearningTaskFailure",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExceptionInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/learning/next-cv-task": {
      "get": {
        "tags": ["learning"],
        "summary": "get next LE task to be processed",
        "description": "",
        "operationId": "getNextLearningTask",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "taskTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SERVICE_GUARD_TIME_SERIES",
                "LOG_CLUSTER",
                "SERVICE_GUARD_LOG_ANALYSIS",
                "CANARY_LOG_ANALYSIS",
                "TEST_LOG_ANALYSIS",
                "TIME_SERIES_CANARY",
                "SERVICE_GUARD_FEEDBACK_ANALYSIS",
                "TIME_SERIES_LOAD_TEST"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseLearningEngineTask"
            }
          }
        }
      }
    },
    "/log-analysis/serviceguard-shortterm-history": {
      "get": {
        "tags": ["log-analysis"],
        "summary": "get previous log analysis for a data source config",
        "description": "",
        "operationId": "getPreviousLogAnalysis",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLogAnalysisCluster"
            }
          }
        }
      }
    },
    "/log-analysis/previous-analysis": {
      "get": {
        "tags": ["log-analysis"],
        "summary": "get previous deployment analysis result for next task",
        "description": "",
        "operationId": "getPreviousDeploymentAnalysis",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseDeploymentLogAnalysisDTO"
            }
          }
        }
      }
    },
    "/log-analysis/test-data": {
      "get": {
        "tags": ["log-analysis"],
        "summary": "get test log data for a verification job",
        "description": "",
        "operationId": "getTestLogData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLogClusterDTO"
            }
          }
        }
      }
    },
    "/log-analysis/serviceguard-save-analysis": {
      "post": {
        "tags": ["log-analysis"],
        "summary": "saves log risk analysis for a data source config",
        "description": "",
        "operationId": "saveServiceGuardLogAnalysis",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LogAnalysisDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/log-analysis/deployment-save-analysis": {
      "post": {
        "tags": ["log-analysis"],
        "summary": "saves log risk analysis for a deployment verification",
        "description": "",
        "operationId": "saveDeploymentAnalysis",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DeploymentLogAnalysisDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/log-cluster/l1-test-verification-test-data": {
      "get": {
        "tags": ["log-cluster"],
        "summary": "get test log data of L1 clustering",
        "description": "",
        "operationId": "getL1LogClusteringDataForTestVerification",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "baselineVerificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLogClusterDTO"
            }
          }
        }
      }
    },
    "/log-cluster/save-clustered-logs": {
      "post": {
        "tags": ["log-cluster"],
        "summary": "saves clustered log data",
        "description": "",
        "operationId": "saveClusteredData",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterLevel",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["L1", "L2"]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LogClusterDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/log-cluster/test-data": {
      "get": {
        "tags": ["log-cluster"],
        "summary": "get test log data for a clustering",
        "description": "",
        "operationId": "getTestLogDataForClustering",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterLevel",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["L1", "L2"]
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "host",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLogClusterDTO"
            }
          }
        }
      }
    },
    "/timeseries-analysis/timeseries-serviceguard-cumulative-sums": {
      "get": {
        "tags": ["timeseries-analysis"],
        "summary": "get risk analysis cumulative sums",
        "description": "",
        "operationId": "getCumulativeSums",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringMapStringListMetricSum"
            }
          }
        }
      }
    },
    "/timeseries-analysis/timeseries-serviceguard-shortterm-history": {
      "get": {
        "tags": ["timeseries-analysis"],
        "summary": "get short term history for a data source config",
        "description": "",
        "operationId": "getShortTermHistory",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringMapStringListDouble"
            }
          }
        }
      }
    },
    "/timeseries-analysis/timeseries-serviceguard-metric-template": {
      "get": {
        "tags": ["timeseries-analysis"],
        "summary": "get metric template for a verification job",
        "description": "",
        "operationId": "getMetricTimeSeriesTemplate",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesMetricDefinition"
            }
          }
        }
      }
    },
    "/timeseries-analysis/time-series-data": {
      "get": {
        "tags": ["timeseries-analysis"],
        "summary": "get test timeseries data for a verification job and risk analysis",
        "description": "",
        "operationId": "getTimeSeriesRecords",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesRecordDTO"
            }
          }
        }
      }
    },
    "/timeseries-analysis/timeseries-serviceguard-previous-anomalies": {
      "get": {
        "tags": ["timeseries-analysis"],
        "summary": "get previous anomalies for a data source config",
        "description": "",
        "operationId": "getPreviousAnomalies",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseMapStringMapStringListTimeSeriesAnomalies"
            }
          }
        }
      }
    },
    "/timeseries-analysis/timeseries-serviceguard-save-analysis": {
      "post": {
        "tags": ["timeseries-analysis"],
        "summary": "save time series analysis for a data source config",
        "description": "",
        "operationId": "saveServiceGuardTimeseriesAnalysis",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceGuardTimeSeriesAnalysisDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/timeseries-analysis/timeseries-verification-task-save-analysis": {
      "post": {
        "tags": ["timeseries-analysis"],
        "summary": "save time series analysis for a deployment verification",
        "description": "",
        "operationId": "saveVerificationTaskAnalysis",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DeploymentTimeSeriesAnalysisDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/trend-analysis/trend-metric-template": {
      "get": {
        "tags": ["trend-analysis"],
        "summary": "get metric template for analysis",
        "description": "",
        "operationId": "getMetricTimeSeriesTemplateForTrend",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesMetricDefinition"
            }
          }
        }
      }
    },
    "/trend-analysis/service-guard-trend-test-data": {
      "get": {
        "tags": ["trend-analysis"],
        "summary": "save time series data for trend analysis",
        "description": "",
        "operationId": "getTestDataForTrend",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "verificationTaskId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "analysisEndTime",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesRecordDTO"
            }
          }
        }
      }
    },
    "/trend-analysis/service-guard-trend-save-analysis": {
      "post": {
        "tags": ["trend-analysis"],
        "summary": "save time series analysis",
        "description": "",
        "operationId": "saveServiceGuardTrendAnalysis",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceGuardTimeSeriesAnalysisDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/verify-step/{verifyStepExecutionId}/deployment-timeseries-data": {
      "get": {
        "tags": ["verify-step"],
        "summary": "get metrics for given activity",
        "description": "",
        "operationId": "getVerifyStepDeploymentMetrics",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "verifyStepExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "healthSources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "anomalousMetricsOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "hostName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseTransactionMetricInfoSummaryPageDTO"
            }
          }
        }
      }
    },
    "/verify-step/{verifyStepExecutionId}/deployment-activity-summary": {
      "get": {
        "tags": ["verify-step"],
        "summary": "get summary of deployment activity",
        "description": "",
        "operationId": "getVerifyStepDeploymentActivitySummary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "verifyStepExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseDeploymentActivitySummaryDTO"
            }
          }
        }
      }
    },
    "/verify-step/{verifyStepExecutionId}/healthSources": {
      "get": {
        "tags": ["verify-step"],
        "summary": "get health sources  for an activity",
        "description": "",
        "operationId": "getVerifyStepHealthSources",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "verifyStepExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseSetHealthSourceDTO"
            }
          }
        }
      }
    },
    "/verify-step/{verifyStepExecutionId}/clusters": {
      "get": {
        "tags": ["verify-step"],
        "summary": "get logs for given activity",
        "description": "",
        "operationId": "getVerifyStepDeploymentLogAnalysisClusters",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "verifyStepExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "healthSources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "clusterTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["KNOWN_EVENT", "UNKNOWN_EVENT", "UNEXPECTED_FREQUENCY"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hostName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLogAnalysisClusterChartDTO"
            }
          }
        }
      }
    },
    "/verify-step/{verifyStepExecutionId}/deployment-log-analysis-data": {
      "get": {
        "tags": ["verify-step"],
        "summary": "get logs for given activity",
        "description": "",
        "operationId": "getVerifyStepDeploymentLogAnalysisResult",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "verifyStepExecutionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "healthSources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "clusterTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["KNOWN_EVENT", "UNKNOWN_EVENT", "UNEXPECTED_FREQUENCY"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hostName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageLogAnalysisClusterDTO"
            }
          }
        }
      }
    },
    "/verify-step/input-set-template": {
      "post": {
        "tags": ["verify-step"],
        "summary": "Given a template Add verify step to it if required",
        "description": "",
        "operationId": "inputSetTemplate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/InputSetTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseInputSetTemplateResponse"
            }
          }
        }
      }
    },
    "/appdynamics/metric-data": {
      "get": {
        "tags": ["appdynamics"],
        "summary": "get all appdynamics metric data for an application and a metric path",
        "description": "",
        "operationId": "getAppdynamicsMetricDataByPath",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseFolder",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "metricPath",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseAppdynamicsMetricDataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["appdynamics"],
        "summary": "get metric data for given metric packs",
        "description": "",
        "operationId": "getAppdynamicsMetricData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tierName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestGuid",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricPackDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseSetAppdynamicsValidationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appdynamics/applications": {
      "get": {
        "tags": ["appdynamics"],
        "summary": "get all appdynamics applications",
        "description": "",
        "operationId": "getAppdynamicsApplications",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageAppDynamicsApplication"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appdynamics/tiers": {
      "get": {
        "tags": ["appdynamics"],
        "summary": "get all appdynamics tiers for an application",
        "description": "",
        "operationId": "getAppdynamicsTiers",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageAppDynamicsTier"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appdynamics/base-folders": {
      "get": {
        "tags": ["appdynamics"],
        "summary": "get all appdynamics base folders for an application",
        "description": "",
        "operationId": "getAppdynamicsBaseFolders",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appdynamics/metric-structure": {
      "get": {
        "tags": ["appdynamics"],
        "summary": "get all appdynamics metric structure for an application",
        "description": "",
        "operationId": "getAppdynamicsMetricStructure",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseFolder",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "metricPath",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListAppDynamicsFileDefinition"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/appdynamics/service-instance-metric-path": {
      "get": {
        "tags": ["appdynamics"],
        "summary": "get service instance metric path for an application and a metric path",
        "description": "",
        "operationId": "getServiceInstanceMetricPath",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseFolder",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "metricPath",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cv-config/datasource-types": {
      "get": {
        "tags": ["cv-config"],
        "summary": "gets a list of datasource types for this filter",
        "description": "",
        "operationId": "getDataSourcetypes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitoringCategory",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PERFORMANCE", "ERRORS", "INFRASTRUCTURE"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseSetDatasourceTypeDTO"
            }
          }
        }
      }
    },
    "/cv-config/product-names": {
      "get": {
        "tags": ["cv-config"],
        "summary": "gets a list of supported products",
        "description": "",
        "operationId": "getProductNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      }
    },
    "/cvng-log": {
      "get": {
        "tags": ["cvng-log"],
        "summary": "gets onboarding api call logs",
        "description": "",
        "operationId": "getOnboardingLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "traceableId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageCVNGLogDTO"
            }
          }
        }
      },
      "post": {
        "tags": ["cvng-log"],
        "summary": "saves cvng log data",
        "description": "",
        "operationId": "saveCVNGLogRecords",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CVNGLogDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/partial-yaml-schema/step": {
      "get": {
        "tags": ["partial-yaml-schema"],
        "summary": "Get step YAML schema",
        "description": "",
        "operationId": "getStepYamlSchema",
        "consumes": ["application/json", "text/yaml", "text/html", "text/plain"],
        "produces": ["application/json", "text/yaml", "text/html", "text/plain"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Projects",
              "Pipelines",
              "PipelineSteps",
              "Http",
              "JiraCreate",
              "ShellScript",
              "K8sCanaryDeploy",
              "Connectors",
              "Secrets",
              "Service",
              "Environment",
              "InputSets",
              "CvConfig",
              "Delegates",
              "DelegateConfigurations",
              "CvVerificationJob",
              "IntegrationStage",
              "IntegrationSteps",
              "CvKubernetesActivitySource",
              "DeploymentSteps",
              "DeploymentStage",
              "ApprovalStage",
              "FeatureFlagStage",
              "Template",
              "Triggers",
              "MonitoredService",
              "GitRepositories",
              "FeatureFlags",
              "ServiceNowApproval"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseJsonNode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/partial-yaml-schema": {
      "get": {
        "tags": ["partial-yaml-schema"],
        "summary": "Get Partial Yaml Schema",
        "description": "",
        "operationId": "getPartialYamlSchema",
        "consumes": ["application/json", "text/yaml", "text/html", "text/plain"],
        "produces": ["application/json", "text/yaml", "text/html", "text/plain"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["account", "org", "project", "unknown"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePartialSchemaDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/partial-yaml-schema/details": {
      "get": {
        "tags": ["partial-yaml-schema"],
        "summary": "Get Partial Yaml Schema with details",
        "description": "",
        "operationId": "getPartialYamlSchemaWithDetails",
        "consumes": ["application/json", "text/yaml", "text/html", "text/plain"],
        "produces": ["application/json", "text/yaml", "text/html", "text/plain"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["account", "org", "project", "unknown"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseYamlSchemaDetailsWrapper"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/partial-yaml-schema/merged": {
      "post": {
        "tags": ["partial-yaml-schema"],
        "summary": "Get Merged Partial Yaml Schema",
        "description": "",
        "operationId": "getMergedPartialYamlSchema",
        "consumes": ["application/json", "text/yaml", "text/html", "text/plain"],
        "produces": ["application/json", "text/yaml", "text/html", "text/plain"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["account", "org", "project", "unknown"]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/YamlSchemaDetailsWrapper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePartialSchemaDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/account/{accountIdentifier}/org/{orgIdentifier}/project/{projectIdentifier}/change-event": {
      "get": {
        "tags": ["change-event"],
        "summary": "get ChangeEvent List",
        "description": "",
        "operationId": "changeEventList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "envIdentifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "changeCategories",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Deployment", "Infrastructure", "Alert"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "changeSourceTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["HarnessCDNextGen", "PagerDuty", "K8sCluster", "HarnessCD"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "format": "int32"
          },
          {
            "name": "sortOrders",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageChangeEventDTO"
            }
          }
        }
      }
    },
    "/account/{accountIdentifier}/org/{orgIdentifier}/project/{projectIdentifier}/change-event/summary": {
      "get": {
        "tags": ["change-event"],
        "summary": "get ChangeEvent summary",
        "description": "",
        "operationId": "changeEventSummary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "envIdentifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "changeCategories",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Deployment", "Infrastructure", "Alert"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "changeSourceTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["HarnessCDNextGen", "PagerDuty", "K8sCluster", "HarnessCD"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseChangeSummaryDTO"
            }
          }
        }
      }
    },
    "/account/{accountIdentifier}/org/{orgIdentifier}/project/{projectIdentifier}/change-event/timeline": {
      "get": {
        "tags": ["change-event"],
        "summary": "get ChangeEvent timeline",
        "description": "",
        "operationId": "changeEventTimeline",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "envIdentifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "changeCategories",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Deployment", "Infrastructure", "Alert"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "changeSourceTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["HarnessCDNextGen", "PagerDuty", "K8sCluster", "HarnessCD"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "pointCount",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 48,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseChangeTimeline"
            }
          }
        }
      }
    },
    "/account/{accountIdentifier}/org/{orgIdentifier}/project/{projectIdentifier}/change-event/register": {
      "post": {
        "tags": ["change-event"],
        "summary": "register a ChangeEvent",
        "description": "",
        "operationId": "registerChangeEvent",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ChangeEventDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/change-event/register-change": {
      "post": {
        "tags": ["change-event"],
        "summary": "register a ChangeEvent",
        "description": "",
        "operationId": "registerChangeEventFromDelegate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ChangeEventDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/account/{accountIdentifier}/org/{orgIdentifier}/project/{projectIdentifier}/change-event/{activityId}": {
      "get": {
        "tags": ["change-event"],
        "summary": "get ChangeEvent detail",
        "description": "",
        "operationId": "getChangeEventDetail",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseChangeEventDTO"
            }
          }
        }
      }
    },
    "/demo/register-event": {
      "post": {
        "tags": ["demo"],
        "summary": "register a ChangeEvent",
        "description": "",
        "operationId": "registerChangeEventDemo",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DemoChangeEventDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/custom-health/sample-data": {
      "post": {
        "tags": ["customhealth"],
        "summary": "get sample data",
        "description": "",
        "operationId": "fetchSampleData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CustomHealthSampleDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseObject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/delegate-data-collection": {
      "post": {
        "tags": ["delegate-data-collection"],
        "summary": "save time series records",
        "description": "",
        "operationId": "saveTimeSeriesData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeSeriesDataCollectionRecord"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/delegate-data-collection-task/next-task": {
      "get": {
        "tags": ["delegate-data-collection-task"],
        "summary": "gets next task for data collection",
        "description": "",
        "operationId": "getNextDataCollectionTask",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataCollectionWorkerId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseOptionalDataCollectionTaskDTO"
            }
          }
        }
      }
    },
    "/delegate-data-collection-task/update-status": {
      "post": {
        "tags": ["delegate-data-collection-task"],
        "summary": "updates status for data collection task",
        "description": "",
        "operationId": "updateDataCollectionTask",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataCollectionTaskResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/delegate-data-collection-task/next-tasks": {
      "get": {
        "tags": ["delegate-data-collection-task"],
        "summary": "gets next tasks for data collection",
        "description": "",
        "operationId": "getNextDataCollectionTasks",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataCollectionWorkerId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListDataCollectionTaskDTO"
            }
          }
        }
      }
    },
    "/datadog-logs/sample-data": {
      "post": {
        "tags": ["datadog-logs"],
        "summary": "get sample data for a query",
        "description": "",
        "operationId": "getDatadogLogSampleData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LogSampleRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListLinkedHashMap"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datadog-logs/log-indexes": {
      "get": {
        "tags": ["datadog-logs"],
        "summary": "get datadog log indexes",
        "description": "",
        "operationId": "getDatadogLogIndexes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datadog-metrics/sample-data": {
      "get": {
        "tags": ["datadog-metrics"],
        "summary": "get datadog sample data",
        "description": "",
        "operationId": "getDatadogSampleData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListTimeSeriesSampleDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datadog-metrics/dashboards": {
      "get": {
        "tags": ["datadog-metrics"],
        "summary": "get all datadog dashboards",
        "description": "",
        "operationId": "getDatadogDashboards",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageDatadogDashboardDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datadog-metrics/dashboard-details": {
      "get": {
        "tags": ["datadog-metrics"],
        "summary": "get datadog dashboard details",
        "description": "",
        "operationId": "getDatadogDashboardDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "dashboardId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListDatadogDashboardDetail"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datadog-metrics/active-metrics": {
      "get": {
        "tags": ["datadog-metrics"],
        "summary": "get datadog active metrics",
        "description": "",
        "operationId": "getDatadogActiveMetrics",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/datadog-metrics/metric-tags": {
      "get": {
        "tags": ["datadog-metrics"],
        "summary": "get datadog metric tag list",
        "description": "",
        "operationId": "getDatadogMetricTagsList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "metric",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "get health for CVNG service",
        "description": "",
        "operationId": "getCvHealthStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/host-record": {
      "post": {
        "tags": ["host-record"],
        "summary": "saves hosts collected while doing canary verification",
        "description": "",
        "operationId": "saveVerificationHostRecords",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HostRecordDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/log-record": {
      "post": {
        "tags": ["log-record"],
        "summary": "saves log data collected for verification",
        "description": "",
        "operationId": "saveLogRecords",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LogRecordDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/metric-pack": {
      "get": {
        "tags": ["metric-pack"],
        "summary": "get all metric packs for a connector type",
        "description": "",
        "operationId": "getMetricPacks",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSourceType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "APP_DYNAMICS",
              "SPLUNK",
              "STACKDRIVER",
              "STACKDRIVER_LOG",
              "KUBERNETES",
              "NEW_RELIC",
              "PROMETHEUS",
              "DATADOG_METRICS",
              "DATADOG_LOG",
              "CUSTOM_HEALTH"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListMetricPackDTO"
            }
          }
        }
      },
      "post": {
        "tags": ["metric-pack"],
        "summary": "saves a metric pack for a connector type",
        "description": "",
        "operationId": "saveMetricPacks",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSourceType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "APP_DYNAMICS",
              "SPLUNK",
              "STACKDRIVER",
              "STACKDRIVER_LOG",
              "KUBERNETES",
              "NEW_RELIC",
              "PROMETHEUS",
              "DATADOG_METRICS",
              "DATADOG_LOG",
              "CUSTOM_HEALTH"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricPack"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/metric-pack/thresholds": {
      "get": {
        "tags": ["metric-pack"],
        "summary": "get custom thresholds for a given metric pack",
        "description": "",
        "operationId": "getMetricPackThresholds",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "metricPackIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSourceType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "APP_DYNAMICS",
              "SPLUNK",
              "STACKDRIVER",
              "STACKDRIVER_LOG",
              "KUBERNETES",
              "NEW_RELIC",
              "PROMETHEUS",
              "DATADOG_METRICS",
              "DATADOG_LOG",
              "CUSTOM_HEALTH"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesThreshold"
            }
          }
        }
      },
      "post": {
        "tags": ["metric-pack"],
        "summary": "saves custom thresholds for a given metric pack",
        "description": "",
        "operationId": "saveMetricPackThresholds",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSourceType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "APP_DYNAMICS",
              "SPLUNK",
              "STACKDRIVER",
              "STACKDRIVER_LOG",
              "KUBERNETES",
              "NEW_RELIC",
              "PROMETHEUS",
              "DATADOG_METRICS",
              "DATADOG_LOG",
              "CUSTOM_HEALTH"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeSeriesThreshold"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListString"
            }
          }
        }
      },
      "delete": {
        "tags": ["metric-pack"],
        "summary": "deletes custom thresholds for a given metric pack",
        "description": "",
        "operationId": "deleteMetricPackThresholds",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "thresholdId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/monitored-service/{identifier}/change-event/summary": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get ChangeEvent summary",
        "description": "",
        "operationId": "getChangeSummary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseChangeSummaryDTO"
            }
          }
        }
      }
    },
    "/monitored-service/{identifier}": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get monitored service data ",
        "description": "",
        "operationId": "getMonitoredService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseMonitoredServiceResponse"
            }
          }
        }
      },
      "put": {
        "tags": ["monitored-service"],
        "summary": "updates monitored service data",
        "description": "",
        "operationId": "updateMonitoredService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MonitoredServiceDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseMonitoredServiceResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["monitored-service"],
        "summary": "delete monitored service data ",
        "description": "",
        "operationId": "deleteMonitoredService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/monitored-service/{identifier}/change-event": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get ChangeEvent List",
        "description": "",
        "operationId": "getChangeEventList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "changeCategories",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Deployment", "Infrastructure", "Alert"]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListChangeEventDTO"
            }
          }
        }
      }
    },
    "/monitored-service": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "list monitored service data ",
        "description": "",
        "operationId": "listMonitoredService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "servicesAtRiskFilter",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageMonitoredServiceListItemDTO"
            }
          }
        }
      },
      "post": {
        "tags": ["monitored-service"],
        "summary": "saves monitored service data",
        "description": "",
        "operationId": "saveMonitoredService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/MonitoredServiceDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseMonitoredServiceResponse"
            }
          }
        }
      }
    },
    "/monitored-service/list": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get list of monitored service data ",
        "description": "",
        "operationId": "getMonitoredServiceList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageMonitoredServiceResponse"
            }
          }
        }
      }
    },
    "/monitored-service/overall-health-score": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get monitored service overall health score data using service and environment identifiers",
        "description": "",
        "operationId": "getMonitoredServiceOverAllHealthScoreWithServiceAndEnv",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["FOUR_HOURS", "TWENTY_FOUR_HOURS", "THREE_DAYS", "SEVEN_DAYS", "THIRTY_DAYS"]
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseHistoricalTrend"
            }
          }
        }
      }
    },
    "/monitored-service/{identifier}/overall-health-score": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get monitored service overall health score data ",
        "description": "",
        "operationId": "getMonitoredServiceOverAllHealthScore",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["FOUR_HOURS", "TWENTY_FOUR_HOURS", "THREE_DAYS", "SEVEN_DAYS", "THIRTY_DAYS"]
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseHistoricalTrend"
            }
          }
        }
      }
    },
    "/monitored-service/health-sources": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get all health sources for service and environment",
        "description": "",
        "operationId": "getAllHealthSourcesForServiceAndEnvironment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListHealthSourceDTO"
            }
          }
        }
      }
    },
    "/monitored-service/create-default": {
      "post": {
        "tags": ["monitored-service"],
        "summary": "created default monitored service",
        "description": "",
        "operationId": "createDefaultMonitoredService",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseMonitoredServiceResponse"
            }
          }
        }
      }
    },
    "/monitored-service/all/time-series-health-sources": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get all of monitored service data with time series health sources ",
        "description": "",
        "operationId": "getAllMonitoredServicesWithTimeSeriesHealthSources",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListMonitoredServiceWithHealthSources"
            }
          }
        }
      }
    },
    "/monitored-service/service-environment": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get monitored service data from service and env ref",
        "description": "",
        "operationId": "getMonitoredServiceFromServiceAndEnvironment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseMonitoredServiceResponse"
            }
          }
        }
      }
    },
    "/monitored-service/scores": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get monitored service scores from service and env ref",
        "description": "",
        "operationId": "getMonitoredServiceScoresFromServiceAndEnvironment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseHealthScoreDTO"
            }
          }
        }
      }
    },
    "/monitored-service/environments": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get monitored service list environments data ",
        "description": "",
        "operationId": "getMonitoredServiceListEnvironments",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListEnvironmentResponse"
            }
          }
        }
      }
    },
    "/monitored-service/yaml-template": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "yaml template for monitored service",
        "description": "",
        "operationId": "getMonitoredServiceYamlTemplate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["Application", "Infrastructure"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/monitored-service/{identifier}/anomaliesCount": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get anomalies summary details",
        "description": "",
        "operationId": "getAnomaliesSummary",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseAnomaliesSummaryDTO"
            }
          }
        }
      }
    },
    "/monitored-service/count-of-services": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get count of types of services like Monitored Service, Services at Risk ",
        "description": "",
        "operationId": "getCountOfServices",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CountServiceDTO"
            }
          }
        }
      }
    },
    "/monitored-service/{monitoredServiceIdentifier}/health-source/{healthSourceIdentifier}/slo-metrics": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get slo metrics in a healthSource ",
        "description": "",
        "operationId": "getSloMetrcs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitoredServiceIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "healthSourceIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListMetricDTO"
            }
          }
        }
      }
    },
    "/monitored-service/service-details": {
      "get": {
        "tags": ["monitored-service"],
        "summary": "get details of a monitored service present in the Service Dependency Graph",
        "description": "",
        "operationId": "getMonitoredServiceDetails",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MonitoredServiceListItemDTO"
            }
          }
        }
      }
    },
    "/monitored-service/{identifier}/health-monitoring-flag": {
      "put": {
        "tags": ["monitored-service"],
        "summary": "updates monitored service data",
        "description": "",
        "operationId": "setHealthMonitoringFlag",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enable",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseHealthMonitoringFlagResponse"
            }
          }
        }
      }
    },
    "/newrelic/endpoints": {
      "get": {
        "tags": ["newrelic"],
        "summary": "get all newrelic endpoints",
        "description": "",
        "operationId": "getNewRelicEndPoints",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/newrelic/metric-data": {
      "post": {
        "tags": ["newrelic"],
        "summary": "get metric data for given metric packs",
        "description": "",
        "operationId": "getNewRelicMetricData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "appId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestGuid",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricPackDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseMetricPackValidationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/newrelic/fetch-sample-data": {
      "get": {
        "tags": ["newrelic"],
        "summary": "get sample data for given nrql",
        "description": "",
        "operationId": "getSampleDataForNRQL",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestGuid",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "nrql",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseLinkedHashMap"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/newrelic/applications": {
      "get": {
        "tags": ["newrelic"],
        "summary": "get all newrelic applications",
        "description": "",
        "operationId": "getNewRelicApplications",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListNewRelicApplication"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/onboarding": {
      "post": {
        "tags": ["onboarding"],
        "summary": "onboarding api response",
        "description": "",
        "operationId": "getOnboardingResponse",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OnboardingRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseOnboardingResponseDTO"
            }
          }
        }
      }
    },
    "/onboarding/connector": {
      "get": {
        "tags": ["onboarding"],
        "summary": "connector api response",
        "description": "",
        "operationId": "validateConnector",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "dataSourceType",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "APP_DYNAMICS",
              "SPLUNK",
              "STACKDRIVER",
              "STACKDRIVER_LOG",
              "KUBERNETES",
              "NEW_RELIC",
              "PROMETHEUS",
              "DATADOG_METRICS",
              "DATADOG_LOG",
              "CUSTOM_HEALTH"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseVoid"
            }
          }
        }
      }
    },
    "/pagerduty/services": {
      "get": {
        "tags": ["pagerduty"],
        "summary": "gets services from PagerDuty",
        "description": "",
        "operationId": "getServicesFromPagerDuty",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "requestGuid",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListPagerDutyServiceDetail"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/parse-sample-data": {
      "post": {
        "tags": ["parseSampleDara"],
        "summary": "parse sample data for given json response",
        "description": "",
        "operationId": "fetchParsedSampleData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SampleDataDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListTimeSeriesSampleDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/prometheus/label-values": {
      "get": {
        "tags": ["prometheus"],
        "summary": "get all label values",
        "description": "",
        "operationId": "getLabeValues",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "labelName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/prometheus/label-names": {
      "get": {
        "tags": ["prometheus"],
        "summary": "get all label names",
        "description": "",
        "operationId": "getLabelNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/prometheus/sample-data": {
      "get": {
        "tags": ["prometheus"],
        "summary": "get sample data",
        "description": "",
        "operationId": "getSampleData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListPrometheusSampleData"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/prometheus/metric-list": {
      "get": {
        "tags": ["prometheus"],
        "summary": "get all metric names",
        "description": "",
        "operationId": "getMetricNames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/monitored-service/{monitoredServiceIdentifier}/sli/onboarding-graph": {
      "post": {
        "tags": ["monitored-servicesli"],
        "summary": "get Sli graph for onboarding UI",
        "description": "",
        "operationId": "getSliGraph",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitoredServiceIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceLevelIndicatorDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseTimeGraphResponse"
            }
          }
        },
        "deprecated": true
      }
    },
    "/monitored-service/{monitoredServiceIdentifier}/sli/onboarding-graphs": {
      "post": {
        "tags": ["monitored-servicesli"],
        "summary": "get Sli and mertric graphs for onboarding UI",
        "description": "",
        "operationId": "getSliOnboardingGraphs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitoredServiceIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceLevelIndicatorDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseSLIOnboardingGraphs"
            }
          }
        }
      }
    },
    "/splunk/saved-searches": {
      "get": {
        "tags": ["splunk"],
        "summary": "gets saved searches in splunk",
        "description": "",
        "operationId": "getSplunkSavedSearches",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "requestGuid",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListSplunkSavedSearch"
            }
          }
        }
      }
    },
    "/splunk/latest-histogram": {
      "get": {
        "tags": ["splunk"],
        "summary": "get latest histogram for the query",
        "description": "",
        "operationId": "getSplunkLatestHistogram",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestGuid",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLinkedHashMap"
            }
          }
        }
      }
    },
    "/splunk/sample-data": {
      "get": {
        "tags": ["splunk"],
        "summary": "validates given setting for splunk data source",
        "description": "",
        "operationId": "getSplunkSampleData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "query",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "requestGuid",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLinkedHashMap"
            }
          }
        }
      }
    },
    "/stackdriver-log/sample-data": {
      "post": {
        "tags": ["stackdriver-log"],
        "summary": "get sample data for a query",
        "description": "",
        "operationId": "getStackdriverLogSampleData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LogSampleRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListLinkedHashMap"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/stackdriver/dashboards": {
      "get": {
        "tags": ["stackdriver"],
        "summary": "get all stackdriver dashboards",
        "description": "",
        "operationId": "getStackdriverDashboards",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageStackdriverDashboardDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/stackdriver/dashboard-detail": {
      "get": {
        "tags": ["stackdriver"],
        "summary": "get details about one dashboard",
        "description": "",
        "operationId": "getStackdriverDashboardDetail",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListStackdriverDashboardDetail"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/stackdriver/sample-data": {
      "post": {
        "tags": ["stackdriver"],
        "summary": "get sample data for one metric",
        "description": "",
        "operationId": "getStackdriverSampleData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "tracingId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseSetTimeSeriesSampleDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sumologic/endpoints": {
      "get": {
        "tags": ["sumologic"],
        "summary": "get all sumologic endpoints",
        "description": "",
        "operationId": "getSumoLogicEndPoints",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/timeseries/metric-template": {
      "get": {
        "tags": ["timeseries"],
        "summary": "get metric definition for a given data source config",
        "description": "",
        "operationId": "getMetricDefinitions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListTimeSeriesMetricDefinition"
            }
          }
        }
      }
    },
    "/timeseries/metric-group-data": {
      "get": {
        "tags": ["timeseries"],
        "summary": "get time series data for a given data source config",
        "description": "",
        "operationId": "getTimeSeriesData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTimeEpochMillis",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTimeEpochMillis",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "metricName",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupNameList",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseTimeSeriesTestDataDTO"
            }
          }
        }
      }
    },
    "/timeseries/anomalous-metric-data": {
      "get": {
        "tags": ["timeseries"],
        "summary": "get all anomalous metric timeseries data a given data source config",
        "description": "",
        "operationId": "getAnomalousMetricData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "cvConfigId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseTimeSeriesTestDataDTO"
            }
          }
        }
      }
    },
    "/webhook/pagerduty/{token}": {
      "post": {
        "tags": ["webhook"],
        "summary": "accepts a webhook request",
        "description": "",
        "operationId": "handleWebhookRequest",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PagerDutyWebhookEvent"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/heatmap": {
      "get": {
        "tags": ["heatmap"],
        "summary": "get heatmap for a time range",
        "description": "",
        "operationId": "getHeatMap",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTimeMs",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTimeMs",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseMapCVMonitoringCategorySortedSetHeatMapDTO"
            }
          }
        }
      }
    },
    "/heatmap/risk-summary-popover": {
      "get": {
        "tags": ["heatmap"],
        "summary": "get current risk summary",
        "description": "",
        "operationId": "getRiskSummaryPopover",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["PERFORMANCE", "ERRORS", "INFRASTRUCTURE"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseRiskSummaryPopoverDTO"
            }
          }
        }
      }
    },
    "/heatmap/category-risks": {
      "get": {
        "tags": ["heatmap"],
        "summary": "get current risk for all categories",
        "description": "",
        "operationId": "getCategoryRiskMap",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseCategoryRisksDTO"
            }
          }
        }
      }
    },
    "/heatmap/env-service-risks": {
      "get": {
        "tags": ["heatmap"],
        "summary": "get current risks for each env/service combination",
        "description": "",
        "operationId": "getEnvServiceRisks",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListEnvServiceRiskDTO"
            }
          }
        }
      }
    },
    "/log-dashboard/anomalous-logs": {
      "get": {
        "tags": ["log-dashboard"],
        "summary": "get anomalous logs for a time range",
        "description": "",
        "operationId": "getAnomalousLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitoringCategory",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageAnalyzedLogDataDTO"
            }
          }
        }
      }
    },
    "/log-dashboard/log-count-by-tags": {
      "get": {
        "tags": ["log-dashboard"],
        "summary": "get a sorted tag vs logs list",
        "description": "",
        "operationId": "getTagCount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitoringCategory",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseSortedSetLogDataByTag"
            }
          }
        }
      }
    },
    "/log-dashboard/{activityId}/log-count-by-tags": {
      "get": {
        "tags": ["log-dashboard"],
        "summary": "get a sorted tag vs logs list for an activity",
        "description": "",
        "operationId": "getTagCountForActivity",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseSortedSetLogDataByTag"
            }
          }
        }
      }
    },
    "/log-dashboard/logs-cluster": {
      "get": {
        "tags": ["log-dashboard"],
        "summary": "get all log cluster data for a time range",
        "description": "",
        "operationId": "getAllLogsClusterData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["KNOWN", "UNEXPECTED", "UNKNOWN"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "healthSources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListLiveMonitoringLogAnalysisClusterDTO"
            }
          }
        }
      }
    },
    "/log-dashboard/all-logs": {
      "get": {
        "tags": ["log-dashboard"],
        "summary": "get all logs for a time range",
        "description": "",
        "operationId": "getAllLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitoringCategory",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageAnalyzedLogDataDTO"
            }
          }
        }
      }
    },
    "/log-dashboard/{activityId}/logs": {
      "get": {
        "tags": ["log-dashboard"],
        "summary": "get activity logs for given activityId",
        "description": "",
        "operationId": "getActivityLogs",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "anomalousOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageAnalyzedLogDataDTO"
            }
          }
        }
      }
    },
    "/log-dashboard/logs-data": {
      "get": {
        "tags": ["log-dashboard"],
        "summary": "get all log data for a time range",
        "description": "",
        "operationId": "getAllLogsData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["KNOWN", "UNEXPECTED", "UNKNOWN"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "healthSources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageAnalyzedLogDataDTO"
            }
          }
        }
      }
    },
    "/service-dependency-graph": {
      "get": {
        "tags": ["service-dependency-graph"],
        "summary": "get service dependency graph",
        "description": "",
        "operationId": "getServiceDependencyGraph",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "envIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "servicesAtRiskFilter",
            "in": "query",
            "required": true,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseServiceDependencyGraphDTO"
            }
          }
        }
      }
    },
    "/timeseries-dashboard/{activityId}/metrics": {
      "get": {
        "tags": ["timeseries-dashboard"],
        "summary": "get activity metrics for given activityId",
        "description": "",
        "operationId": "getActivityMetrics",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "anomalousOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "activityId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageTimeSeriesMetricDataDTO"
            }
          }
        }
      }
    },
    "/timeseries-dashboard/metrics": {
      "get": {
        "tags": ["timeseries-dashboard"],
        "summary": "get all time series data in a given time range",
        "description": "",
        "operationId": "getTimeSeriesMetricData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "anomalous",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "healthSources",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageTimeSeriesMetricDataDTO"
            }
          }
        }
      }
    },
    "/timeseries-dashboard/metric-data": {
      "get": {
        "tags": ["timeseries-dashboard"],
        "summary": "get all time series data in a given time range",
        "description": "",
        "operationId": "getMetricData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitoringCategory",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "datasourceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "APP_DYNAMICS",
              "SPLUNK",
              "STACKDRIVER",
              "STACKDRIVER_LOG",
              "KUBERNETES",
              "NEW_RELIC",
              "PROMETHEUS",
              "DATADOG_METRICS",
              "DATADOG_LOG",
              "CUSTOM_HEALTH"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageTimeSeriesMetricDataDTO"
            }
          }
        }
      }
    },
    "/timeseries-dashboard/anomalous-metric-data": {
      "get": {
        "tags": ["timeseries-dashboard"],
        "summary": "get anomalous time series data in a given time range",
        "description": "",
        "operationId": "getAnomalousMetricDashboardData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "serviceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "monitoringCategory",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "analysisStartTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "datasourceType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "APP_DYNAMICS",
              "SPLUNK",
              "STACKDRIVER",
              "STACKDRIVER_LOG",
              "KUBERNETES",
              "NEW_RELIC",
              "PROMETHEUS",
              "DATADOG_METRICS",
              "DATADOG_LOG",
              "CUSTOM_HEALTH"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponsePageTimeSeriesMetricDataDTO"
            }
          }
        }
      }
    },
    "/slo-dashboard/widgets": {
      "get": {
        "tags": ["slo-dashboard"],
        "summary": "get widget list",
        "description": "",
        "operationId": "getSLODashboardWidgets",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "userJourneyIdentifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "monitoredServiceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sliTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Availability", "Latency"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "targetTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Rolling", "Calender"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "errorBudgetRisks",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY", "EXHAUSTED"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageSLODashboardWidget"
            }
          }
        }
      }
    },
    "/slo-dashboard/risk-count": {
      "get": {
        "tags": ["slo-dashboard"],
        "summary": "get all service level objectives count by risk",
        "description": "",
        "operationId": "getServiceLevelObjectivesRiskCount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "userJourneyIdentifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "monitoredServiceIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sliTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Availability", "Latency"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "targetTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Rolling", "Calender"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "errorBudgetRisks",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY", "EXHAUSTED"]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseSLORiskCountResponse"
            }
          }
        }
      }
    },
    "/slo": {
      "get": {
        "tags": ["slo"],
        "summary": "get all service level objectives ",
        "description": "",
        "operationId": "getServiceLevelObjectives",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userJourneys",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "identifiers",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sliTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Availability", "Latency"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "targetTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["Rolling", "Calender"]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "errorBudgetRisks",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY", "EXHAUSTED"]
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageServiceLevelObjectiveResponse"
            }
          }
        }
      },
      "post": {
        "tags": ["slo"],
        "summary": "saves slo data",
        "description": "",
        "operationId": "saveSLOData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceLevelObjectiveDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseServiceLevelObjectiveResponse"
            }
          }
        }
      }
    },
    "/slo/{identifier}": {
      "get": {
        "tags": ["slo"],
        "summary": "get service level objective data",
        "description": "",
        "operationId": "getServiceLevelObjective",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseServiceLevelObjectiveResponse"
            }
          }
        }
      },
      "put": {
        "tags": ["slo"],
        "summary": "update slo data",
        "description": "",
        "operationId": "updateSLOData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ServiceLevelObjectiveDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseServiceLevelObjectiveResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["slo"],
        "summary": "delete slo data",
        "description": "",
        "operationId": "deleteSLOData",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      }
    },
    "/user-journey/create": {
      "post": {
        "tags": ["user-journey"],
        "summary": "saves user journey",
        "description": "",
        "operationId": "saveUserJourney",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserJourneyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseUserJourneyResponse"
            }
          }
        }
      }
    },
    "/user-journey": {
      "get": {
        "tags": ["user-journey"],
        "summary": "get all user journeys",
        "description": "",
        "operationId": "getAllJourneys",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageUserJourneyResponse"
            }
          }
        }
      }
    },
    "/deployment-time-series-analysis/{verificationJobInstanceId}": {
      "get": {
        "tags": ["deployment-time-series-analysis"],
        "summary": "get metrics for given verificationJob",
        "description": "",
        "operationId": "getMetrics",
        "produces": ["application/json", "application/v1+json"],
        "parameters": [
          {
            "name": "verificationJobInstanceId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "anomalousMetricsOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hostName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseTransactionMetricInfoSummaryPageDTO"
            }
          }
        }
      }
    },
    "/verification-job-instance/baseline-executions": {
      "get": {
        "tags": ["verification-job-instance"],
        "summary": "list of last 5 successful baseline executions",
        "description": "",
        "operationId": "listBaselineExecutions",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "verificationJobIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListTestVerificationBaselineExecutionDTO"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "HostData": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "controlData": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "testData": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "anomalous": {
          "type": "boolean"
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "PageTransactionMetricInfo": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionMetricInfo"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponseMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION"
          ]
        },
        "level": {
          "type": "string",
          "enum": ["INFO", "ERROR"]
        },
        "message": {
          "type": "string"
        },
        "exception": {
          "$ref": "#/definitions/Throwable"
        },
        "failureTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EXPIRED",
              "DELEGATE_PROVISIONING",
              "CONNECTIVITY",
              "AUTHENTICATION",
              "VERIFICATION_FAILURE",
              "APPLICATION_ERROR",
              "AUTHORIZATION_ERROR",
              "TIMEOUT_ERROR"
            ]
          }
        }
      }
    },
    "RestResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseTransactionMetricInfoSummaryPageDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TransactionMetricInfoSummaryPageDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean"
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "TimeRange": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TransactionMetric": {
      "type": "object",
      "properties": {
        "transactionName": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        }
      }
    },
    "TransactionMetricInfo": {
      "type": "object",
      "properties": {
        "transactionMetric": {
          "$ref": "#/definitions/TransactionMetric"
        },
        "connectorName": {
          "type": "string"
        },
        "dataSourceType": {
          "type": "string",
          "enum": [
            "APP_DYNAMICS",
            "SPLUNK",
            "STACKDRIVER",
            "STACKDRIVER_LOG",
            "KUBERNETES",
            "NEW_RELIC",
            "PROMETHEUS",
            "DATADOG_METRICS",
            "DATADOG_LOG",
            "CUSTOM_HEALTH"
          ]
        },
        "nodes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HostData"
          }
        }
      }
    },
    "TransactionMetricInfoSummaryPageDTO": {
      "type": "object",
      "properties": {
        "pageResponse": {
          "$ref": "#/definitions/PageTransactionMetricInfo"
        },
        "deploymentTimeRange": {
          "$ref": "#/definitions/TimeRange"
        },
        "deploymentStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "deploymentEndTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AdditionalInfo": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["TEST", "CANARY", "BLUE_GREEN", "HEALTH"]
        }
      }
    },
    "DeploymentActivitySummaryDTO": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "serviceIdentifier": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "envIdentifier": {
          "type": "string"
        },
        "deploymentTag": {
          "type": "string"
        },
        "deploymentVerificationJobInstanceSummary": {
          "$ref": "#/definitions/DeploymentVerificationJobInstanceSummary"
        }
      }
    },
    "DeploymentVerificationJobInstanceSummary": {
      "type": "object",
      "properties": {
        "progressPercentage": {
          "type": "integer",
          "format": "int32"
        },
        "remainingTimeMs": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "durationMs": {
          "type": "integer",
          "format": "int64"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "environmentName": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "verificationJobInstanceId": {
          "type": "string"
        },
        "activityId": {
          "type": "string"
        },
        "activityStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "IGNORED",
            "NOT_STARTED",
            "VERIFICATION_PASSED",
            "VERIFICATION_FAILED",
            "ERROR",
            "ABORTED",
            "IN_PROGRESS"
          ]
        },
        "additionalInfo": {
          "$ref": "#/definitions/AdditionalInfo"
        },
        "timeSeriesAnalysisSummary": {
          "$ref": "#/definitions/TimeSeriesAnalysisSummary"
        },
        "logsAnalysisSummary": {
          "$ref": "#/definitions/LogsAnalysisSummary"
        }
      }
    },
    "LogsAnalysisSummary": {
      "type": "object",
      "properties": {
        "totalClusterCount": {
          "type": "integer",
          "format": "int32"
        },
        "anomalousClusterCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseDeploymentActivitySummaryDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DeploymentActivitySummaryDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesAnalysisSummary": {
      "type": "object",
      "properties": {
        "totalNumMetrics": {
          "type": "integer",
          "format": "int32"
        },
        "numAnomMetrics": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DatasourceTypeDTO": {
      "type": "object",
      "properties": {
        "dataSourceType": {
          "type": "string",
          "enum": [
            "APP_DYNAMICS",
            "SPLUNK",
            "STACKDRIVER",
            "STACKDRIVER_LOG",
            "KUBERNETES",
            "NEW_RELIC",
            "PROMETHEUS",
            "DATADOG_METRICS",
            "DATADOG_LOG",
            "CUSTOM_HEALTH"
          ]
        },
        "verificationType": {
          "type": "string",
          "enum": ["TIME_SERIES", "LOG"]
        }
      }
    },
    "RestResponseSetDatasourceTypeDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/DatasourceTypeDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HealthSourceDTO": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "APP_DYNAMICS",
            "SPLUNK",
            "STACKDRIVER",
            "STACKDRIVER_LOG",
            "KUBERNETES",
            "NEW_RELIC",
            "PROMETHEUS",
            "DATADOG_METRICS",
            "DATADOG_LOG",
            "CUSTOM_HEALTH"
          ]
        },
        "verificationType": {
          "type": "string",
          "enum": ["TIME_SERIES", "LOG"]
        }
      }
    },
    "RestResponseSetHealthSourceDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HealthSourceDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LogAnalysisClusterChartDTO": {
      "type": "object",
      "properties": {
        "label": {
          "type": "integer",
          "format": "int32"
        },
        "text": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "x": {
          "type": "number",
          "format": "double"
        },
        "y": {
          "type": "number",
          "format": "double"
        },
        "clusterType": {
          "type": "string",
          "enum": ["KNOWN_EVENT", "UNKNOWN_EVENT", "UNEXPECTED_FREQUENCY"]
        }
      }
    },
    "RestResponseListLogAnalysisClusterChartDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisClusterChartDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LogAnalysisClusterDTO": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "label": {
          "type": "integer",
          "format": "int32"
        },
        "clusterType": {
          "type": "string",
          "enum": ["KNOWN_EVENT", "UNKNOWN_EVENT", "UNEXPECTED_FREQUENCY"]
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "controlFrequencyData": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "testFrequencyData": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "PageLogAnalysisClusterDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisClusterDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageLogAnalysisClusterDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PageLogAnalysisClusterDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ActivityVerificationResultDTO": {
      "type": "object",
      "properties": {
        "activityType": {
          "type": "string",
          "enum": ["DEPLOYMENT", "CONFIG", "KUBERNETES", "HARNESS_CD", "PAGER_DUTY", "HARNESS_CD_CURRENT_GEN"]
        },
        "activityId": {
          "type": "string"
        },
        "activityName": {
          "type": "string"
        },
        "activityStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "environmentIdentifier": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "serviceIdentifier": {
          "type": "string"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "remainingTimeMs": {
          "type": "integer",
          "format": "int64"
        },
        "overallRisk": {
          "type": "integer",
          "format": "int32"
        },
        "preActivityRisks": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/CategoryRisk"
          }
        },
        "postActivityRisks": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/CategoryRisk"
          }
        },
        "progressPercentage": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "IGNORED",
            "NOT_STARTED",
            "VERIFICATION_PASSED",
            "VERIFICATION_FAILED",
            "ERROR",
            "ABORTED",
            "IN_PROGRESS"
          ]
        }
      }
    },
    "CategoryRisk": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "enum": ["PERFORMANCE", "ERRORS", "INFRASTRUCTURE"]
        },
        "risk": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseListActivityVerificationResultDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActivityVerificationResultDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseActivityVerificationResultDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ActivityVerificationResultDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "PageString": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponsePageString": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageString"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "Failure": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION"
          ]
        },
        "message": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION"
          ]
        },
        "message": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "detailedMessage": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        },
        "metadata": {
          "$ref": "#/definitions/ErrorMetadataDTO"
        }
      }
    },
    "ErrorMetadataDTO": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "SampleErrorMetadataDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "sampleMap": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "TemplateInputsErrorDTO": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "identifierOfErrorSource": {
          "type": "string"
        }
      }
    },
    "TemplateInputsErrorMetadataDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "errorYaml": {
              "type": "string"
            },
            "errorMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/TemplateInputsErrorDTO"
              }
            }
          }
        }
      ]
    },
    "ResponseBoolean": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "boolean"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RestResponseListActivityType": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["DEPLOYMENT", "CONFIG", "KUBERNETES", "HARNESS_CD", "PAGER_DUTY", "HARNESS_CD_CURRENT_GEN"]
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AlertCondition": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enabledVerifications": {
          "type": "boolean"
        },
        "verificationsNotify": {
          "$ref": "#/definitions/VerificationsNotify"
        },
        "enabledRisk": {
          "type": "boolean"
        },
        "notify": {
          "$ref": "#/definitions/RiskNotify"
        },
        "allServices": {
          "type": "boolean"
        },
        "allEnvironments": {
          "type": "boolean"
        }
      }
    },
    "AlertRuleDTO": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "alertCondition": {
          "$ref": "#/definitions/AlertCondition"
        },
        "notificationMethod": {
          "$ref": "#/definitions/NotificationMethod"
        },
        "identifier": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        }
      }
    },
    "NotificationMethod": {
      "type": "object",
      "properties": {
        "notificationSettingType": {
          "type": "string",
          "enum": ["Slack", "PagerDuty", "MicrosoftTeams", "Email"]
        },
        "slackWebhook": {
          "type": "string"
        },
        "slackChannelName": {
          "type": "string"
        },
        "pagerDutyKey": {
          "type": "string"
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RestResponseAlertRuleDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AlertRuleDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RiskNotify": {
      "type": "object",
      "properties": {
        "threshold": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "VerificationsNotify": {
      "type": "object",
      "properties": {
        "activityTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["DEPLOYMENT", "CONFIG", "KUBERNETES", "HARNESS_CD", "PAGER_DUTY", "HARNESS_CD_CURRENT_GEN"]
          }
        },
        "verificationStatuses": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["VERIFICATION_PASSED", "VERIFICATION_FAILED"]
          }
        },
        "allActivityTpe": {
          "type": "boolean"
        },
        "allVerificationStatuses": {
          "type": "boolean"
        }
      }
    },
    "PageAlertRuleDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertRuleDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageAlertRuleDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PageAlertRuleDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListTimeSeriesRiskSummary": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesRiskSummary"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesRiskSummary": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "analysisStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "transactionMetricRiskList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionMetricRisk"
          }
        },
        "overallRisk": {
          "type": "number",
          "format": "double"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TransactionMetricRisk": {
      "type": "object",
      "properties": {
        "transactionName": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "metricRisk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "metricScore": {
          "type": "number",
          "format": "double"
        },
        "longTermPattern": {
          "type": "boolean"
        },
        "lastSeenTime": {
          "type": "integer",
          "format": "int64"
        },
        "anomalous": {
          "type": "boolean"
        }
      }
    },
    "MetricSum": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "risk": {
          "type": "number",
          "format": "double"
        },
        "data": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RestResponseListTimeSeriesCumulativeSums": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesCumulativeSums"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesCumulativeSums": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "analysisStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "transactionMetricSums": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionMetricSums"
          }
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TransactionMetricSums": {
      "type": "object",
      "properties": {
        "transactionName": {
          "type": "string"
        },
        "metricSums": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSum"
          }
        }
      }
    },
    "MetricHistory": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "RestResponseTimeSeriesShortTermHistory": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TimeSeriesShortTermHistory"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesShortTermHistory": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "transactionMetricHistories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionMetricHistory"
          }
        },
        "compressedMetricHistories": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TransactionMetricHistory": {
      "type": "object",
      "properties": {
        "transactionName": {
          "type": "string"
        },
        "metricHistoryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricHistory"
          }
        }
      }
    },
    "LogAnalysisCluster": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "analysisStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int64"
        },
        "label": {
          "type": "integer",
          "format": "int64"
        },
        "frequencyTrend": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Frequency"
          }
        },
        "text": {
          "type": "string"
        },
        "firstSeenTime": {
          "type": "integer",
          "format": "int64"
        },
        "x": {
          "type": "number",
          "format": "double"
        },
        "y": {
          "type": "number",
          "format": "double"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "evicted": {
          "type": "boolean"
        }
      }
    },
    "LogAnalysisRecord": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "analysisStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "analysisSummaryMessage": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int64"
        },
        "unknownEvents": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LogAnalysisCluster"
            }
          }
        },
        "testEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisCluster"
          }
        },
        "controlEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisCluster"
          }
        },
        "controlClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisCluster"
          }
        },
        "unknownClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisCluster"
          }
        },
        "testClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisCluster"
          }
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MessageFrequency": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "oldLabel": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseListLogAnalysisRecord": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisRecord"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AnalysisResult": {
      "type": "object",
      "properties": {
        "label": {
          "type": "integer",
          "format": "int64"
        },
        "tag": {
          "type": "string",
          "enum": ["KNOWN", "UNEXPECTED", "UNKNOWN"]
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "riskScore": {
          "type": "number",
          "format": "double"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        }
      }
    },
    "LogAnalysisResult": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "analysisStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "overallRisk": {
          "type": "number",
          "format": "double"
        },
        "logAnalysisResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalysisResult"
          }
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RestResponseListLogAnalysisResult": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisResult"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ClusteredLog": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "clusterLevel": {
          "type": "string",
          "enum": ["L1", "L2"]
        },
        "log": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "host": {
          "type": "string"
        },
        "clusterLabel": {
          "type": "string"
        },
        "clusterCount": {
          "type": "integer",
          "format": "int32"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RestResponseListClusteredLog": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusteredLog"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseTimeSeriesAnomalousPatterns": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TimeSeriesAnomalousPatterns"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesAnomalies": {
      "type": "object",
      "properties": {
        "transactionName": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "testData": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "anomalousTimestamps": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "TimeSeriesAnomalousPatterns": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "anomalies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesAnomalies"
          }
        },
        "compressedAnomalies": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RestResponseBoolean": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "boolean"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ExceptionInfo": {
      "type": "object",
      "properties": {
        "stackTrace": {
          "type": "string"
        },
        "exception": {
          "type": "string"
        }
      }
    },
    "LearningEngineTask": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "pickedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "analysisType": {
          "type": "string",
          "enum": [
            "SERVICE_GUARD_TIME_SERIES",
            "LOG_CLUSTER",
            "SERVICE_GUARD_LOG_ANALYSIS",
            "CANARY_LOG_ANALYSIS",
            "TEST_LOG_ANALYSIS",
            "TIME_SERIES_CANARY",
            "SERVICE_GUARD_FEEDBACK_ANALYSIS",
            "TIME_SERIES_LOAD_TEST"
          ]
        },
        "taskPriority": {
          "type": "integer",
          "format": "int32"
        },
        "analysisSaveUrl": {
          "type": "string"
        },
        "failureUrl": {
          "type": "string"
        },
        "analysisStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndEpochMinute": {
          "type": "integer",
          "format": "int64"
        },
        "taskStatus": {
          "type": "string",
          "enum": ["QUEUED", "RUNNING", "FAILED", "SUCCESS", "TIMEOUT"]
        },
        "exception": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "enum": [
            "SERVICE_GUARD_TIME_SERIES",
            "LOG_CLUSTER",
            "SERVICE_GUARD_LOG_ANALYSIS",
            "CANARY_LOG_ANALYSIS",
            "TEST_LOG_ANALYSIS",
            "TIME_SERIES_CANARY",
            "SERVICE_GUARD_FEEDBACK_ANALYSIS",
            "TIME_SERIES_LOAD_TEST"
          ]
        }
      }
    },
    "RestResponseLearningEngineTask": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/LearningEngineTask"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Frequency": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "riskScore": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RestResponseListLogAnalysisCluster": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisCluster"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "label": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ClusterCoordinates": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "format": "double"
        },
        "y": {
          "type": "number",
          "format": "double"
        },
        "label": {
          "type": "integer",
          "format": "int32"
        },
        "host": {
          "type": "string"
        }
      }
    },
    "ClusterSummary": {
      "type": "object",
      "properties": {
        "label": {
          "type": "integer",
          "format": "int32"
        },
        "clusterType": {
          "type": "string",
          "enum": ["KNOWN_EVENT", "UNKNOWN_EVENT", "UNEXPECTED_FREQUENCY"]
        },
        "risk": {
          "type": "integer",
          "format": "int32"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "testFrequencyData": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "riskLevel": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        }
      }
    },
    "ControlClusterSummary": {
      "type": "object",
      "properties": {
        "label": {
          "type": "integer",
          "format": "int32"
        },
        "controlFrequencyData": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      }
    },
    "DeploymentLogAnalysisDTO": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "clusterCoordinates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterCoordinates"
          }
        },
        "resultSummary": {
          "$ref": "#/definitions/ResultSummary"
        },
        "hostSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostSummary"
          }
        }
      }
    },
    "HostSummary": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "resultSummary": {
          "$ref": "#/definitions/ResultSummary"
        }
      }
    },
    "RestResponseDeploymentLogAnalysisDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DeploymentLogAnalysisDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ResultSummary": {
      "type": "object",
      "properties": {
        "risk": {
          "type": "integer",
          "format": "int32"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "controlClusterSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ControlClusterSummary"
          }
        },
        "testClusterSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterSummary"
          }
        },
        "riskLevel": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        }
      }
    },
    "LogClusterDTO": {
      "type": "object",
      "properties": {
        "verificationTaskId": {
          "type": "string"
        },
        "epochMinute": {
          "type": "integer",
          "format": "int64"
        },
        "host": {
          "type": "string"
        },
        "log": {
          "type": "string"
        },
        "clusterLabel": {
          "type": "string"
        },
        "clusterCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RestResponseListLogClusterDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogClusterDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LogAnalysisDTO": {
      "type": "object",
      "properties": {
        "verificationTaskId": {
          "type": "string"
        },
        "analysisStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "analysisSummaryMessage": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "analysisMinute": {
          "type": "integer",
          "format": "int64"
        },
        "logClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogAnalysisCluster"
          }
        },
        "logAnalysisResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalysisResult"
          }
        }
      }
    },
    "RestResponseVoid": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/Void"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Void": {
      "type": "object"
    },
    "RestResponseMapStringMapStringListMetricSum": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricSum"
              }
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMapStringMapStringListDouble": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListTimeSeriesMetricDefinition": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesMetricDefinition"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesMetricDefinition": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "metricType": {
          "type": "string",
          "enum": ["INFRA", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "OTHER"]
        },
        "metricGroupName": {
          "type": "string"
        },
        "actionType": {
          "type": "string",
          "enum": ["IGNORE", "FAIL"]
        },
        "comparisonType": {
          "type": "string",
          "enum": ["RATIO", "DELTA", "ABSOLUTE"]
        },
        "action": {
          "type": "string",
          "enum": ["FAIL_IMMEDIATELY", "FAIL_AFTER_OCCURRENCES", "FAIL_AFTER_CONSECUTIVE_OCCURRENCES"]
        },
        "occurrenceCount": {
          "type": "integer",
          "format": "int32"
        },
        "thresholdType": {
          "type": "string",
          "enum": ["ACT_WHEN_LOWER", "ACT_WHEN_HIGHER"]
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RestResponseListTimeSeriesRecordDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesRecordDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesRecordDTO": {
      "type": "object",
      "properties": {
        "verificationTaskId": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "metricIdentifier": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "epochMinute": {
          "type": "integer",
          "format": "int64"
        },
        "metricValue": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RestResponseMapStringMapStringListTimeSeriesAnomalies": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeSeriesAnomalies"
              }
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceGuardTimeSeriesAnalysisDTO": {
      "type": "object",
      "properties": {
        "verificationTaskId": {
          "type": "string"
        },
        "analysisStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "analysisEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "overallMetricScores": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "txnMetricAnalysisData": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ServiceGuardTxnMetricAnalysisDataDTO"
            }
          }
        }
      }
    },
    "ServiceGuardTxnMetricAnalysisDataDTO": {
      "type": "object",
      "properties": {
        "longTermPattern": {
          "type": "boolean"
        },
        "lastSeenTime": {
          "type": "integer",
          "format": "int64"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "shortTermHistory": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "anomalousPatterns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesAnomalies"
          }
        },
        "cumulativeSums": {
          "$ref": "#/definitions/MetricSum"
        },
        "metricType": {
          "type": "string",
          "enum": ["INFRA", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "OTHER"]
        },
        "keyTransaction": {
          "type": "boolean"
        }
      }
    },
    "DeploymentTimeSeriesAnalysisDTO": {
      "type": "object",
      "properties": {
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "hostSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostInfo"
          }
        },
        "transactionMetricSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionMetricHostData"
          }
        }
      }
    },
    "HostInfo": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "primary": {
          "type": "boolean"
        },
        "canary": {
          "type": "boolean"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TransactionMetricHostData": {
      "type": "object",
      "properties": {
        "transactionName": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "hostData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostData"
          }
        },
        "anomalous": {
          "type": "boolean"
        }
      }
    },
    "InputSetTemplateResponse": {
      "type": "object",
      "properties": {
        "inputSetTemplateYaml": {
          "type": "string"
        }
      }
    },
    "ResponseInputSetTemplateResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/InputSetTemplateResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "InputSetTemplateRequest": {
      "type": "object",
      "properties": {
        "pipelineYaml": {
          "type": "string"
        },
        "templateYaml": {
          "type": "string"
        }
      }
    },
    "AppdynamicsMetricDataResponse": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "responseStatus": {
          "type": "string",
          "enum": ["SUCCESS", "NO_DATA", "FAILED"]
        },
        "dataPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPoint"
          }
        }
      }
    },
    "DataPoint": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponseAppdynamicsMetricDataResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/AppdynamicsMetricDataResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AppdynamicsMetricValueValidationResponse": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "apiResponseStatus": {
          "type": "string",
          "enum": ["SUCCESS", "NO_DATA", "FAILED"]
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "AppdynamicsValidationResponse": {
      "type": "object",
      "properties": {
        "metricPackName": {
          "type": "string"
        },
        "overallStatus": {
          "type": "string",
          "enum": ["SUCCESS", "NO_DATA", "FAILED"]
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppdynamicsMetricValueValidationResponse"
          }
        }
      }
    },
    "ResponseSetAppdynamicsValidationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AppdynamicsValidationResponse"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "MetricDefinitionDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["INFRA", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "OTHER"]
        },
        "path": {
          "type": "string"
        },
        "validationPath": {
          "type": "string"
        },
        "responseJsonPath": {
          "type": "string"
        },
        "validationResponseJsonPath": {
          "type": "string"
        },
        "thresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesThresholdDTO"
          }
        },
        "included": {
          "type": "boolean"
        }
      }
    },
    "MetricPackDTO": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "dataSourceType": {
          "type": "string",
          "enum": [
            "APP_DYNAMICS",
            "SPLUNK",
            "STACKDRIVER",
            "STACKDRIVER_LOG",
            "KUBERNETES",
            "NEW_RELIC",
            "PROMETHEUS",
            "DATADOG_METRICS",
            "DATADOG_LOG",
            "CUSTOM_HEALTH"
          ]
        },
        "identifier": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "enum": ["PERFORMANCE", "ERRORS", "INFRASTRUCTURE"]
        },
        "metrics": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MetricDefinitionDTO"
          }
        },
        "thresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesThresholdDTO"
          }
        }
      }
    },
    "TimeSeriesThresholdCriteria": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["RATIO", "DELTA", "ABSOLUTE"]
        },
        "action": {
          "type": "string",
          "enum": ["FAIL_IMMEDIATELY", "FAIL_AFTER_OCCURRENCES", "FAIL_AFTER_CONSECUTIVE_OCCURRENCES"]
        },
        "occurrenceCount": {
          "type": "integer",
          "format": "int32"
        },
        "criteria": {
          "type": "string"
        }
      }
    },
    "TimeSeriesThresholdDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "dataSourceType": {
          "type": "string",
          "enum": [
            "APP_DYNAMICS",
            "SPLUNK",
            "STACKDRIVER",
            "STACKDRIVER_LOG",
            "KUBERNETES",
            "NEW_RELIC",
            "PROMETHEUS",
            "DATADOG_METRICS",
            "DATADOG_LOG",
            "CUSTOM_HEALTH"
          ]
        },
        "metricPackIdentifier": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "metricType": {
          "type": "string",
          "enum": ["INFRA", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "OTHER"]
        },
        "metricGroupName": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": ["IGNORE", "FAIL"]
        },
        "criteria": {
          "$ref": "#/definitions/TimeSeriesThresholdCriteria"
        }
      }
    },
    "AppDynamicsApplication": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PageAppDynamicsApplication": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppDynamicsApplication"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponsePageAppDynamicsApplication": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageAppDynamicsApplication"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AppDynamicsTier": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PageAppDynamicsTier": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppDynamicsTier"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponsePageAppDynamicsTier": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageAppDynamicsTier"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseListString": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AppDynamicsFileDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["leaf", "folder"]
        }
      }
    },
    "ResponseListAppDynamicsFileDefinition": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppDynamicsFileDefinition"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseString": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "string"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RestResponseListString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CVNGLogDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "traceableId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "traceableType": {
          "type": "string",
          "enum": ["ONBOARDING", "VERIFICATION_TASK"]
        },
        "type": {
          "type": "string",
          "enum": ["API_CALL_LOG", "EXECUTION_LOG"]
        }
      }
    },
    "PageCVNGLogDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CVNGLogDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponsePageCVNGLogDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageCVNGLogDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "null": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": ["ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING"]
        },
        "pojo": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        }
      }
    },
    "ResponseJsonNode": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/JsonNode"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "PartialSchemaDTO": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/JsonNode"
        },
        "nodeType": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "moduleType": {
          "type": "string",
          "enum": ["CD", "CI", "CV", "CF", "CE", "CORE", "PMS", "TEMPLATESERVICE"]
        }
      }
    },
    "ResponsePartialSchemaDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PartialSchemaDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseYamlSchemaDetailsWrapper": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/YamlSchemaDetailsWrapper"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "YamlGroup": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        }
      }
    },
    "YamlSchemaDetailsWrapper": {
      "type": "object",
      "properties": {
        "yamlSchemaWithDetailsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/YamlSchemaWithDetails"
          }
        }
      }
    },
    "YamlSchemaMetadata": {
      "type": "object",
      "required": ["yamlGroup"],
      "properties": {
        "modulesSupported": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["CD", "CI", "CV", "CF", "CE", "CORE", "PMS", "TEMPLATESERVICE"]
          }
        },
        "yamlGroup": {
          "$ref": "#/definitions/YamlGroup"
        }
      }
    },
    "YamlSchemaWithDetails": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/JsonNode"
        },
        "schemaClassName": {
          "type": "string"
        },
        "moduleType": {
          "type": "string",
          "enum": ["CD", "CI", "CV", "CF", "CE", "CORE", "PMS", "TEMPLATESERVICE"]
        },
        "yamlSchemaMetadata": {
          "$ref": "#/definitions/YamlSchemaMetadata"
        },
        "availableAtOrgLevel": {
          "type": "boolean"
        },
        "availableAtAccountLevel": {
          "type": "boolean"
        },
        "availableAtProjectLevel": {
          "type": "boolean"
        }
      }
    },
    "ChangeEventDTO": {
      "type": "object",
      "required": ["accountId", "envIdentifier", "metadata", "orgIdentifier", "projectIdentifier", "serviceIdentifier"],
      "properties": {
        "id": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "serviceIdentifier": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "envIdentifier": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "changeSourceIdentifier": {
          "type": "string"
        },
        "eventTime": {
          "type": "integer",
          "format": "int64"
        },
        "metadata": {
          "$ref": "#/definitions/ChangeEventMetadata"
        },
        "category": {
          "type": "string",
          "enum": ["Deployment", "Infrastructure", "Alert"]
        },
        "type": {
          "type": "string",
          "enum": ["HarnessCDNextGen", "PagerDuty", "K8sCluster", "HarnessCD"]
        }
      }
    },
    "ChangeEventMetadata": {
      "type": "object",
      "discriminator": "type"
    },
    "HarnessCDCurrentGenEventMetadata": {
      "allOf": [
        {
          "$ref": "#/definitions/ChangeEventMetadata"
        },
        {
          "type": "object",
          "properties": {
            "accountId": {
              "type": "string"
            },
            "appId": {
              "type": "string"
            },
            "serviceId": {
              "type": "string"
            },
            "environmentId": {
              "type": "string"
            },
            "workflowId": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "workflowStartTime": {
              "type": "integer",
              "format": "int64"
            },
            "workflowEndTime": {
              "type": "integer",
              "format": "int64"
            },
            "workflowExecutionId": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "artifactType": {
              "type": "string"
            },
            "artifactName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "HarnessCDEventMetadata": {
      "allOf": [
        {
          "$ref": "#/definitions/ChangeEventMetadata"
        },
        {
          "type": "object",
          "properties": {
            "deploymentStartTime": {
              "type": "integer",
              "format": "int64"
            },
            "deploymentEndTime": {
              "type": "integer",
              "format": "int64"
            },
            "planExecutionId": {
              "type": "string"
            },
            "pipelineId": {
              "type": "string"
            },
            "stageStepId": {
              "type": "string"
            },
            "stageId": {
              "type": "string"
            },
            "artifactType": {
              "type": "string"
            },
            "artifactTag": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "verifyStepSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VerifyStepSummary"
              }
            },
            "pipelinePath": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesChangeEventMetadata": {
      "allOf": [
        {
          "$ref": "#/definitions/ChangeEventMetadata"
        },
        {
          "type": "object",
          "properties": {
            "oldYaml": {
              "type": "string"
            },
            "newYaml": {
              "type": "string"
            },
            "timestamp": {
              "type": "integer",
              "format": "int64"
            },
            "workload": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "resourceType": {
              "type": "string",
              "enum": ["Deployment", "ReplicaSet", "Secret", "Pod", "ConfigMap", "StatefulSet"]
            },
            "action": {
              "type": "string",
              "enum": ["Add", "Update", "Delete"]
            },
            "reason": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "resourceVersion": {
              "type": "string"
            }
          }
        }
      ]
    },
    "PageChangeEventDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangeEventDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "PagerDutyEventMetaData": {
      "allOf": [
        {
          "$ref": "#/definitions/ChangeEventMetadata"
        },
        {
          "type": "object",
          "properties": {
            "eventId": {
              "type": "string"
            },
            "pagerDutyUrl": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "triggeredAt": {
              "type": "integer",
              "format": "int64"
            },
            "urgency": {
              "type": "string"
            },
            "htmlUrl": {
              "type": "string"
            },
            "priority": {
              "type": "string"
            },
            "assignment": {
              "type": "string"
            },
            "assignmentUrl": {
              "type": "string"
            },
            "escalationPolicy": {
              "type": "string"
            },
            "escalationPolicyUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "RestResponsePageChangeEventDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PageChangeEventDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "VerifyStepSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "verificationStatus": {
          "type": "string",
          "enum": [
            "IGNORED",
            "NOT_STARTED",
            "VERIFICATION_PASSED",
            "VERIFICATION_FAILED",
            "ERROR",
            "ABORTED",
            "IN_PROGRESS"
          ]
        }
      }
    },
    "CategoryCountDetails": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "countInPrecedingWindow": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ChangeSummaryDTO": {
      "type": "object",
      "properties": {
        "categoryCountMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CategoryCountDetails"
          }
        }
      }
    },
    "RestResponseChangeSummaryDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ChangeSummaryDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ChangeTimeline": {
      "type": "object",
      "properties": {
        "categoryTimeline": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TimeRangeDetail"
            }
          }
        }
      }
    },
    "RestResponseChangeTimeline": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ChangeTimeline"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeRangeDetail": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseChangeEventDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ChangeEventDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DemoChangeEventDTO": {
      "type": "object",
      "properties": {
        "changeSourceType": {
          "type": "string",
          "enum": ["HarnessCDNextGen", "PagerDuty", "K8sCluster", "HarnessCD"]
        },
        "changeSourceIdentifier": {
          "type": "string"
        },
        "monitoredServiceIdentifier": {
          "type": "string"
        }
      }
    },
    "ResponseObject": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "CustomHealthSampleDataRequest": {
      "type": "object",
      "required": ["endTime", "method", "startTime", "urlPath"],
      "properties": {
        "urlPath": {
          "type": "string"
        },
        "startTime": {
          "$ref": "#/definitions/TimestampInfo"
        },
        "endTime": {
          "$ref": "#/definitions/TimestampInfo"
        },
        "method": {
          "type": "string",
          "enum": ["GET", "POST"]
        },
        "body": {
          "type": "string"
        }
      }
    },
    "TimestampInfo": {
      "type": "object",
      "properties": {
        "placeholder": {
          "type": "string"
        },
        "timestampFormat": {
          "type": "string",
          "enum": ["SECONDS", "MILLISECONDS", "CUSTOM"]
        },
        "customTimestampFormat": {
          "type": "string"
        }
      }
    },
    "TimeSeriesDataCollectionRecord": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64"
        },
        "metricValues": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TimeSeriesDataRecordMetricValue"
          }
        }
      }
    },
    "TimeSeriesDataRecordGroupValue": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "percent": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TimeSeriesDataRecordMetricValue": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "metricIdentifier": {
          "type": "string"
        },
        "timeSeriesValues": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TimeSeriesDataRecordGroupValue"
          }
        }
      }
    },
    "DataCollectionInfo": {
      "type": "object",
      "properties": {
        "dataCollectionDsl": {
          "type": "string"
        },
        "collectHostData": {
          "type": "boolean"
        },
        "verificationType": {
          "type": "string",
          "enum": ["TIME_SERIES", "LOG"]
        }
      }
    },
    "DataCollectionTaskDTO": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "dataCollectionInfo": {
          "$ref": "#/definitions/DataCollectionInfo"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseOptionalDataCollectionTaskDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/DataCollectionTaskDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "DataCollectionTaskResult": {
      "type": "object",
      "properties": {
        "dataCollectionTaskId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["FAILED", "QUEUED", "RUNNING", "WAITING", "EXPIRED", "SUCCESS", "ABORTED"]
        },
        "exception": {
          "type": "string"
        },
        "stacktrace": {
          "type": "string"
        }
      }
    },
    "RestResponseListDataCollectionTaskDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataCollectionTaskDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ResponseListLinkedHashMap": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "LogSampleRequestDTO": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "ResponseListTimeSeriesSampleDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesSampleDTO"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "TimeSeriesSampleDTO": {
      "type": "object",
      "properties": {
        "txnName": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "metricValue": {
          "type": "number",
          "format": "double"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DatadogDashboardDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "PageDatadogDashboardDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatadogDashboardDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponsePageDatadogDashboardDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageDatadogDashboardDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "DatadogDashboardDetail": {
      "type": "object",
      "properties": {
        "widgetName": {
          "type": "string"
        },
        "dataSets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatadogDataSet"
          }
        }
      }
    },
    "DatadogDataSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "ResponseListDatadogDashboardDetail": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatadogDashboardDetail"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RestResponseString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HostRecordDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "hosts": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "LogRecordDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "verificationTaskId": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "log": {
          "type": "string"
        }
      }
    },
    "RestResponseListMetricPackDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricPackDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "MetricDefinition": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["INFRA", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "OTHER"]
        },
        "responseJsonPath": {
          "type": "string"
        },
        "validationResponseJsonPath": {
          "type": "string"
        },
        "included": {
          "type": "boolean"
        },
        "thresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesThreshold"
          }
        }
      }
    },
    "MetricPack": {
      "type": "object",
      "required": ["category", "dataSourceType"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "dataSourceType": {
          "type": "string",
          "enum": [
            "APP_DYNAMICS",
            "SPLUNK",
            "STACKDRIVER",
            "STACKDRIVER_LOG",
            "KUBERNETES",
            "NEW_RELIC",
            "PROMETHEUS",
            "DATADOG_METRICS",
            "DATADOG_LOG",
            "CUSTOM_HEALTH"
          ]
        },
        "identifier": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "enum": ["PERFORMANCE", "ERRORS", "INFRASTRUCTURE"]
        },
        "metrics": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MetricDefinition"
          }
        }
      }
    },
    "TimeSeriesThreshold": {
      "type": "object",
      "required": [
        "accountId",
        "action",
        "criteria",
        "dataSourceType",
        "metricName",
        "metricPackIdentifier",
        "metricType",
        "orgIdentifier",
        "projectIdentifier"
      ],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "accountId": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "dataSourceType": {
          "type": "string",
          "enum": [
            "APP_DYNAMICS",
            "SPLUNK",
            "STACKDRIVER",
            "STACKDRIVER_LOG",
            "KUBERNETES",
            "NEW_RELIC",
            "PROMETHEUS",
            "DATADOG_METRICS",
            "DATADOG_LOG",
            "CUSTOM_HEALTH"
          ]
        },
        "metricPackIdentifier": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "metricType": {
          "type": "string",
          "enum": ["INFRA", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "OTHER"]
        },
        "metricGroupName": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": ["IGNORE", "FAIL"]
        },
        "criteria": {
          "$ref": "#/definitions/TimeSeriesThresholdCriteria"
        }
      }
    },
    "RestResponseListTimeSeriesThreshold": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesThreshold"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AnalysisDTO": {
      "type": "object",
      "properties": {
        "liveMonitoring": {
          "$ref": "#/definitions/LiveMonitoringDTO"
        },
        "deploymentVerification": {
          "$ref": "#/definitions/DeploymentVerificationDTO"
        },
        "riskProfile": {
          "$ref": "#/definitions/RiskProfile"
        }
      }
    },
    "AppDMetricDefinitions": {
      "type": "object",
      "required": ["identifier", "metricName"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "riskProfile": {
          "$ref": "#/definitions/RiskProfile"
        },
        "analysis": {
          "$ref": "#/definitions/AnalysisDTO"
        },
        "sli": {
          "$ref": "#/definitions/SLIDTO"
        },
        "groupName": {
          "type": "string"
        },
        "baseFolder": {
          "type": "string"
        },
        "metricPath": {
          "type": "string"
        }
      }
    },
    "AppDynamicsHealthSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/HealthSourceSpec"
        },
        {
          "type": "object",
          "required": ["feature"],
          "properties": {
            "feature": {
              "type": "string"
            },
            "applicationName": {
              "type": "string"
            },
            "tierName": {
              "type": "string"
            },
            "metricPacks": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "$ref": "#/definitions/MetricPackDTO"
              }
            },
            "metricDefinitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppDMetricDefinitions"
              }
            }
          }
        }
      ]
    },
    "ChangeSourceDTO": {
      "type": "object",
      "required": ["spec"],
      "properties": {
        "name": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["HarnessCDNextGen", "PagerDuty", "K8sCluster", "HarnessCD"]
        },
        "enabled": {
          "type": "boolean"
        },
        "spec": {
          "$ref": "#/definitions/ChangeSourceSpec"
        },
        "category": {
          "type": "string",
          "enum": ["Deployment", "Infrastructure", "Alert"]
        }
      }
    },
    "ChangeSourceSpec": {
      "type": "object",
      "discriminator": "type"
    },
    "CustomHealthMetricDefinition": {
      "type": "object",
      "required": ["identifier", "metricName"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "riskProfile": {
          "$ref": "#/definitions/RiskProfile"
        },
        "analysis": {
          "$ref": "#/definitions/AnalysisDTO"
        },
        "sli": {
          "$ref": "#/definitions/SLIDTO"
        },
        "groupName": {
          "type": "string"
        },
        "queryType": {
          "type": "string",
          "enum": ["SERVICE_BASED", "HOST_BASED"]
        },
        "urlPath": {
          "type": "string"
        },
        "method": {
          "type": "string",
          "enum": ["GET", "POST"]
        },
        "requestBody": {
          "type": "string"
        },
        "startTime": {
          "$ref": "#/definitions/TimestampInfo"
        },
        "endTime": {
          "$ref": "#/definitions/TimestampInfo"
        },
        "metricResponseMapping": {
          "$ref": "#/definitions/MetricResponseMapping"
        }
      }
    },
    "CustomHealthSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/HealthSourceSpec"
        },
        {
          "type": "object",
          "properties": {
            "metricDefinitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomHealthMetricDefinition"
              }
            }
          }
        }
      ]
    },
    "DatadogLogHealthSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/HealthSourceSpec"
        },
        {
          "type": "object",
          "required": ["feature", "queries"],
          "properties": {
            "feature": {
              "type": "string"
            },
            "queries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryDTO"
              }
            }
          }
        }
      ]
    },
    "DatadogMetricHealthDefinition": {
      "type": "object",
      "required": ["identifier", "metricName"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "riskProfile": {
          "$ref": "#/definitions/RiskProfile"
        },
        "analysis": {
          "$ref": "#/definitions/AnalysisDTO"
        },
        "sli": {
          "$ref": "#/definitions/SLIDTO"
        },
        "dashboardId": {
          "type": "string"
        },
        "dashboardName": {
          "type": "string"
        },
        "metricPath": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "groupingQuery": {
          "type": "string"
        },
        "metric": {
          "type": "string"
        },
        "aggregation": {
          "type": "string"
        },
        "serviceInstanceIdentifierTag": {
          "type": "string"
        },
        "metricTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isManualQuery": {
          "type": "boolean"
        },
        "isCustomCreatedMetric": {
          "type": "boolean"
        }
      }
    },
    "DatadogMetricHealthSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/HealthSourceSpec"
        },
        {
          "type": "object",
          "required": ["feature"],
          "properties": {
            "feature": {
              "type": "string"
            },
            "metricDefinitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatadogMetricHealthDefinition"
              }
            }
          }
        }
      ]
    },
    "DeploymentVerificationDTO": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "serviceInstanceFieldName": {
          "type": "string"
        },
        "serviceInstanceMetricPath": {
          "type": "string"
        }
      }
    },
    "HarnessCDChangeSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ChangeSourceSpec"
        },
        {
          "type": "object"
        }
      ]
    },
    "HarnessCDCurrentGenChangeSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ChangeSourceSpec"
        },
        {
          "type": "object",
          "required": ["harnessApplicationId", "harnessEnvironmentId", "harnessServiceId"],
          "properties": {
            "harnessApplicationId": {
              "type": "string"
            },
            "harnessServiceId": {
              "type": "string"
            },
            "harnessEnvironmentId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "HealthSource": {
      "type": "object",
      "required": ["spec"],
      "properties": {
        "name": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "AppDynamics",
            "NewRelic",
            "StackdriverLog",
            "Stackdriver",
            "Prometheus",
            "Splunk",
            "DatadogMetrics",
            "DatadogLog",
            "CustomHealth"
          ]
        },
        "spec": {
          "$ref": "#/definitions/HealthSourceSpec"
        }
      }
    },
    "HealthSourceSpec": {
      "type": "object",
      "properties": {
        "connectorRef": {
          "type": "string"
        }
      }
    },
    "KubernetesChangeSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ChangeSourceSpec"
        },
        {
          "type": "object",
          "properties": {
            "connectorRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "LiveMonitoringDTO": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "MetricResponseMapping": {
      "type": "object",
      "properties": {
        "metricValueJsonPath": {
          "type": "string"
        },
        "timestampJsonPath": {
          "type": "string"
        },
        "serviceInstanceJsonPath": {
          "type": "string"
        },
        "timestampFormat": {
          "type": "string"
        }
      }
    },
    "MonitoredServiceDTO": {
      "type": "object",
      "required": [
        "environmentRef",
        "identifier",
        "name",
        "orgIdentifier",
        "projectIdentifier",
        "serviceRef",
        "tags",
        "type"
      ],
      "properties": {
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["Application", "Infrastructure"]
        },
        "description": {
          "type": "string"
        },
        "serviceRef": {
          "type": "string"
        },
        "environmentRef": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sources": {
          "$ref": "#/definitions/Sources"
        },
        "dependencies": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ServiceDependencyDTO"
          }
        }
      }
    },
    "MonitoredServiceResponse": {
      "type": "object",
      "required": ["monitoredService"],
      "properties": {
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        },
        "monitoredService": {
          "readOnly": true,
          "$ref": "#/definitions/MonitoredServiceDTO"
        }
      }
    },
    "NewRelicHealthSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/HealthSourceSpec"
        },
        {
          "type": "object",
          "properties": {
            "applicationName": {
              "type": "string"
            },
            "applicationId": {
              "type": "string"
            },
            "feature": {
              "type": "string"
            },
            "metricPacks": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "$ref": "#/definitions/MetricPackDTO"
              }
            },
            "newRelicMetricDefinitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NewRelicMetricDefinition"
              }
            }
          }
        }
      ]
    },
    "NewRelicMetricDefinition": {
      "type": "object",
      "required": ["identifier", "metricName"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "riskProfile": {
          "$ref": "#/definitions/RiskProfile"
        },
        "analysis": {
          "$ref": "#/definitions/AnalysisDTO"
        },
        "sli": {
          "$ref": "#/definitions/SLIDTO"
        },
        "groupName": {
          "type": "string"
        },
        "nrql": {
          "type": "string"
        },
        "responseMapping": {
          "$ref": "#/definitions/MetricResponseMapping"
        }
      }
    },
    "PagerDutyChangeSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/ChangeSourceSpec"
        },
        {
          "type": "object",
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "pagerDutyServiceId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "PrometheusFilter": {
      "type": "object",
      "properties": {
        "labelName": {
          "type": "string"
        },
        "labelValue": {
          "type": "string"
        }
      }
    },
    "PrometheusHealthSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/HealthSourceSpec"
        },
        {
          "type": "object",
          "properties": {
            "metricDefinitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrometheusMetricDefinition"
              }
            }
          }
        }
      ]
    },
    "PrometheusMetricDefinition": {
      "type": "object",
      "required": ["identifier", "metricName"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "riskProfile": {
          "$ref": "#/definitions/RiskProfile"
        },
        "analysis": {
          "$ref": "#/definitions/AnalysisDTO"
        },
        "sli": {
          "$ref": "#/definitions/SLIDTO"
        },
        "query": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "serviceInstanceFieldName": {
          "type": "string"
        },
        "prometheusMetric": {
          "type": "string"
        },
        "serviceFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusFilter"
          }
        },
        "envFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusFilter"
          }
        },
        "additionalFilters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusFilter"
          }
        },
        "aggregation": {
          "type": "string"
        },
        "isManualQuery": {
          "type": "boolean"
        }
      }
    },
    "QueryDTO": {
      "type": "object",
      "required": ["name", "query", "serviceInstanceIdentifier"],
      "properties": {
        "name": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "indexes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceInstanceIdentifier": {
          "type": "string"
        }
      }
    },
    "ResponseMonitoredServiceResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/MonitoredServiceResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RiskProfile": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "enum": ["PERFORMANCE", "ERRORS", "INFRASTRUCTURE"]
        },
        "metricType": {
          "type": "string",
          "enum": ["INFRA", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "OTHER"]
        },
        "thresholdTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["ACT_WHEN_LOWER", "ACT_WHEN_HIGHER"]
          }
        }
      }
    },
    "SLIDTO": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "ServiceDependencyDTO": {
      "type": "object",
      "properties": {
        "monitoredServiceIdentifier": {
          "type": "string"
        },
        "dependencyMetadata": {
          "$ref": "#/definitions/ServiceDependencyMetadata"
        }
      }
    },
    "ServiceDependencyMetadata": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["KUBERNETES"]
        },
        "supportedChangeSourceTypes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": ["HarnessCDNextGen", "PagerDuty", "K8sCluster", "HarnessCD"]
          }
        }
      }
    },
    "Sources": {
      "type": "object",
      "properties": {
        "healthSources": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HealthSource"
          }
        },
        "changeSources": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ChangeSourceDTO"
          }
        }
      }
    },
    "SplunkHealthSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/HealthSourceSpec"
        },
        {
          "type": "object",
          "required": ["feature", "queries"],
          "properties": {
            "feature": {
              "type": "string"
            },
            "queries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryDTO"
              }
            }
          }
        }
      ]
    },
    "StackdriverDefinition": {
      "type": "object",
      "required": ["identifier", "metricName"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "riskProfile": {
          "$ref": "#/definitions/RiskProfile"
        },
        "analysis": {
          "$ref": "#/definitions/AnalysisDTO"
        },
        "sli": {
          "$ref": "#/definitions/SLIDTO"
        },
        "dashboardName": {
          "type": "string"
        },
        "dashboardPath": {
          "type": "string"
        },
        "jsonMetricDefinition": {
          "type": "object"
        },
        "metricTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceInstanceField": {
          "type": "string"
        },
        "isManualQuery": {
          "type": "boolean"
        }
      }
    },
    "StackdriverLogHealthSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/HealthSourceSpec"
        },
        {
          "type": "object",
          "required": ["feature", "queries"],
          "properties": {
            "feature": {
              "type": "string"
            },
            "queries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueryDTO"
              }
            }
          }
        }
      ]
    },
    "StackdriverMetricHealthSourceSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/HealthSourceSpec"
        },
        {
          "type": "object",
          "properties": {
            "metricDefinitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StackdriverDefinition"
              }
            }
          }
        }
      ]
    },
    "RestResponseListChangeEventDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangeEventDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HistoricalTrend": {
      "type": "object",
      "properties": {
        "healthScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiskData"
          }
        }
      }
    },
    "MonitoredServiceListItemDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "serviceRef": {
          "type": "string"
        },
        "environmentRef": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["Application", "Infrastructure"]
        },
        "healthMonitoringEnabled": {
          "type": "boolean"
        },
        "currentHealthScore": {
          "$ref": "#/definitions/RiskData"
        },
        "dependentHealthScore": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiskData"
          }
        },
        "historicalTrend": {
          "$ref": "#/definitions/HistoricalTrend"
        },
        "changeSummary": {
          "$ref": "#/definitions/ChangeSummaryDTO"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sloHealthIndicators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SloHealthIndicatorDTO"
          }
        }
      }
    },
    "PageMonitoredServiceListItemDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoredServiceListItemDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponsePageMonitoredServiceListItemDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageMonitoredServiceListItemDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RiskData": {
      "type": "object",
      "properties": {
        "healthScore": {
          "type": "integer",
          "format": "int32"
        },
        "riskStatus": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "timeRangeParams": {
          "$ref": "#/definitions/TimeRangeParams"
        }
      }
    },
    "SloHealthIndicatorDTO": {
      "type": "object",
      "properties": {
        "serviceLevelObjectiveIdentifier": {
          "type": "string"
        },
        "errorBudgetRemainingPercentage": {
          "type": "number",
          "format": "double"
        },
        "errorBudgetRisk": {
          "type": "string",
          "enum": ["HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY", "EXHAUSTED"]
        }
      }
    },
    "TimeRangeParams": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PageMonitoredServiceResponse": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoredServiceResponse"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponsePageMonitoredServiceResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageMonitoredServiceResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseHistoricalTrend": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/HistoricalTrend"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RestResponseListHealthSourceDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthSourceDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseMonitoredServiceResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/MonitoredServiceResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HealthSourceSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        }
      }
    },
    "MonitoredServiceWithHealthSources": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "healthSources": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HealthSourceSummary"
          }
        }
      }
    },
    "ResponseListMonitoredServiceWithHealthSources": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoredServiceWithHealthSources"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "HealthScoreDTO": {
      "type": "object",
      "properties": {
        "currentHealthScore": {
          "$ref": "#/definitions/RiskData"
        },
        "dependentHealthScore": {
          "$ref": "#/definitions/RiskData"
        }
      }
    },
    "ResponseHealthScoreDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/HealthScoreDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "EnvironmentResponse": {
      "type": "object",
      "properties": {
        "environment": {
          "$ref": "#/definitions/EnvironmentResponseDTO"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EnvironmentResponseDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["PreProduction", "Production"]
        },
        "deleted": {
          "type": "boolean"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponseListEnvironmentResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentResponse"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AnomaliesSummaryDTO": {
      "type": "object",
      "properties": {
        "logsAnomalies": {
          "type": "integer",
          "format": "int64"
        },
        "timeSeriesAnomalies": {
          "type": "integer",
          "format": "int64"
        },
        "totalAnomalies": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseAnomaliesSummaryDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/AnomaliesSummaryDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CountServiceDTO": {
      "type": "object",
      "properties": {
        "allServicesCount": {
          "type": "integer",
          "format": "int32"
        },
        "servicesAtRiskCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MetricDTO": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        }
      }
    },
    "RestResponseListMetricDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "HealthMonitoringFlagResponse": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "healthMonitoringEnabled": {
          "type": "boolean"
        }
      }
    },
    "RestResponseHealthMonitoringFlagResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/HealthMonitoringFlagResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "MetricPackValidationResponse": {
      "type": "object",
      "properties": {
        "metricValidationResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricValidationResponse"
          }
        },
        "metricPackName": {
          "type": "string"
        },
        "overallStatus": {
          "type": "string",
          "enum": ["SUCCESS", "NO_DATA", "FAILED"]
        }
      }
    },
    "MetricValidationResponse": {
      "type": "object",
      "properties": {
        "metricName": {
          "type": "string"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "NO_DATA", "FAILED"]
        }
      }
    },
    "ResponseMetricPackValidationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/MetricPackValidationResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseLinkedHashMap": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "NewRelicApplication": {
      "type": "object",
      "properties": {
        "applicationName": {
          "type": "string"
        },
        "applicationId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ResponseListNewRelicApplication": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewRelicApplication"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "OnboardingResponseDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "result": {
          "type": "object"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "connectorIdentifier": {
          "type": "string"
        },
        "tracingId": {
          "type": "string"
        }
      }
    },
    "RestResponseOnboardingResponseDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/OnboardingResponseDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AppDynamicsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["accountname", "controllerUrl"],
          "properties": {
            "username": {
              "type": "string"
            },
            "accountname": {
              "type": "string"
            },
            "controllerUrl": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "passwordRef": {
              "type": "string"
            },
            "clientSecretRef": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "authType": {
              "type": "string",
              "enum": ["UsernamePassword", "ApiClientToken"]
            }
          }
        }
      ]
    },
    "ArtifactoryAuthCredentials": {
      "type": "object"
    },
    "ArtifactoryAuthentication": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/ArtifactoryAuthCredentials"
        }
      }
    },
    "ArtifactoryConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["artifactoryServerUrl"],
          "properties": {
            "artifactoryServerUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/ArtifactoryAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ArtifactoryUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/ArtifactoryAuthCredentials"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsCodeCommitAuthenticationDTO": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["HTTPS"]
        },
        "spec": {
          "$ref": "#/definitions/AwsCodeCommitCredentialsDTO"
        }
      }
    },
    "AwsCodeCommitConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/AwsCodeCommitAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["Repo", "Region"]
            }
          }
        }
      ]
    },
    "AwsCodeCommitCredentialsDTO": {
      "type": "object"
    },
    "AwsCodeCommitHttpsCredentialsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCodeCommitCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["AWSCredentials"]
            },
            "spec": {
              "$ref": "#/definitions/AwsCodeCommitHttpsCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "AwsCodeCommitHttpsCredentialsSpecDTO": {
      "type": "object"
    },
    "AwsCodeCommitSecretKeyAccessKeyDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCodeCommitHttpsCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["secretKeyRef"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsCredential"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "AwsCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "crossAccountAccess": {
          "$ref": "#/definitions/CrossAccountAccess"
        },
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig", "Irsa"]
        },
        "spec": {
          "$ref": "#/definitions/AwsCredentialSpec"
        }
      }
    },
    "AwsCredentialSpec": {
      "type": "object"
    },
    "AwsCurAttributes": {
      "type": "object",
      "required": ["reportName", "s3BucketName"],
      "properties": {
        "reportName": {
          "type": "string"
        },
        "s3BucketName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "s3Prefix": {
          "type": "string"
        }
      }
    },
    "AwsKmsConnectorCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["AssumeIAMRole", "AssumeSTSRole", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        }
      }
    },
    "AwsKmsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["kmsArn"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsKmsConnectorCredential"
            },
            "kmsArn": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "AwsKmsCredentialSpec": {
      "type": "object"
    },
    "AwsKmsCredentialSpecAssumeIAM": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["delegateSelectors"],
          "properties": {
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              },
              "maxItems": 2147483647,
              "minItems": 1
            }
          }
        }
      ]
    },
    "AwsKmsCredentialSpecAssumeSTS": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["delegateSelectors", "roleArn"],
          "properties": {
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              },
              "maxItems": 2147483647,
              "minItems": 1
            },
            "roleArn": {
              "type": "string"
            },
            "externalName": {
              "type": "string"
            },
            "assumeStsRoleDuration": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AwsKmsCredentialSpecManualConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsKmsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["accessKey", "secretKey"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "secretKey": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsManualConfigSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsCredentialSpec"
        },
        {
          "type": "object",
          "required": ["secretKeyRef"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsSMCredentialSpecAssumeIAM": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        },
        {
          "type": "object"
        }
      ]
    },
    "AwsSMCredentialSpecAssumeSTS": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        },
        {
          "type": "object",
          "required": ["roleArn"],
          "properties": {
            "roleArn": {
              "type": "string"
            },
            "externalId": {
              "type": "string"
            },
            "assumeStsRoleDuration": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "AwsSMCredentialSpecManualConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        },
        {
          "type": "object",
          "required": ["accessKey", "secretKey"],
          "properties": {
            "accessKey": {
              "type": "string"
            },
            "secretKey": {
              "type": "string"
            }
          }
        }
      ]
    },
    "AwsSecretManagerCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["AssumeIAMRole", "AssumeSTSRole", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/AwsSecretManagerCredentialSpec"
        }
      }
    },
    "AwsSecretManagerCredentialSpec": {
      "type": "object"
    },
    "AwsSecretManagerDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential", "region"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/AwsSecretManagerCredential"
            },
            "region": {
              "type": "string"
            },
            "secretNamePrefix": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "AzureKeyVaultConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["clientId", "secretKey", "subscription", "tenantId", "vaultName"],
          "properties": {
            "clientId": {
              "type": "string"
            },
            "secretKey": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "vaultName": {
              "type": "string"
            },
            "subscription": {
              "type": "string"
            },
            "azureEnvironmentType": {
              "type": "string",
              "enum": ["AZURE", "AZURE_US_GOVERNMENT"]
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "BillingExportSpec": {
      "type": "object",
      "required": ["containerName", "directoryName", "reportName", "storageAccountName", "subscriptionId"],
      "properties": {
        "storageAccountName": {
          "type": "string"
        },
        "containerName": {
          "type": "string"
        },
        "directoryName": {
          "type": "string"
        },
        "reportName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        }
      }
    },
    "BitbucketApiAccess": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernameToken"]
        },
        "spec": {
          "$ref": "#/definitions/BitbucketApiAccessSpecDTO"
        }
      }
    },
    "BitbucketApiAccessSpecDTO": {
      "type": "object"
    },
    "BitbucketAuthentication": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Http", "Ssh"]
        },
        "spec": {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        }
      }
    },
    "BitbucketConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/BitbucketAuthentication"
            },
            "apiAccess": {
              "$ref": "#/definitions/BitbucketApiAccess"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["Account", "Repo"]
            }
          }
        }
      ]
    },
    "BitbucketCredentialsDTO": {
      "type": "object"
    },
    "BitbucketHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["UsernamePassword"]
            },
            "spec": {
              "$ref": "#/definitions/BitbucketHttpCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "BitbucketHttpCredentialsSpecDTO": {
      "type": "object"
    },
    "BitbucketSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BitbucketUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BitbucketUsernameTokenApiAccess": {
      "allOf": [
        {
          "$ref": "#/definitions/BitbucketApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CEAwsConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["crossAccountAccess"],
          "properties": {
            "crossAccountAccess": {
              "$ref": "#/definitions/CrossAccountAccess"
            },
            "curAttributes": {
              "$ref": "#/definitions/AwsCurAttributes"
            },
            "awsAccountId": {
              "type": "string"
            },
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            }
          }
        }
      ]
    },
    "CEAzureConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["subscriptionId", "tenantId"],
          "properties": {
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            },
            "tenantId": {
              "type": "string"
            },
            "subscriptionId": {
              "type": "string"
            },
            "billingExportSpec": {
              "$ref": "#/definitions/BillingExportSpec"
            }
          }
        }
      ]
    },
    "CEKubernetesClusterConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["connectorRef"],
          "properties": {
            "connectorRef": {
              "type": "string"
            },
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            }
          }
        }
      ]
    },
    "ConnectorConfigDTO": {
      "type": "object"
    },
    "ConnectorInfoDTO": {
      "type": "object",
      "required": ["identifier", "name", "spec", "type"],
      "properties": {
        "name": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "K8sCluster",
            "Git",
            "Splunk",
            "AppDynamics",
            "Prometheus",
            "Dynatrace",
            "Vault",
            "AzureKeyVault",
            "DockerRegistry",
            "Local",
            "AwsKms",
            "GcpKms",
            "AwsSecretManager",
            "Gcp",
            "Aws",
            "Artifactory",
            "Jira",
            "Nexus",
            "Github",
            "Gitlab",
            "Bitbucket",
            "Codecommit",
            "CEAws",
            "CEAzure",
            "GcpCloudCost",
            "CEK8sCluster",
            "HttpHelmRepo",
            "NewRelic",
            "Datadog",
            "SumoLogic",
            "PagerDuty",
            "CustomHealth",
            "ServiceNow"
          ]
        },
        "spec": {
          "$ref": "#/definitions/ConnectorConfigDTO"
        }
      }
    },
    "CrossAccountAccess": {
      "type": "object",
      "required": ["crossAccountRoleArn"],
      "properties": {
        "crossAccountRoleArn": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        }
      }
    },
    "CustomHealthConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["baseURL", "method"],
          "properties": {
            "baseURL": {
              "type": "string"
            },
            "headers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomHealthKeyAndValue"
              }
            },
            "params": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomHealthKeyAndValue"
              }
            },
            "method": {
              "type": "string",
              "enum": ["GET", "POST"]
            },
            "validationBody": {
              "type": "string"
            },
            "validationPath": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "CustomHealthKeyAndValue": {
      "type": "object",
      "required": ["key"],
      "properties": {
        "key": {
          "type": "string"
        },
        "encryptedValueRef": {
          "$ref": "#/definitions/SecretRefData"
        },
        "value": {
          "type": "string"
        },
        "valueEncrypted": {
          "type": "boolean"
        }
      }
    },
    "DataCollectionRequest": {
      "type": "object",
      "properties": {
        "connectorInfoDTO": {
          "$ref": "#/definitions/ConnectorInfoDTO"
        },
        "tracingId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "SPLUNK_SAVED_SEARCHES",
            "SPLUNK_SAMPLE_DATA",
            "SPLUNK_LATEST_HISTOGRAM",
            "STACKDRIVER_DASHBOARD_LIST",
            "STACKDRIVER_DASHBOARD_GET",
            "STACKDRIVER_SAMPLE_DATA",
            "STACKDRIVER_LOG_SAMPLE_DATA",
            "APPDYNAMICS_FETCH_APPS",
            "APPDYNAMICS_FETCH_TIERS",
            "APPDYNAMICS_GET_METRIC_DATA",
            "APPDYNAMICS_GET_SINGLE_METRIC_DATA",
            "APPDYNAMICS_FETCH_METRIC_STRUCTURE",
            "NEWRELIC_APPS_REQUEST",
            "NEWRELIC_VALIDATION_REQUEST",
            "PROMETHEUS_METRIC_LIST_GET",
            "PROMETHEUS_LABEL_NAMES_GET",
            "PROMETHEUS_LABEL_VALUES_GET",
            "PROMETHEUS_SAMPLE_DATA",
            "PAGERDUTY_SERVICES",
            "PAGERDUTY_REGISTER_WEBHOOK",
            "PAGERDUTY_DELETE_WEBHOOK",
            "DATADOG_DASHBOARD_LIST",
            "DATADOG_DASHBOARD_DETAILS",
            "DATADOG_METRIC_TAGS",
            "DATADOG_ACTIVE_METRICS",
            "DATADOG_TIME_SERIES_POINTS",
            "DATADOG_LOG_SAMPLE_DATA",
            "DATADOG_LOG_INDEXES",
            "NEWRELIC_SAMPLE_FETCH_REQUEST",
            "SYNC_DATA_COLLECTION",
            "CUSTOM_HEALTH_SAMPLE_DATA"
          ]
        },
        "baseUrl": {
          "type": "string"
        },
        "dsl": {
          "type": "string"
        }
      }
    },
    "DatadogConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiKeyRef", "applicationKeyRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "applicationKeyRef": {
              "type": "string"
            },
            "apiKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "DockerAuthCredentialsDTO": {
      "type": "object"
    },
    "DockerAuthenticationDTO": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/DockerAuthCredentialsDTO"
        }
      }
    },
    "DockerConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["dockerRegistryUrl", "providerType"],
          "properties": {
            "dockerRegistryUrl": {
              "type": "string"
            },
            "providerType": {
              "type": "string",
              "enum": ["DockerHub", "Harbor", "Quay", "Other"]
            },
            "auth": {
              "$ref": "#/definitions/DockerAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "DockerUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/DockerAuthCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "DynatraceConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiTokenRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "apiTokenRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "GcpBillingExportSpec": {
      "type": "object",
      "required": ["datasetId"],
      "properties": {
        "datasetId": {
          "type": "string"
        }
      }
    },
    "GcpCloudCostConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["projectId", "serviceAccountEmail"],
          "properties": {
            "featuresEnabled": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
              }
            },
            "projectId": {
              "type": "string"
            },
            "serviceAccountEmail": {
              "type": "string"
            },
            "billingExportSpec": {
              "$ref": "#/definitions/GcpBillingExportSpec"
            }
          }
        }
      ]
    },
    "GcpConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "credential": {
              "$ref": "#/definitions/GcpConnectorCredential"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "GcpConnectorCredential": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/GcpCredentialSpec"
        }
      }
    },
    "GcpCredentialSpec": {
      "type": "object"
    },
    "GcpKmsConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credentials"],
          "properties": {
            "projectId": {
              "type": "string"
            },
            "region": {
              "type": "string"
            },
            "keyRing": {
              "type": "string"
            },
            "keyName": {
              "type": "string"
            },
            "credentials": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "GcpManualDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/GcpCredentialSpec"
        },
        {
          "type": "object",
          "required": ["secretKeyRef"],
          "properties": {
            "secretKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitAuthenticationDTO": {
      "type": "object",
      "discriminator": "type"
    },
    "GitConfigDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["connectionType", "spec", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "branchName": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "executeOnDelegate": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": ["Http", "Ssh"]
            },
            "connectionType": {
              "type": "string",
              "enum": ["Account", "Repo"]
            },
            "spec": {
              "$ref": "#/definitions/GitAuthenticationDTO"
            }
          }
        }
      ]
    },
    "GitHTTPAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitSSHAuthenticationDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/GitAuthenticationDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubApiAccess": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["GithubApp", "Token"]
        },
        "spec": {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        }
      }
    },
    "GithubApiAccessSpecDTO": {
      "type": "object"
    },
    "GithubAppSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["applicationId", "installationId", "privateKeyRef"],
          "properties": {
            "installationId": {
              "type": "string"
            },
            "applicationId": {
              "type": "string"
            },
            "privateKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubAuthentication": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Http", "Ssh"]
        },
        "spec": {
          "$ref": "#/definitions/GithubCredentialsDTO"
        }
      }
    },
    "GithubConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/GithubAuthentication"
            },
            "apiAccess": {
              "$ref": "#/definitions/GithubApiAccess"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "executeOnDelegate": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": ["Account", "Repo"]
            }
          }
        }
      ]
    },
    "GithubCredentialsDTO": {
      "type": "object"
    },
    "GithubHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["UsernamePassword", "UsernameToken"]
            },
            "spec": {
              "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "GithubHttpCredentialsSpecDTO": {
      "type": "object"
    },
    "GithubSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubTokenSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GithubUsernameToken": {
      "allOf": [
        {
          "$ref": "#/definitions/GithubHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabApiAccess": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Token"]
        },
        "spec": {
          "$ref": "#/definitions/GitlabApiAccessSpecDTO"
        }
      }
    },
    "GitlabApiAccessSpecDTO": {
      "type": "object"
    },
    "GitlabAuthentication": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Http", "Ssh"]
        },
        "spec": {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        }
      }
    },
    "GitlabConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["authentication", "type", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "validationRepo": {
              "type": "string"
            },
            "authentication": {
              "$ref": "#/definitions/GitlabAuthentication"
            },
            "apiAccess": {
              "$ref": "#/definitions/GitlabApiAccess"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "type": {
              "type": "string",
              "enum": ["Account", "Repo"]
            }
          }
        }
      ]
    },
    "GitlabCredentialsDTO": {
      "type": "object"
    },
    "GitlabHttpCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["spec", "type"],
          "properties": {
            "type": {
              "type": "string",
              "enum": ["UsernamePassword", "UsernameToken", "Kerberos"]
            },
            "spec": {
              "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
            }
          }
        }
      ]
    },
    "GitlabHttpCredentialsSpecDTO": {
      "type": "object"
    },
    "GitlabKerberos": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["kerberosKeyRef"],
          "properties": {
            "kerberosKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabSshCredentials": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["sshKeyRef"],
          "properties": {
            "sshKeyRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabTokenSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabApiAccessSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabUsernamePassword": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "GitlabUsernameToken": {
      "allOf": [
        {
          "$ref": "#/definitions/GitlabHttpCredentialsSpecDTO"
        },
        {
          "type": "object",
          "required": ["tokenRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "tokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "HttpHelmAuthCredentialsDTO": {
      "type": "object"
    },
    "HttpHelmAuthenticationDTO": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/HttpHelmAuthCredentialsDTO"
        }
      }
    },
    "HttpHelmConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["helmRepoUrl"],
          "properties": {
            "helmRepoUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/HttpHelmAuthenticationDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "HttpHelmUsernamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/HttpHelmAuthCredentialsDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "JiraConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["jiraUrl", "passwordRef"],
          "properties": {
            "jiraUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "KubernetesAuthCredentialDTO": {
      "type": "object"
    },
    "KubernetesAuthDTO": {
      "type": "object",
      "required": ["spec", "type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "ClientKeyCert", "ServiceAccount", "OpenIdConnect"]
        },
        "spec": {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        }
      }
    },
    "KubernetesClientKeyCertDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["clientCertRef", "clientKeyRef"],
          "properties": {
            "caCertRef": {
              "type": "string"
            },
            "clientCertRef": {
              "type": "string"
            },
            "clientKeyRef": {
              "type": "string"
            },
            "clientKeyPassphraseRef": {
              "type": "string"
            },
            "clientKeyAlgo": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesClusterConfigDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["credential"],
          "properties": {
            "credential": {
              "$ref": "#/definitions/KubernetesCredentialDTO"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "KubernetesClusterDetailsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesCredentialSpecDTO"
        },
        {
          "type": "object",
          "required": ["auth", "masterUrl"],
          "properties": {
            "masterUrl": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/KubernetesAuthDTO"
            }
          }
        }
      ]
    },
    "KubernetesCredentialDTO": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["InheritFromDelegate", "ManualConfig"]
        },
        "spec": {
          "$ref": "#/definitions/KubernetesCredentialSpecDTO"
        }
      }
    },
    "KubernetesCredentialSpecDTO": {
      "type": "object"
    },
    "KubernetesOpenIdConnectDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["oidcClientIdRef", "oidcPasswordRef"],
          "properties": {
            "oidcIssuerUrl": {
              "type": "string"
            },
            "oidcUsername": {
              "type": "string"
            },
            "oidcUsernameRef": {
              "type": "string"
            },
            "oidcClientIdRef": {
              "type": "string"
            },
            "oidcPasswordRef": {
              "type": "string"
            },
            "oidcSecretRef": {
              "type": "string"
            },
            "oidcScopes": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesServiceAccountDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["serviceAccountTokenRef"],
          "properties": {
            "serviceAccountTokenRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "KubernetesUserNamePasswordDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/KubernetesAuthCredentialDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "LocalConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "default": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "NewRelicConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiKeyRef", "newRelicAccountId", "url"],
          "properties": {
            "newRelicAccountId": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "apiKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "NexusAuthCredentials": {
      "type": "object"
    },
    "NexusAuthentication": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["UsernamePassword", "Anonymous"]
        },
        "spec": {
          "$ref": "#/definitions/NexusAuthCredentials"
        }
      }
    },
    "NexusConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["nexusServerUrl", "version"],
          "properties": {
            "nexusServerUrl": {
              "type": "string"
            },
            "version": {
              "type": "string"
            },
            "auth": {
              "$ref": "#/definitions/NexusAuthentication"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "NexusUsernamePasswordAuth": {
      "allOf": [
        {
          "$ref": "#/definitions/NexusAuthCredentials"
        },
        {
          "type": "object",
          "required": ["passwordRef"],
          "properties": {
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "OnboardingRequestDTO": {
      "type": "object",
      "properties": {
        "connectorIdentifier": {
          "type": "string"
        },
        "tracingId": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "dataCollectionRequest": {
          "$ref": "#/definitions/DataCollectionRequest"
        }
      }
    },
    "PagerDutyConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["apiTokenRef"],
          "properties": {
            "apiTokenRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PrometheusConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "SecretRefData": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "scope": {
          "type": "string",
          "enum": ["account", "org", "project", "unknown"]
        },
        "decryptedValue": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "null": {
          "type": "boolean"
        }
      }
    },
    "ServiceNowConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["passwordRef", "serviceNowUrl"],
          "properties": {
            "serviceNowUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "usernameRef": {
              "type": "string"
            },
            "passwordRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "SplunkConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["accountId", "passwordRef", "splunkUrl"],
          "properties": {
            "splunkUrl": {
              "type": "string"
            },
            "username": {
              "type": "string"
            },
            "accountId": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "passwordRef": {
              "type": "string"
            }
          }
        }
      ]
    },
    "SumoLogicConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "required": ["accessIdRef", "accessKeyRef", "url"],
          "properties": {
            "url": {
              "type": "string"
            },
            "accessIdRef": {
              "type": "string"
            },
            "accessKeyRef": {
              "type": "string"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "VaultConnectorDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ConnectorConfigDTO"
        },
        {
          "type": "object",
          "properties": {
            "authToken": {
              "type": "string"
            },
            "basePath": {
              "type": "string"
            },
            "vaultUrl": {
              "type": "string"
            },
            "renewalIntervalMinutes": {
              "type": "integer",
              "format": "int64"
            },
            "secretEngineManuallyConfigured": {
              "type": "boolean"
            },
            "secretEngineName": {
              "type": "string"
            },
            "appRoleId": {
              "type": "string"
            },
            "secretId": {
              "type": "string"
            },
            "secretEngineVersion": {
              "type": "integer",
              "format": "int32"
            },
            "delegateSelectors": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string"
              }
            },
            "namespace": {
              "type": "string"
            },
            "sinkPath": {
              "type": "string"
            },
            "useVaultAgent": {
              "type": "boolean"
            },
            "default": {
              "type": "boolean"
            },
            "readOnly": {
              "type": "boolean"
            },
            "accessType": {
              "type": "string",
              "enum": ["APP_ROLE", "TOKEN", "VAULT_AGENT"]
            }
          }
        }
      ]
    },
    "PagerDutyServiceDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RestResponseListPagerDutyServiceDetail": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PagerDutyServiceDetail"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SampleDataDTO": {
      "type": "object",
      "required": ["groupName", "jsonResponse", "metricValueJSONPath", "timestampJSONPath"],
      "properties": {
        "jsonResponse": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "metricValueJSONPath": {
          "type": "string"
        },
        "timestampJSONPath": {
          "type": "string"
        },
        "timestampFormat": {
          "type": "string"
        }
      }
    },
    "PrometheusSampleData": {
      "type": "object",
      "properties": {
        "metricDetails": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPoint"
          }
        }
      }
    },
    "ResponseListPrometheusSampleData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrometheusSampleData"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "DataPoints": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double"
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RestResponseTimeGraphResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TimeGraphResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeGraphResponse": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "dataPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPoints"
          }
        }
      }
    },
    "RatioSLIMetricSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/SLIMetricSpec"
        },
        {
          "type": "object",
          "required": ["eventType", "metric1", "metric2", "thresholdType", "thresholdValue"],
          "properties": {
            "eventType": {
              "type": "string",
              "enum": ["Good", "Bad"]
            },
            "metric1": {
              "type": "string"
            },
            "metric2": {
              "type": "string"
            },
            "thresholdValue": {
              "type": "number",
              "format": "double"
            },
            "thresholdType": {
              "type": "string",
              "enum": [">", "<", ">=", "<="]
            }
          }
        }
      ]
    },
    "SLIMetricSpec": {
      "type": "object"
    },
    "ServiceLevelIndicatorDTO": {
      "type": "object",
      "required": ["sliMissingDataType", "spec", "type"],
      "properties": {
        "name": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["Availability", "Latency"]
        },
        "spec": {
          "$ref": "#/definitions/ServiceLevelIndicatorSpec"
        },
        "sliMissingDataType": {
          "type": "string",
          "enum": ["Good", "Bad", "Ignore"]
        },
        "healthSourceRef": {
          "type": "string"
        }
      }
    },
    "ServiceLevelIndicatorSpec": {
      "type": "object",
      "required": ["spec"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Threshold", "Ratio"]
        },
        "spec": {
          "$ref": "#/definitions/SLIMetricSpec"
        }
      }
    },
    "ThresholdSLIMetricSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/SLIMetricSpec"
        },
        {
          "type": "object",
          "required": ["metric1", "thresholdType", "thresholdValue"],
          "properties": {
            "metric1": {
              "type": "string"
            },
            "thresholdValue": {
              "type": "number",
              "format": "double"
            },
            "thresholdType": {
              "type": "string",
              "enum": [">", "<", ">=", "<="]
            }
          }
        }
      ]
    },
    "MetricGraph": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "dataPoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPoints"
          }
        },
        "metricName": {
          "type": "string"
        },
        "metricIdentifier": {
          "type": "string"
        }
      }
    },
    "RestResponseSLIOnboardingGraphs": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/SLIOnboardingGraphs"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SLIOnboardingGraphs": {
      "type": "object",
      "properties": {
        "sliGraph": {
          "$ref": "#/definitions/TimeGraphResponse"
        },
        "metricGraphs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetricGraph"
          }
        }
      }
    },
    "RestResponseListSplunkSavedSearch": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SplunkSavedSearch"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SplunkSavedSearch": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "searchQuery": {
          "type": "string"
        }
      }
    },
    "RestResponseListLinkedHashMap": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "PageStackdriverDashboardDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackdriverDashboardDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponsePageStackdriverDashboardDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageStackdriverDashboardDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "StackdriverDashboardDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "DataSet": {
      "type": "object",
      "properties": {
        "timeSeriesQuery": {
          "type": "object"
        },
        "metricName": {
          "type": "string"
        }
      }
    },
    "ResponseListStackdriverDashboardDetail": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackdriverDashboardDetail"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "StackdriverDashboardDetail": {
      "type": "object",
      "properties": {
        "widgetName": {
          "type": "string"
        },
        "dataSetList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSet"
          }
        }
      }
    },
    "ResponseSetTimeSeriesSampleDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TimeSeriesSampleDTO"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "MetricData": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        }
      }
    },
    "RestResponseTimeSeriesTestDataDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/TimeSeriesTestDataDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesTestDataDTO": {
      "type": "object",
      "properties": {
        "cvConfigId": {
          "type": "string"
        },
        "transactionMetricValues": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          }
        },
        "metricGroupValues": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricData"
              }
            }
          }
        }
      }
    },
    "PagerDutyIncidentDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "urgency": {
          "type": "string"
        },
        "html_url": {
          "type": "string",
          "readOnly": true
        },
        "priority": {
          "$ref": "#/definitions/PagerDutyObject"
        },
        "assignees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PagerDutyObject"
          }
        },
        "escalation_policy": {
          "readOnly": true,
          "$ref": "#/definitions/PagerDutyObject"
        }
      }
    },
    "PagerDutyObject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "html_url": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PagerDutyWebhookEvent": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/PagerDutyWebhookEventDTO"
        }
      }
    },
    "PagerDutyWebhookEventDTO": {
      "type": "object",
      "properties": {
        "event_type": {
          "type": "string",
          "readOnly": true
        },
        "occurred_at": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "data": {
          "$ref": "#/definitions/PagerDutyIncidentDTO"
        }
      }
    },
    "HeatMapDTO": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "riskScore": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RestResponseMapCVMonitoringCategorySortedSetHeatMapDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "uniqueItems": true,
            "items": {
              "$ref": "#/definitions/HeatMapDTO"
            }
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AnalysisRisk": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "risk": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EnvSummary": {
      "type": "object",
      "properties": {
        "riskScore": {
          "type": "integer",
          "format": "int32"
        },
        "envName": {
          "type": "string"
        },
        "envIdentifier": {
          "type": "string"
        },
        "serviceSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceSummary"
          }
        }
      }
    },
    "RestResponseRiskSummaryPopoverDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/RiskSummaryPopoverDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RiskSummaryPopoverDTO": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "enum": ["PERFORMANCE", "ERRORS", "INFRASTRUCTURE"]
        },
        "envSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvSummary"
          }
        }
      }
    },
    "ServiceSummary": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "serviceIdentifier": {
          "type": "string"
        },
        "risk": {
          "type": "integer",
          "format": "int32"
        },
        "analysisRisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalysisRisk"
          }
        }
      }
    },
    "CategoryRisksDTO": {
      "type": "object",
      "properties": {
        "startTimeEpoch": {
          "type": "integer",
          "format": "int64"
        },
        "endTimeEpoch": {
          "type": "integer",
          "format": "int64"
        },
        "categoryRisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryRisk"
          }
        },
        "hasConfigsSetup": {
          "type": "boolean"
        }
      }
    },
    "RestResponseCategoryRisksDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/CategoryRisksDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "EnvServiceRiskDTO": {
      "type": "object",
      "properties": {
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "envIdentifier": {
          "type": "string"
        },
        "risk": {
          "type": "integer",
          "format": "int32"
        },
        "serviceRisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRisk"
          }
        }
      }
    },
    "RestResponseListEnvServiceRiskDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvServiceRiskDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceRisk": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "serviceIdentifier": {
          "type": "string"
        },
        "risk": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AnalyzedLogDataDTO": {
      "type": "object",
      "properties": {
        "projectIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "environmentIdentifier": {
          "type": "string"
        },
        "serviceIdentifier": {
          "type": "string"
        },
        "logData": {
          "$ref": "#/definitions/LogData"
        }
      }
    },
    "FrequencyDTO": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LogData": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "label": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "riskScore": {
          "type": "number",
          "format": "double"
        },
        "riskStatus": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "trend": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FrequencyDTO"
          }
        },
        "tag": {
          "type": "string",
          "enum": ["KNOWN", "UNEXPECTED", "UNKNOWN"]
        }
      }
    },
    "PageAnalyzedLogDataDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyzedLogDataDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageAnalyzedLogDataDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PageAnalyzedLogDataDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "CountByTag": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "enum": ["KNOWN", "UNEXPECTED", "UNKNOWN"]
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LogDataByTag": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "countByTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountByTag"
          }
        }
      }
    },
    "RestResponseSortedSetLogDataByTag": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/LogDataByTag"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "LiveMonitoringLogAnalysisClusterDTO": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "risk": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "x": {
          "type": "number",
          "format": "double"
        },
        "y": {
          "type": "number",
          "format": "double"
        },
        "tag": {
          "type": "string",
          "enum": ["KNOWN", "UNEXPECTED", "UNKNOWN"]
        }
      }
    },
    "RestResponseListLiveMonitoringLogAnalysisClusterDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiveMonitoringLogAnalysisClusterDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "Edge": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "RestResponseServiceDependencyGraphDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServiceDependencyGraphDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ServiceDependencyGraphDTO": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceSummaryDetails"
          }
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edge"
          }
        }
      }
    },
    "ServiceSummaryDetails": {
      "type": "object",
      "properties": {
        "identifierRef": {
          "type": "string"
        },
        "serviceRef": {
          "type": "string"
        },
        "serviceName": {
          "type": "string"
        },
        "environmentRef": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "riskScore": {
          "type": "number",
          "format": "double"
        },
        "riskLevel": {
          "type": "string",
          "enum": ["NO_DATA", "NO_ANALYSIS", "HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY"]
        },
        "riskData": {
          "$ref": "#/definitions/RiskData"
        },
        "type": {
          "type": "string",
          "enum": ["Application", "Infrastructure"]
        }
      }
    },
    "PageTimeSeriesMetricDataDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesMetricDataDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "RestResponsePageTimeSeriesMetricDataDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/PageTimeSeriesMetricDataDTO"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TimeSeriesMetricDataDTO": {
      "type": "object",
      "properties": {
        "projectIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "environmentIdentifier": {
          "type": "string"
        },
        "serviceIdentifier": {
          "type": "string"
        },
        "metricType": {
          "type": "string",
          "enum": ["INFRA", "RESP_TIME", "THROUGHPUT", "ERROR", "APDEX", "OTHER"]
        },
        "dataSourceType": {
          "type": "string",
          "enum": [
            "APP_DYNAMICS",
            "SPLUNK",
            "STACKDRIVER",
            "STACKDRIVER_LOG",
            "KUBERNETES",
            "NEW_RELIC",
            "PROMETHEUS",
            "DATADOG_METRICS",
            "DATADOG_LOG",
            "CUSTOM_HEALTH"
          ]
        },
        "category": {
          "type": "string",
          "enum": ["PERFORMANCE", "ERRORS", "INFRASTRUCTURE"]
        },
        "groupName": {
          "type": "string"
        },
        "metricName": {
          "type": "string"
        },
        "metricDataList": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MetricData"
          }
        }
      }
    },
    "BurnRate": {
      "type": "object",
      "required": ["currentRatePercentage"],
      "properties": {
        "currentRatePercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "PageSLODashboardWidget": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SLODashboardWidget"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "Point": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponsePageSLODashboardWidget": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageSLODashboardWidget"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "SLODashboardWidget": {
      "type": "object",
      "required": [
        "burnRate",
        "currentPeriodEndTime",
        "currentPeriodLengthDays",
        "currentPeriodStartTime",
        "environmentIdentifier",
        "errorBudgetBurndown",
        "errorBudgetRemaining",
        "errorBudgetRemainingPercentage",
        "errorBudgetRisk",
        "healthSourceIdentifier",
        "healthSourceName",
        "monitoredServiceIdentifier",
        "monitoredServiceName",
        "serviceIdentifier",
        "sloIdentifier",
        "sloPerformanceTrend",
        "sloTargetPercentage",
        "sloTargetType",
        "timeRemainingDays",
        "title",
        "totalErrorBudget",
        "type"
      ],
      "properties": {
        "sloIdentifier": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "monitoredServiceIdentifier": {
          "type": "string"
        },
        "monitoredServiceName": {
          "type": "string"
        },
        "healthSourceIdentifier": {
          "type": "string"
        },
        "healthSourceName": {
          "type": "string"
        },
        "serviceIdentifier": {
          "type": "string"
        },
        "environmentIdentifier": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": ["Availability", "Latency"]
        },
        "burnRate": {
          "$ref": "#/definitions/BurnRate"
        },
        "timeRemainingDays": {
          "type": "integer",
          "format": "int32"
        },
        "errorBudgetRemainingPercentage": {
          "type": "number",
          "format": "double"
        },
        "errorBudgetRemaining": {
          "type": "integer",
          "format": "int32"
        },
        "totalErrorBudget": {
          "type": "integer",
          "format": "int32"
        },
        "sloTargetType": {
          "type": "string",
          "enum": ["Rolling", "Calender"]
        },
        "currentPeriodLengthDays": {
          "type": "integer",
          "format": "int32"
        },
        "currentPeriodStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "currentPeriodEndTime": {
          "type": "integer",
          "format": "int64"
        },
        "sloTargetPercentage": {
          "type": "number",
          "format": "double"
        },
        "errorBudgetBurndown": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Point"
          }
        },
        "sloPerformanceTrend": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Point"
          }
        },
        "errorBudgetRisk": {
          "type": "string",
          "enum": ["HEALTHY", "OBSERVE", "NEED_ATTENTION", "UNHEALTHY", "EXHAUSTED"]
        },
        "recalculatingSLI": {
          "type": "boolean"
        }
      }
    },
    "ResponseSLORiskCountResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/SLORiskCountResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RiskCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "displayName": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        }
      }
    },
    "SLORiskCountResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "riskCounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiskCount"
          }
        }
      }
    },
    "CalenderSLOTargetSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/SLOTargetSpec"
        },
        {
          "type": "object",
          "required": ["spec"],
          "properties": {
            "spec": {
              "$ref": "#/definitions/CalenderSpec"
            },
            "type": {
              "type": "string",
              "enum": ["Weekly", "Monthly", "Quarterly"]
            }
          }
        }
      ]
    },
    "CalenderSpec": {
      "type": "object"
    },
    "MonthlyCalenderSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/CalenderSpec"
        },
        {
          "type": "object",
          "required": ["dayOfMonth"],
          "properties": {
            "dayOfMonth": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "QuarterlyCalenderSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/CalenderSpec"
        },
        {
          "type": "object"
        }
      ]
    },
    "RestResponseServiceLevelObjectiveResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ServiceLevelObjectiveResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RollingSLOTargetSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/SLOTargetSpec"
        },
        {
          "type": "object",
          "required": ["periodLength"],
          "properties": {
            "periodLength": {
              "type": "string"
            }
          }
        }
      ]
    },
    "SLOTarget": {
      "type": "object",
      "required": ["sloTargetPercentage", "spec"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["Rolling", "Calender"]
        },
        "sloTargetPercentage": {
          "type": "number",
          "format": "double"
        },
        "spec": {
          "$ref": "#/definitions/SLOTargetSpec"
        }
      }
    },
    "SLOTargetSpec": {
      "type": "object"
    },
    "ServiceLevelObjectiveDTO": {
      "type": "object",
      "required": [
        "healthSourceRef",
        "identifier",
        "monitoredServiceRef",
        "name",
        "orgIdentifier",
        "projectIdentifier",
        "serviceLevelIndicators",
        "target",
        "userJourneyRef"
      ],
      "properties": {
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "userJourneyRef": {
          "type": "string"
        },
        "monitoredServiceRef": {
          "type": "string"
        },
        "healthSourceRef": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["Availability", "Latency"]
        },
        "serviceLevelIndicators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceLevelIndicatorDTO"
          }
        },
        "target": {
          "$ref": "#/definitions/SLOTarget"
        }
      }
    },
    "ServiceLevelObjectiveResponse": {
      "type": "object",
      "required": ["serviceLevelObjective"],
      "properties": {
        "serviceLevelObjective": {
          "readOnly": true,
          "$ref": "#/definitions/ServiceLevelObjectiveDTO"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "WeeklyCalendarSpec": {
      "allOf": [
        {
          "$ref": "#/definitions/CalenderSpec"
        },
        {
          "type": "object",
          "required": ["dayOfWeek"],
          "properties": {
            "dayOfWeek": {
              "type": "string",
              "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
            }
          }
        }
      ]
    },
    "PageServiceLevelObjectiveResponse": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceLevelObjectiveResponse"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponsePageServiceLevelObjectiveResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageServiceLevelObjectiveResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RestResponseUserJourneyResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/UserJourneyResponse"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "UserJourneyDTO": {
      "type": "object",
      "required": ["identifier", "name"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UserJourneyResponse": {
      "type": "object",
      "required": ["userJourney"],
      "properties": {
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        },
        "userJourney": {
          "readOnly": true,
          "$ref": "#/definitions/UserJourneyDTO"
        }
      }
    },
    "PageUserJourneyResponse": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJourneyResponse"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ResponsePageUserJourneyResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageUserJourneyResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RestResponseListTestVerificationBaselineExecutionDTO": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestVerificationBaselineExecutionDTO"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "TestVerificationBaselineExecutionDTO": {
      "type": "object",
      "properties": {
        "verificationJobInstanceId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
