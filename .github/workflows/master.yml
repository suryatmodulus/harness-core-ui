name: master
on:
  push:
    branches:
      - master

jobs:
  coverage:
    name: Grouped Code Coverage
    if: ${{ (github.event.pusher.name != 'bot-harness') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Up Node
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Set up GitHub Package Registry token
        run: |
          echo @harness:registry=https://npm.pkg.github.com > .npmrc
          echo "//npm.pkg.github.com/:_authToken="$GIT_BOT_TOKEN >> .npmrc
          echo always-auth=true >> .npmrc
        env:
          GIT_BOT_TOKEN: ${{ secrets.GIT_BOT_TOKEN }}

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install Packages
        run: yarn

      - name: Run tests and coverage
        run: yarn coverage --config jest.coverage.config.js

      - name: Prepare grouped coverage report
        run: |
          npx jest-grouped-coverage -i coverage/coverage-summary.json -c coverage-groups.json -u 1 -f md
          npx prettier --write coverage/grouped-coverage-report/grouped_summary.md

      - name: Checkout wiki code
        uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}.wiki
          path: markdown

      - name: Publish report to wiki
        run: |
          cp coverage/grouped-coverage-report/grouped_summary.md markdown/Coverage.md
          cd markdown

          ed -s Coverage.md << EOL
          1i
          **Last updated at:** $(env TZ=PDT8PST date +"%x %X %Z") ($(env TZ=Asia/Kolkata date +"%x %X %Z"))

          **Report for Commit**: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})

          .
          w
          q
          EOL

          GIT_USER=$(curl --silent -H "Authorization: token ${{ secrets.GIT_BOT_TOKEN }}" -X GET https://api.github.com/user)
          GIT_USER_NAME=$(echo $GIT_USER | tr '\r\n' ' ' | jq -r .name)
          GIT_USER_EMAIL=$(echo $GIT_USER | tr '\r\n' ' ' | jq -r .email)
          git config user.name $GIT_USER_NAME
          git config user.email $GIT_USER_EMAIL
          git add Coverage.md
          git commit -m "Update Coverage" && git push
